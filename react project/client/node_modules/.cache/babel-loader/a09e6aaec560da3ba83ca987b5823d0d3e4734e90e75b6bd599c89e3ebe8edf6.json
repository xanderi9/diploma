{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react project\\\\client\\\\src\\\\components\\\\Tables\\\\Filter\\\\Filter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAsyncDebounce } from 'react-table';\nimport { createPortal } from 'react-dom';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport filter from '../../../img/filter.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Filter = ({\n  column,\n  column: {\n    filterValue,\n    setFilter,\n    preFilteredRows,\n    id,\n    headerProps,\n    canSort,\n    toggleSortBy\n  }\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [buttonCoordinates, setButtonCoordinates] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (isOpen) {\n      const handleKeyDown = e => {\n        if (e.key === 'Escape') {\n          setIsOpen(false);\n        }\n      };\n      document.addEventListener('keydown', handleKeyDown);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n      };\n    }\n  }, [isOpen]);\n  const toggleModal = () => {\n    setIsOpen(!isOpen);\n  };\n  const applyFilter = value => {\n    setFilter(value || undefined);\n    toggleModal();\n  };\n  const options = React.useMemo(() => {\n    const options = new Set();\n    preFilteredRows.forEach(row => {\n      options.add(row.values[id]);\n    });\n    return [...options.values()];\n  }, [id, preFilteredRows]);\n  const onChange = useAsyncDebounce(value => {\n    applyFilter(value);\n  }, 200);\n  const handleButtonClick = event => {\n    const buttonRect = event.target.getBoundingClientRect();\n    setButtonCoordinates({\n      x: buttonRect.x,\n      y: buttonRect.bottom\n    });\n    toggleModal();\n  };\n  const handleSortChange = direction => {\n    toggleSortBy(!column.isSortedDesc, false); // Обновляем сортировку в соответствии с переданным направлением\n    toggleModal(); // Закрываем модальное окно после изменения сортировки\n  };\n  const modalElement = isOpen ? /*#__PURE__*/_jsxDEV(Modal, {\n    show: isOpen,\n    onHide: toggleModal,\n    centered: true,\n    backdrop: false,\n    transition: false,\n    style: {\n      position: 'absolute',\n      top: buttonCoordinates.y,\n      left: buttonCoordinates.x,\n      maxWidth: '200px',\n      transition: 'none' // Убираем анимацию\n    },\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        value: filterValue,\n        onChange: e => onChange(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), canSort && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          size: \"sm\",\n          onClick: () => handleSortChange('asc'),\n          children: \"Sort Asc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          size: \"sm\",\n          onClick: () => handleSortChange('desc'),\n          children: \"Sort Desc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: toggleModal,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => applyFilter(''),\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        display: 'inline-block'\n      },\n      ...headerProps,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"none\",\n        onClick: handleButtonClick,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: filter,\n          width: 10,\n          height: 10,\n          alt: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/createPortal(modalElement, document.body)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Filter, \"5w3kXr14ItOdpXWBBLkjhQJv2zk=\", false, function () {\n  return [useAsyncDebounce];\n});\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useState","useEffect","useAsyncDebounce","createPortal","Modal","Button","Form","filter","jsxDEV","_jsxDEV","Fragment","_Fragment","Filter","column","filterValue","setFilter","preFilteredRows","id","headerProps","canSort","toggleSortBy","_s","isOpen","setIsOpen","buttonCoordinates","setButtonCoordinates","x","y","handleKeyDown","e","key","document","addEventListener","removeEventListener","toggleModal","applyFilter","value","undefined","options","useMemo","Set","forEach","row","add","values","onChange","handleButtonClick","event","buttonRect","target","getBoundingClientRect","bottom","handleSortChange","direction","isSortedDesc","modalElement","show","onHide","centered","backdrop","transition","style","position","top","left","maxWidth","children","Header","closeButton","fileName","_jsxFileName","lineNumber","columnNumber","Body","Control","as","map","option","index","marginTop","variant","size","onClick","Footer","display","src","width","height","alt","body","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/react project/client/src/components/Tables/Filter/Filter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAsyncDebounce } from 'react-table';\r\nimport { createPortal } from 'react-dom';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\n\r\nimport filter from '../../../img/filter.png';\r\n\r\nconst Filter = ({\r\n  column,\r\n  column: { filterValue, setFilter, preFilteredRows, id, headerProps, canSort, toggleSortBy },\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [buttonCoordinates, setButtonCoordinates] = useState({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      const handleKeyDown = (e) => {\r\n        if (e.key === 'Escape') {\r\n          setIsOpen(false);\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      };\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const toggleModal = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const applyFilter = (value) => {\r\n    setFilter(value || undefined);\r\n    toggleModal();\r\n  };\r\n\r\n  const options = React.useMemo(() => {\r\n    const options = new Set();\r\n    preFilteredRows.forEach((row) => {\r\n      options.add(row.values[id]);\r\n    });\r\n    return [...options.values()];\r\n  }, [id, preFilteredRows]);\r\n\r\n  const onChange = useAsyncDebounce((value) => {\r\n    applyFilter(value);\r\n  }, 200);\r\n\r\n  const handleButtonClick = (event) => {\r\n    const buttonRect = event.target.getBoundingClientRect();\r\n    setButtonCoordinates({ x: buttonRect.x, y: buttonRect.bottom });\r\n    toggleModal();\r\n  };\r\n\r\n  const handleSortChange = (direction) => {\r\n    toggleSortBy(!column.isSortedDesc, false); // Обновляем сортировку в соответствии с переданным направлением\r\n    toggleModal(); // Закрываем модальное окно после изменения сортировки\r\n  };\r\n\r\n  const modalElement = isOpen ? (\r\n    <Modal\r\n      show={isOpen}\r\n      onHide={toggleModal}\r\n      centered\r\n      backdrop={false}\r\n      transition={false}\r\n      style={{\r\n        position: 'absolute',\r\n        top: buttonCoordinates.y,\r\n        left: buttonCoordinates.x,\r\n        maxWidth: '200px',\r\n        transition: 'none', // Убираем анимацию\r\n      }}\r\n    >\r\n      <Modal.Header closeButton></Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Control as=\"select\" value={filterValue} onChange={(e) => onChange(e.target.value)}>\r\n          <option value=\"\">All</option>\r\n          {options.map((option, index) => (\r\n            <option key={index} value={option}>\r\n              {option}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n        {canSort && (\r\n          <div style={{ marginTop: '10px' }}>\r\n            <Button variant=\"outline-secondary\" size=\"sm\" onClick={() => handleSortChange('asc')}>\r\n              Sort Asc\r\n            </Button>{' '}\r\n            <Button variant=\"outline-secondary\" size=\"sm\" onClick={() => handleSortChange('desc')}>\r\n              Sort Desc\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={toggleModal}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={() => applyFilter('')}>\r\n          Clear\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  ) : null;\r\n\r\n  return (\r\n    <>\r\n      <div style={{ position: 'relative', display: 'inline-block' }} {...headerProps}>\r\n        <Button variant=\"none\" onClick={handleButtonClick}>\r\n          <img src={filter} width={10} height={10} alt=\"Filter\" />\r\n        </Button>\r\n        {createPortal(modalElement, document.body)}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}