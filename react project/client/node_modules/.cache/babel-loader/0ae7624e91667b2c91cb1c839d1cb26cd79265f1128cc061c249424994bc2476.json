{"ast":null,"code":"import petrovich from 'petrovich';\nimport { saveAs } from 'file-saver';\nimport PizZip from 'pizzip';\nimport Docxtemplater from 'docxtemplater';\nimport word from './protocol.docx';\nconst generateProtocolsFunction = async ({\n  composition_of_sec,\n  selectedGroup,\n  groupData,\n  data,\n  requests,\n  group_list\n}) => {\n  console.log(requests);\n  console.log(groupData);\n  console.log(selectedGroup);\n  const chairman = composition_of_sec.member_of_SEC.find(comp => comp.chairman_of_SEC === true);\n  const chairman_ei = composition_of_sec.employee_information.find(comp => comp.user_id === chairman.member_of_SEC.id);\n  const members_list = composition_of_sec.member_of_SEC.filter(sec => sec.chairman_of_SEC === false).map(member => {\n    const member_ei = composition_of_sec.employee_information.find(comp => comp.user_id === member.member_of_SEC.id);\n    console.log(member_ei);\n    return {\n      ...member,\n      employee_information: member_ei\n    };\n  });\n  const group = group_list.find(gr => gr.name === selectedGroup);\n\n  // Функция для получения инициалов (Фамилия И.О.)\n  const getInitials = (firstName, patronymic) => {\n    return `${firstName.charAt(0)}. ${patronymic.charAt(0)}.`;\n  };\n\n  // Функция для форматирования даты\n  const formatDate = inputDate => {\n    const date = new Date(inputDate);\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    return `${day < 10 ? '0' + day : day}.${month < 10 ? '0' + month : month}.${year}`;\n  };\n  try {\n    // Загружаем шаблон документа\n    const response = await fetch(word); // Путь к вашему файлу шаблона\n    if (!response.ok) throw new Error('Ошибка сети');\n    const arrayBuffer = await response.arrayBuffer();\n\n    // Проходимся по каждому элементу groupData (предполагаем, что это массив)\n    for (const item of groupData) {\n      const student = item.user;\n      const request = requests.request_list.find(req => req.student.username === student.username);\n      console.log(request);\n      if (!request) {\n        console.warn(`Для студента ${student.last_name} ${student.first_name} не найдена принятая заявка.`);\n        continue; // Пропускаем студента без принятой заявки\n      }\n      const personalProtection = requests.personal_work_protection_list.find(pp => pp.request === request.id);\n      console.log(personalProtection);\n      if (!personalProtection) {\n        console.warn(`Для студента ${student.last_name} ${student.first_name} не найдена персональная защита.`);\n        continue; // Пропускаем студента без персональной защиты\n      }\n      const generalProtection = requests.general_work_protection_list.find(gp => gp.id === personalProtection.work_protection);\n      if (!generalProtection) {\n        console.warn(`Для студента ${student.last_name} ${student.first_name} не найдена общая защита.`);\n        continue; // Пропускаем студента без общей защиты\n      }\n      const teacher = request.teacher;\n      const theme = request.theme;\n\n      // Вычисляем время начала и окончания защиты\n      const [hours_start, min_start] = personalProtection.personal_time.split(':');\n      const startTime = new Date();\n      startTime.setHours(hours_start);\n      startTime.setMinutes(min_start);\n      startTime.setMinutes(startTime.getMinutes() + 20);\n      const hours_end = startTime.getHours();\n      const min_end = startTime.getMinutes();\n\n      // Формируем объект с данными для подстановки в шаблон\n      const dataToRender = {\n        protocol_number: generalProtection.protocol_number,\n        group_protection_date: new Date(generalProtection.date).toLocaleDateString('ru-RU'),\n        hours_start: hours_start,\n        min_start: min_start,\n        hours_end: hours_end,\n        min_end: min_end,\n        chairman_last_name: chairman.member_of_SEC.last_name,\n        chairman_np: getInitials(chairman.member_of_SEC.first_name, chairman.member_of_SEC.patronymic),\n        chairman_degree: chairman_ei.academic_degree,\n        chairman_job_title: chairman_ei.job_title,\n        members_list: members_list.map(member => ({\n          members_last_name: member.member_of_SEC.last_name,\n          members_np: getInitials(member.member_of_SEC.first_name, member.member_of_SEC.patronymic),\n          members_degree: member.employee_information.academic_degree || '',\n          members_job_title: member.employee_information.job_title,\n          members_place_of_work: member.employee_information.place_of_work\n        })),\n        student_fullname: `${student.last_name} ${student.first_name} ${student.patronymic}`,\n        specialityCode: group.speciality.code,\n        specialtityProgram: group.speciality.name,\n        theme: theme ? theme.name : '',\n        teacher_last_name: teacher.last_name,\n        teacher_np: getInitials(teacher.first_name, teacher.patronymic),\n        teacher_degree: teacher.employee_information.academic_degree,\n        teacher_job_title: teacher.employee_information.job_title,\n        reviewer_last_name: theme && theme.reviewer ? theme.reviewer.user.last_name : '',\n        reviewer_np: theme && theme.reviewer ? getInitials(theme.reviewer.user.first_name, theme.reviewer.user.patronymic) : '',\n        reviewer_degree: theme && theme.reviewer ? theme.reviewer.employee_information.academic_degree : '',\n        reviewer_job_title: theme && theme.reviewer ? theme.reviewer.employee_information.job_title : '',\n        student_last_name: student.last_name,\n        student_np: getInitials(student.first_name, student.patronymic),\n        secretary_last_name: data.user.last_name,\n        secretary_np: getInitials(data.user.first_name, data.user.patronymic),\n        duration: 20\n      };\n\n      // Создаем новую инстанцию Docxtemplater для каждого студента\n      const zip = new PizZip(arrayBuffer);\n      const doc = new Docxtemplater(zip);\n      doc.setData(dataToRender);\n      doc.render();\n\n      // Генерируем файл и сохраняем его\n      const output = doc.getZip().generate({\n        type: 'blob'\n      });\n      saveAs(output, `Протокол_${student.last_name}_${student.first_name}.docx`);\n    }\n  } catch (error) {\n    console.error('Ошибка загрузки файла:', error);\n  }\n};\nexport default generateProtocolsFunction;","map":{"version":3,"names":["petrovich","saveAs","PizZip","Docxtemplater","word","generateProtocolsFunction","composition_of_sec","selectedGroup","groupData","data","requests","group_list","console","log","chairman","member_of_SEC","find","comp","chairman_of_SEC","chairman_ei","employee_information","user_id","id","members_list","filter","sec","map","member","member_ei","group","gr","name","getInitials","firstName","patronymic","charAt","formatDate","inputDate","date","Date","day","getDate","month","getMonth","year","getFullYear","response","fetch","ok","Error","arrayBuffer","item","student","user","request","request_list","req","username","warn","last_name","first_name","personalProtection","personal_work_protection_list","pp","generalProtection","general_work_protection_list","gp","work_protection","teacher","theme","hours_start","min_start","personal_time","split","startTime","setHours","setMinutes","getMinutes","hours_end","getHours","min_end","dataToRender","protocol_number","group_protection_date","toLocaleDateString","chairman_last_name","chairman_np","chairman_degree","academic_degree","chairman_job_title","job_title","members_last_name","members_np","members_degree","members_job_title","members_place_of_work","place_of_work","student_fullname","specialityCode","speciality","code","specialtityProgram","teacher_last_name","teacher_np","teacher_degree","teacher_job_title","reviewer_last_name","reviewer","reviewer_np","reviewer_degree","reviewer_job_title","student_last_name","student_np","secretary_last_name","secretary_np","duration","zip","doc","setData","render","output","getZip","generate","type","error"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/Forms/GenerateProtocols/GenerateProtocolFunction.js"],"sourcesContent":["import petrovich from 'petrovich';\r\nimport { saveAs } from 'file-saver';\r\nimport PizZip from 'pizzip';\r\nimport Docxtemplater from 'docxtemplater';\r\nimport word from './protocol.docx';\r\n\r\nconst generateProtocolsFunction = async ({ \r\n    composition_of_sec, \r\n    selectedGroup,\r\n    groupData,\r\n    data,\r\n    requests,\r\n    group_list\r\n}) => {\r\nconsole.log(requests)\r\nconsole.log(groupData)\r\nconsole.log(selectedGroup)\r\n    const chairman = composition_of_sec.member_of_SEC.find(comp => comp.chairman_of_SEC === true);\r\n    const chairman_ei = composition_of_sec.employee_information.find(comp=> comp.user_id ===  chairman.member_of_SEC.id  )\r\n    const members_list = composition_of_sec.member_of_SEC.filter(sec => sec.chairman_of_SEC === false).map(member => {\r\n        const member_ei = composition_of_sec.employee_information.find(comp => comp.user_id === member.member_of_SEC.id);\r\n        console.log(member_ei)\r\n        return {\r\n            ...member,\r\n            employee_information: member_ei\r\n        };\r\n    });\r\n    \r\n    const group =  group_list.find(gr => gr.name===selectedGroup)\r\n\r\n    // Функция для получения инициалов (Фамилия И.О.)\r\n    const getInitials = (firstName, patronymic) => {\r\n        return `${firstName.charAt(0)}. ${patronymic.charAt(0)}.`;\r\n    };\r\n\r\n    // Функция для форматирования даты\r\n    const formatDate = (inputDate) => {\r\n        const date = new Date(inputDate);\r\n        const day = date.getDate();\r\n        const month = date.getMonth() + 1;\r\n        const year = date.getFullYear();\r\n        return `${day < 10 ? '0' + day : day}.${month < 10 ? '0' + month : month}.${year}`;\r\n    };\r\n\r\n    try {\r\n        // Загружаем шаблон документа\r\n        const response = await fetch(word); // Путь к вашему файлу шаблона\r\n        if (!response.ok) throw new Error('Ошибка сети');\r\n        const arrayBuffer = await response.arrayBuffer();\r\n\r\n        // Проходимся по каждому элементу groupData (предполагаем, что это массив)\r\n        for (const item of groupData) {\r\n            const student = item.user;\r\n        \r\n\r\n            const request = requests.request_list.find(req => req.student.username === student.username);\r\n            console.log(request)\r\n            if (!request) {\r\n                console.warn(`Для студента ${student.last_name} ${student.first_name} не найдена принятая заявка.`);\r\n                continue; // Пропускаем студента без принятой заявки\r\n            }\r\n\r\n            const personalProtection = requests.personal_work_protection_list.find(pp => pp.request === request.id);\r\n            console.log(personalProtection)\r\n            if (!personalProtection) {\r\n                console.warn(`Для студента ${student.last_name} ${student.first_name} не найдена персональная защита.`);\r\n                continue; // Пропускаем студента без персональной защиты\r\n            }\r\n\r\n            const generalProtection = requests.general_work_protection_list.find(gp => gp.id === personalProtection.work_protection);\r\n\r\n            if (!generalProtection) {\r\n                console.warn(`Для студента ${student.last_name} ${student.first_name} не найдена общая защита.`);\r\n                continue; // Пропускаем студента без общей защиты\r\n            }\r\n\r\n\r\n\r\n            const teacher = request.teacher;\r\n            const theme = request.theme;\r\n\r\n            // Вычисляем время начала и окончания защиты\r\n            const [hours_start, min_start] = personalProtection.personal_time.split(':');\r\n            const startTime = new Date();\r\n            startTime.setHours(hours_start);\r\n            startTime.setMinutes(min_start);\r\n            startTime.setMinutes(startTime.getMinutes() + 20);\r\n\r\n            const hours_end = startTime.getHours();\r\n            const min_end = startTime.getMinutes();\r\n\r\n            // Формируем объект с данными для подстановки в шаблон\r\n            const dataToRender = {\r\n                protocol_number: generalProtection.protocol_number,\r\n                group_protection_date: new Date(generalProtection.date).toLocaleDateString('ru-RU'),\r\n                hours_start: hours_start,\r\n                min_start: min_start,\r\n                hours_end: hours_end,\r\n                min_end: min_end,\r\n                chairman_last_name: chairman.member_of_SEC.last_name,\r\n                chairman_np: getInitials(chairman.member_of_SEC.first_name, chairman.member_of_SEC.patronymic),\r\n                chairman_degree: chairman_ei.academic_degree,\r\n                chairman_job_title: chairman_ei.job_title,\r\n                    members_list: members_list.map(member => ({\r\n                        members_last_name: member.member_of_SEC.last_name,\r\n                        members_np: getInitials(member.member_of_SEC.first_name, member.member_of_SEC.patronymic),\r\n                        members_degree: member.employee_information.academic_degree || '',\r\n                        members_job_title: member.employee_information.job_title,\r\n                        members_place_of_work: member.employee_information.place_of_work,\r\n           \r\n                })),\r\n                student_fullname: `${student.last_name} ${student.first_name} ${student.patronymic}`,\r\n                specialityCode: group.speciality.code,\r\n                specialtityProgram: group.speciality.name,\r\n                theme: theme ? theme.name : '',\r\n                teacher_last_name: teacher.last_name,\r\n                teacher_np: getInitials(teacher.first_name, teacher.patronymic),\r\n                teacher_degree: teacher.employee_information.academic_degree,\r\n                teacher_job_title: teacher.employee_information.job_title,\r\n                reviewer_last_name: theme && theme.reviewer ? theme.reviewer.user.last_name : '',\r\n                reviewer_np: theme && theme.reviewer ? getInitials(theme.reviewer.user.first_name, theme.reviewer.user.patronymic) : '',\r\n                reviewer_degree: theme && theme.reviewer ? theme.reviewer.employee_information.academic_degree : '',\r\n                reviewer_job_title: theme && theme.reviewer ? theme.reviewer.employee_information.job_title : '',\r\n                student_last_name: student.last_name,\r\n                student_np: getInitials(student.first_name, student.patronymic),\r\n                secretary_last_name: data.user.last_name,\r\n                secretary_np: getInitials(data.user.first_name, data.user.patronymic),\r\n                duration: 20,\r\n            };\r\n\r\n            // Создаем новую инстанцию Docxtemplater для каждого студента\r\n            const zip = new PizZip(arrayBuffer);\r\n            const doc = new Docxtemplater(zip);\r\n\r\n            doc.setData(dataToRender);\r\n            doc.render();\r\n\r\n            // Генерируем файл и сохраняем его\r\n            const output = doc.getZip().generate({ type: 'blob' });\r\n            saveAs(output, `Протокол_${student.last_name}_${student.first_name}.docx`);\r\n        }\r\n    } catch (error) {\r\n        console.error('Ошибка загрузки файла:', error);\r\n    }\r\n};\r\n\r\nexport default generateProtocolsFunction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}