{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\Tables\\\\SecretaryTableData\\\\SecretaryHugeTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { useTable, useFilters } from 'react-table';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport styles from '../../../container.module.css';\nimport Filter from '../Filter/Filter';\nimport hide_cell from '../../../img/hide_cell.png';\nimport BlockInfo from '../../BlockInfo/BlockInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SecretaryHugeTable({\n  info_for_table\n}) {\n  _s();\n  const isFirstRowEmpty = data => {\n    return data.length > 0 && Object.values(data[0]).every(cell => cell === null || cell === '');\n  };\n  const [tableData, setTableData] = useState(() => {\n    const data = info_for_table.requests;\n    if (isFirstRowEmpty(data)) {\n      return data.slice(1);\n    }\n    return data;\n  });\n  const [originalData] = useState(info_for_table.requests);\n  const [editableCell, setEditableCell] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [isColumnsModified, setIsColumnsModified] = useState(false);\n  const columns = useMemo(() => [{\n    Header: '№ п/п',\n    accessor: (row, index) => index + 1,\n    Filter: Filter\n  }, {\n    Header: 'ср.б.',\n    accessor: row => `${row.student.average_score}`,\n    Filter: Filter\n  }, {\n    Header: 'номер протокола',\n    accessor: row => `${row.workProtecton.protocol_number}`,\n    Filter: Filter\n  }, {\n    Header: 'дата протокола',\n    accessor: row => `${row.workProtecton.date}`,\n    Filter: Filter\n  }, {\n    Header: 'Фамилия, Имя, Отчество',\n    accessor: row => `${row.student.surname} ${row.student.name} ${row.student.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Тема',\n    accessor: row => `${row.theme.name}`,\n    Filter: Filter\n  }, {\n    Header: 'Руководитель',\n    accessor: row => `${row.teacher.surname} ${row.teacher.name} ${row.teacher.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Консультант',\n    accessor: row => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Рецензент',\n    accessor: row => `${row.reviewer.surname} ${row.reviewer.name} ${row.reviewer.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'организация',\n    accessor: row => `${row.theme.company.name} ${row.theme.company.last_name_of_responsible} ${row.theme.company.first_name_of_responsible} ${row.theme.company.patronymic_name_of_responsible} ${row.theme.company.job_title_of_resposible} ${row.theme.company.additional_information}`,\n    Filter: Filter\n  }, {\n    Header: 'номер зачетки',\n    accessor: row => `${row.student.record_book_number}`,\n    Filter: Filter\n  }, {\n    Header: 'Телефон',\n    accessor: row => `${row.student.phone}`,\n    Filter: Filter\n  }, {\n    Header: 'Email',\n    accessor: row => `${row.student.email}`,\n    Filter: Filter\n  }, {\n    Header: 'бюджет/платный',\n    accessor: row => `${row.student.basis_of_study}`,\n    Filter: Filter\n  }, {\n    Header: 'оценка на предзащите/ преддипломная практика',\n    accessor: row => `${row.preprotection_grade}`,\n    Filter: Filter\n  }, {\n    Header: 'оценка на защите',\n    accessor: row => `${row.workProtecton.final_grade}`,\n    Filter: Filter\n  }, {\n    Header: 'дата рождения',\n    accessor: row => `${row.student.date_of_birth}`,\n    Filter: Filter\n  }, {\n    Header: 'год окончания предыдущ образования',\n    accessor: row => `${row.student.year_of_prev_education_completion}`,\n    Filter: Filter\n  }, {\n    Header: 'форма предыдущего образования',\n    accessor: row => `${row.student.form_of_prev_education}`,\n    Filter: Filter\n  }, {\n    Header: 'год поступления',\n    accessor: row => `${row.student.year_of_admission}`,\n    Filter: Filter\n  }, {\n    Header: 'особые отметки',\n    accessor: row => `${row.student.special_marks}`,\n    Filter: Filter\n  }, {\n    Header: 'приказы',\n    columns: [{\n      Header: 'допуск',\n      accessor: 'orders.admission',\n      Filter: Filter\n    }, {\n      Header: 'тема',\n      accessor: 'orders.theme',\n      Filter: Filter\n    }, {\n      Header: 'изменение темы',\n      accessor: 'orders.theme_change',\n      Filter: Filter\n    }, {\n      Header: 'рецензент',\n      accessor: 'orders.reviewer',\n      Filter: Filter\n    }, {\n      Header: 'отчисление',\n      accessor: 'orders.expulsion',\n      Filter: Filter\n    }, {\n      Header: 'с какого числа отчисление',\n      accessor: 'orders.expulsion_date',\n      Filter: Filter\n    }]\n  }, {\n    Header: 'отметки о выполнении',\n    columns: [{\n      Header: 'долги',\n      accessor: row => `${row.student.number_of_debts}`,\n      Filter: Filter\n    }, {\n      Header: 'справка о выполнении уч. плана',\n      accessor: row => `${row.student.certificate_of_curriculum_completion}`,\n      Filter: Filter\n    }, {\n      Header: 'сдана зачетка',\n      accessor: row => `${row.student.record_book_submitted}`,\n      Filter: Filter\n    }, {\n      Header: 'сдана пояснительная записка',\n      accessor: row => row.explanatory_note_submitted ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'красный диплом',\n      accessor: row => row.student.diploma_with_honors ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'согласие на публикацию',\n      accessor: row => row.publication_agree ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'отзыв',\n      accessor: row => `${row.teacher_review}`,\n      Filter: Filter\n    }, {\n      Header: 'рецензия',\n      accessor: row => `${row.review}`,\n      Filter: Filter\n    }, {\n      Header: 'Акт о внедрении',\n      accessor: row => row.implementation_act ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'отчет о плагиате',\n      accessor: row => row.plagarism_report ? row.plagarism_report : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'заявление на последипломный отпуск',\n      accessor: row => row.student.application_for_postgraduate_leave ? row.student.application_for_postgraduate_leave : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'рекомендован к поступлению',\n      accessor: row => `${row.student.recommended_for_admission}`,\n      Filter: Filter\n    }]\n  }, {\n    Header: 'вид ВКР',\n    accessor: row => `${row.type_of_fqw}`,\n    Filter: Filter,\n    headerProps: {\n      rowSpan: 2\n    }\n  }, {\n    Header: 'ВКР по заявке',\n    accessor: row => `${row.theme.fqw_by_application}`,\n    Filter: Filter\n  }, {\n    Header: 'ВКР на англ. языке',\n    accessor: row => row.fqw_in_english ? 'да' : 'нет',\n    Filter: Filter\n  }, {\n    Header: 'ВКР рекомендовано',\n    accessor: row => `${row.fqw_recommended}`,\n    Filter: Filter\n  }, {\n    Header: 'наличие спец. условий',\n    accessor: row => row.special_conditions ? 'да' : 'нет',\n    Filter: Filter\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    allColumns,\n    toggleHideColumn\n  } = useTable({\n    columns,\n    data: tableData\n  }, useFilters);\n  const [editedCellValues, setEditedCellValues] = useState({});\n  const handleDoubleClick = (rowIndex, columnId, cellValue) => {\n    setEditableCell({\n      rowIndex,\n      columnId\n    });\n    setEditedCellValues({\n      ...editedCellValues,\n      [`${rowIndex}-${columnId}`]: cellValue\n    });\n  };\n  const handleCellChange = (e, rowIndex, columnId) => {\n    const {\n      value\n    } = e.target;\n    setEditedCellValues(prevState => ({\n      ...prevState,\n      [`${rowIndex}-${columnId}`]: value\n    }));\n  };\n  const handleBlur = (rowIndex, columnId) => {\n    const editedValue = editedCellValues[`${rowIndex}-${columnId}`];\n    const updatedData = tableData.map((row, index) => {\n      if (index === rowIndex) {\n        return {\n          ...row,\n          [columnId]: editedValue !== undefined ? editedValue : row[columnId]\n        };\n      }\n      return row;\n    });\n    setTableData(updatedData);\n    setEditableCell(null);\n  };\n  const handleSave = () => {\n    const worksheet = XLSX.utils.json_to_sheet(tableData);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');\n    const excelBuffer = XLSX.write(workbook, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    const data = new Blob([excelBuffer], {\n      type: 'application/octet-stream'\n    });\n    saveAs(data, 'table_data.xlsx');\n  };\n  const handleToggleColumn = columnId => {\n    setHiddenColumns(prevHiddenColumns => {\n      const isHidden = prevHiddenColumns.includes(columnId);\n      if (isHidden) {\n        toggleHideColumn(columnId, false);\n        return prevHiddenColumns.filter(id => id !== columnId);\n      } else {\n        toggleHideColumn(columnId, true);\n        return [...prevHiddenColumns, columnId];\n      }\n    });\n  };\n  const handleResetColumns = () => {\n    setHiddenColumns([]);\n    allColumns.forEach(column => toggleHideColumn(column.id, false));\n    setIsColumnsModified(false);\n  };\n  useEffect(() => {\n    if (hiddenColumns.length > 0) {\n      setIsColumnsModified(true);\n    }\n  }, [hiddenColumns]);\n  const handleCancelEdit = () => {\n    setEditableCell(null);\n    setEditedCellValues({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSave,\n          className: styles['button_save'],\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleResetColumns,\n          className: styles['button_reset'],\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435 \\u0441\\u0442\\u043E\\u043B\\u0431\\u0446\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getTableProps(),\n      className: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['table-header'],\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...headerGroup.getHeaderGroupProps(),\n          className: styles['table-row'],\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n            ...column.getHeaderProps(),\n            className: styles['table-header-cell'],\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                onClick: () => handleToggleColumn(column.id),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: hide_cell,\n                  alt: \"hide\",\n                  className: styles.hide_cell_img\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getTableBodyProps(),\n        className: styles['table-body'],\n        children: rows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ...row.getRowProps(),\n            className: styles['table-row'],\n            children: row.cells.map(cell => {\n              const cellKey = `${cell.row.index}-${cell.column.id}`;\n              const isEditing = editableCell && editableCell.rowIndex === cell.row.index && editableCell.columnId === cell.column.id;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                ...cell.getCellProps(),\n                className: styles['table-cell'],\n                onDoubleClick: () => handleDoubleClick(cell.row.index, cell.column.id, cell.value),\n                children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: editedCellValues[cellKey],\n                  onChange: e => handleCellChange(e, cell.row.index, cell.column.id),\n                  onBlur: () => handleBlur(cell.row.index, cell.column.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 25\n                }, this) : cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isColumnsModified && /*#__PURE__*/_jsxDEV(BlockInfo, {\n        text: \"\\u0412 \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u0435 \\u0441\\u043A\\u0440\\u044B\\u0442\\u044B \\u043D\\u0435\\u043A\\u043E\\u0442\\u043E\\u0440\\u044B\\u0435 \\u0441\\u0442\\u043E\\u043B\\u0431\\u0446\\u044B\",\n        linkText: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435\",\n        onLinkClick: handleResetColumns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(SecretaryHugeTable, \"ZlpVsvJWxpAHKq9bk/xOk5op5bg=\", false, function () {\n  return [useTable];\n});\n_c = SecretaryHugeTable;\nexport default SecretaryHugeTable;\nvar _c;\n$RefreshReg$(_c, \"SecretaryHugeTable\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","useTable","useFilters","XLSX","saveAs","Button","Row","Col","styles","Filter","hide_cell","BlockInfo","jsxDEV","_jsxDEV","SecretaryHugeTable","info_for_table","_s","isFirstRowEmpty","data","length","Object","values","every","cell","tableData","setTableData","requests","slice","originalData","editableCell","setEditableCell","hiddenColumns","setHiddenColumns","isColumnsModified","setIsColumnsModified","columns","Header","accessor","row","index","student","average_score","workProtecton","protocol_number","date","surname","name","patronymic","theme","teacher","consultant","reviewer","company","last_name_of_responsible","first_name_of_responsible","patronymic_name_of_responsible","job_title_of_resposible","additional_information","record_book_number","phone","email","basis_of_study","preprotection_grade","final_grade","date_of_birth","year_of_prev_education_completion","form_of_prev_education","year_of_admission","special_marks","number_of_debts","certificate_of_curriculum_completion","record_book_submitted","explanatory_note_submitted","diploma_with_honors","publication_agree","teacher_review","review","implementation_act","plagarism_report","application_for_postgraduate_leave","recommended_for_admission","type_of_fqw","headerProps","rowSpan","fqw_by_application","fqw_in_english","fqw_recommended","special_conditions","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","allColumns","toggleHideColumn","editedCellValues","setEditedCellValues","handleDoubleClick","rowIndex","columnId","cellValue","handleCellChange","e","value","target","prevState","handleBlur","editedValue","updatedData","map","undefined","handleSave","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","write","bookType","type","Blob","handleToggleColumn","prevHiddenColumns","isHidden","includes","filter","id","handleResetColumns","forEach","column","handleCancelEdit","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","table","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","variant","src","alt","hide_cell_img","i","getRowProps","cells","cellKey","isEditing","getCellProps","onDoubleClick","onChange","onBlur","text","linkText","onLinkClick","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/Tables/SecretaryTableData/SecretaryHugeTable.js"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useTable, useFilters } from 'react-table';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport styles from '../../../container.module.css';\r\nimport Filter from '../Filter/Filter';\r\nimport hide_cell from '../../../img/hide_cell.png';\r\nimport BlockInfo from '../../BlockInfo/BlockInfo';\r\n\r\nfunction SecretaryHugeTable({ info_for_table }) {\r\n\r\n  const isFirstRowEmpty = (data) => {\r\n    return data.length > 0 && Object.values(data[0]).every((cell) => cell === null || cell === '');\r\n  };\r\n\r\n  const [tableData, setTableData] = useState(() => {\r\n    const data = info_for_table.requests;\r\n    if (isFirstRowEmpty(data)) {\r\n      return data.slice(1);\r\n    }\r\n    return data;\r\n  });\r\n\r\n  const [originalData] = useState(info_for_table.requests);\r\n  const [editableCell, setEditableCell] = useState(null);\r\n  const [hiddenColumns, setHiddenColumns] = useState([]);\r\n  const [isColumnsModified, setIsColumnsModified] = useState(false);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      { Header: '№ п/п', accessor: (row, index) => index + 1, Filter: Filter },\r\n      { Header: 'ср.б.', accessor: (row) => `${row.student.average_score}`, Filter: Filter },\r\n      { Header: 'номер протокола', accessor: (row) => `${row.workProtecton.protocol_number}`, Filter: Filter },\r\n      { Header: 'дата протокола', accessor: (row) => `${row.workProtecton.date}`, Filter: Filter },\r\n      { Header: 'Фамилия, Имя, Отчество', accessor: (row) => `${row.student.surname} ${row.student.name} ${row.student.patronymic}`, Filter: Filter },\r\n      { Header: 'Тема', accessor: (row) => `${row.theme.name}`, Filter: Filter },\r\n      { Header: 'Руководитель', accessor: (row) => `${row.teacher.surname} ${row.teacher.name} ${row.teacher.patronymic}`, Filter: Filter },\r\n      { Header: 'Консультант', accessor: (row) => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`, Filter: Filter },\r\n      { Header: 'Рецензент', accessor: (row) => `${row.reviewer.surname} ${row.reviewer.name} ${row.reviewer.patronymic}`, Filter: Filter },\r\n      { Header: 'организация', accessor: (row) => `${row.theme.company.name} ${row.theme.company.last_name_of_responsible} ${row.theme.company.first_name_of_responsible} ${row.theme.company.patronymic_name_of_responsible} ${row.theme.company.job_title_of_resposible} ${row.theme.company.additional_information}`, Filter: Filter },\r\n      { Header: 'номер зачетки', accessor: (row) => `${row.student.record_book_number}`, Filter: Filter },\r\n      { Header: 'Телефон', accessor: (row) => `${row.student.phone}`, Filter: Filter },\r\n      { Header: 'Email', accessor: (row) => `${row.student.email}`, Filter: Filter },\r\n      { Header: 'бюджет/платный', accessor: (row) => `${row.student.basis_of_study}`, Filter: Filter },\r\n      { Header: 'оценка на предзащите/ преддипломная практика', accessor: (row) => `${row.preprotection_grade}`, Filter: Filter },\r\n      { Header: 'оценка на защите', accessor: (row) => `${row.workProtecton.final_grade}`, Filter: Filter },\r\n      { Header: 'дата рождения', accessor: (row) => `${row.student.date_of_birth}`, Filter: Filter },\r\n      { Header: 'год окончания предыдущ образования', accessor: (row) => `${row.student.year_of_prev_education_completion}`, Filter: Filter },\r\n      { Header: 'форма предыдущего образования', accessor: (row) => `${row.student.form_of_prev_education}`, Filter: Filter },\r\n      { Header: 'год поступления', accessor: (row) => `${row.student.year_of_admission}`, Filter: Filter },\r\n      { Header: 'особые отметки', accessor: (row) => `${row.student.special_marks}`, Filter: Filter },\r\n      {\r\n        Header: 'приказы',\r\n        columns: [\r\n          { Header: 'допуск', accessor: 'orders.admission', Filter: Filter },\r\n          { Header: 'тема', accessor: 'orders.theme', Filter: Filter },\r\n          { Header: 'изменение темы', accessor: 'orders.theme_change', Filter: Filter },\r\n          { Header: 'рецензент', accessor: 'orders.reviewer', Filter: Filter },\r\n          { Header: 'отчисление', accessor: 'orders.expulsion', Filter: Filter },\r\n          { Header: 'с какого числа отчисление', accessor: 'orders.expulsion_date', Filter: Filter },\r\n        ],\r\n      },\r\n      {\r\n        Header: 'отметки о выполнении',\r\n        columns: [\r\n          { Header: 'долги', accessor: (row) => `${row.student.number_of_debts}`, Filter: Filter },\r\n          { Header: 'справка о выполнении уч. плана', accessor: (row) => `${row.student.certificate_of_curriculum_completion}`, Filter: Filter },\r\n          { Header: 'сдана зачетка', accessor: (row) => `${row.student.record_book_submitted}`, Filter: Filter },\r\n          { Header: 'сдана пояснительная записка', accessor: (row) => (row.explanatory_note_submitted ? 'да' : 'нет'), Filter: Filter },\r\n          { Header: 'красный диплом', accessor: (row) => (row.student.diploma_with_honors ? 'да' : 'нет'), Filter: Filter },\r\n          { Header: 'согласие на публикацию', accessor: (row) => (row.publication_agree ? 'да' : 'нет'), Filter: Filter },\r\n          { Header: 'отзыв', accessor: (row) => `${row.teacher_review}`, Filter: Filter },\r\n          { Header: 'рецензия', accessor: (row) => `${row.review}`, Filter: Filter },\r\n          { Header: 'Акт о внедрении', accessor: (row) => (row.implementation_act ? 'да' : 'нет'), Filter: Filter },\r\n          { Header: 'отчет о плагиате', accessor: (row) => (row.plagarism_report ? row.plagarism_report : 'нет'), Filter: Filter },\r\n          { Header: 'заявление на последипломный отпуск', accessor: (row) => (row.student.application_for_postgraduate_leave ? row.student.application_for_postgraduate_leave : 'нет'), Filter: Filter },\r\n          { Header: 'рекомендован к поступлению', accessor: (row) => `${row.student.recommended_for_admission}`, Filter: Filter },\r\n        ],\r\n      },\r\n      { Header: 'вид ВКР', accessor: (row) => `${row.type_of_fqw}`, Filter: Filter, headerProps: { rowSpan: 2 } },\r\n      { Header: 'ВКР по заявке', accessor: (row) => `${row.theme.fqw_by_application}`, Filter: Filter },\r\n      { Header: 'ВКР на англ. языке', accessor: (row) => (row.fqw_in_english ? 'да' : 'нет'), Filter: Filter },\r\n      { Header: 'ВКР рекомендовано', accessor: (row) => `${row.fqw_recommended}`, Filter: Filter },\r\n      { Header: 'наличие спец. условий', accessor: (row) => (row.special_conditions ? 'да' : 'нет'), Filter: Filter },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    allColumns,\r\n    toggleHideColumn,\r\n  } = useTable(\r\n    { columns, data: tableData },\r\n    useFilters\r\n  );\r\n\r\n  const [editedCellValues, setEditedCellValues] = useState({});\r\n\r\n  const handleDoubleClick = (rowIndex, columnId, cellValue) => {\r\n    setEditableCell({ rowIndex, columnId });\r\n    setEditedCellValues({\r\n      ...editedCellValues,\r\n      [`${rowIndex}-${columnId}`]: cellValue,\r\n    });\r\n  };\r\n\r\n  const handleCellChange = (e, rowIndex, columnId) => {\r\n    const { value } = e.target;\r\n    setEditedCellValues((prevState) => ({\r\n      ...prevState,\r\n      [`${rowIndex}-${columnId}`]: value,\r\n    }));\r\n  };\r\n\r\n  const handleBlur = (rowIndex, columnId) => {\r\n    const editedValue = editedCellValues[`${rowIndex}-${columnId}`];\r\n    const updatedData = tableData.map((row, index) => {\r\n      if (index === rowIndex) {\r\n        return {\r\n          ...row,\r\n          [columnId]: editedValue !== undefined ? editedValue : row[columnId],\r\n        };\r\n      }\r\n      return row;\r\n    });\r\n\r\n    setTableData(updatedData);\r\n    setEditableCell(null);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(tableData);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n    const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], { type: 'application/octet-stream' });\r\n    saveAs(data, 'table_data.xlsx');\r\n  };\r\n\r\n  const handleToggleColumn = (columnId) => {\r\n    setHiddenColumns((prevHiddenColumns) => {\r\n      const isHidden = prevHiddenColumns.includes(columnId);\r\n      if (isHidden) {\r\n        toggleHideColumn(columnId, false);\r\n        return prevHiddenColumns.filter((id) => id !== columnId);\r\n      } else {\r\n        toggleHideColumn(columnId, true);\r\n        return [...prevHiddenColumns, columnId];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleResetColumns = () => {\r\n    setHiddenColumns([]);\r\n    allColumns.forEach((column) => toggleHideColumn(column.id, false));\r\n    setIsColumnsModified(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (hiddenColumns.length > 0) {\r\n      setIsColumnsModified(true);\r\n    }\r\n  }, [hiddenColumns]);\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditableCell(null);\r\n    setEditedCellValues({});\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col>\r\n          <Button onClick={handleSave} className={styles['button_save']}>\r\n            Сохранить таблицу\r\n          </Button>\r\n        </Col>\r\n        <Col>\r\n          <Button onClick={handleResetColumns} className={styles['button_reset']}>\r\n            Показать все столбцы\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <div {...getTableProps()} className={styles.table}>\r\n        <div className={styles['table-header']}>\r\n          {headerGroups.map((headerGroup) => (\r\n            <div {...headerGroup.getHeaderGroupProps()} className={styles['table-row']}>\r\n              {headerGroup.headers.map((column) => (\r\n                <div {...column.getHeaderProps()} className={styles['table-header-cell']}>\r\n                  {column.render('Header')}\r\n                  <div>\r\n                    <Button\r\n                      variant=\"link\"\r\n                      onClick={() => handleToggleColumn(column.id)}\r\n                    >\r\n                      <img src={hide_cell} alt=\"hide\" className={styles.hide_cell_img} />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div {...getTableBodyProps()} className={styles['table-body']}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <div {...row.getRowProps()} className={styles['table-row']}>\r\n                {row.cells.map((cell) => {\r\n                  const cellKey = `${cell.row.index}-${cell.column.id}`;\r\n                  const isEditing = editableCell && editableCell.rowIndex === cell.row.index && editableCell.columnId === cell.column.id;\r\n                  return (\r\n                    <div\r\n                      {...cell.getCellProps()}\r\n                      className={styles['table-cell']}\r\n                      onDoubleClick={() => handleDoubleClick(cell.row.index, cell.column.id, cell.value)}\r\n                    >\r\n                      {isEditing ? (\r\n                        <input\r\n                          value={editedCellValues[cellKey]}\r\n                          onChange={(e) => handleCellChange(e, cell.row.index, cell.column.id)}\r\n                          onBlur={() => handleBlur(cell.row.index, cell.column.id)}\r\n                        />\r\n                      ) : (\r\n                        cell.render('Cell')\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {isColumnsModified && (\r\n          <BlockInfo\r\n            text=\"В таблице скрыты некоторые столбцы\"\r\n            linkText=\"Показать все\"\r\n            onLinkClick={handleResetColumns}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SecretaryHugeTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}