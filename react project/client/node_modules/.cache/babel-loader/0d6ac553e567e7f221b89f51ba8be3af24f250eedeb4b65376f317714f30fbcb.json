{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\ProtectionSchedule\\\\ViewProtectionSchedulePersons.js\";\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewProtectionSchedulePersons = ({\n  protection_schedule,\n  students_list_for_schedule\n}) => {\n  const formatDate = date => {\n    const options = {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    };\n    return date.toLocaleDateString('ru-RU', options);\n  };\n  const getFullName = studentData => {\n    if (studentData && studentData.student) {\n      const {\n        last_name,\n        first_name,\n        patronymic\n      } = studentData.student;\n      return `${last_name} ${first_name} ${patronymic}`;\n    } else {\n      return 'Unknown';\n    }\n  };\n  const distributeStudentsByProtectionDays = schedule => {\n    const groupedSchedule = {};\n    schedule.forEach(item => {\n      if (!item.group) return;\n      const dateKey = formatDate(item.date);\n      const groupName = item.group.name;\n      const groupId = item.group.id;\n      if (!groupedSchedule[dateKey]) {\n        groupedSchedule[dateKey] = {};\n      }\n      if (!groupedSchedule[dateKey][groupName]) {\n        groupedSchedule[dateKey][groupName] = [];\n      }\n      const students = students_list_for_schedule.filter(student => student.student.group.id === groupId);\n      groupedSchedule[dateKey][groupName] = students;\n    });\n    return groupedSchedule;\n  };\n  const limitStudentsPerDay = schedule => {\n    const limitedSchedule = {};\n    Object.entries(schedule).forEach(([date, groups]) => {\n      Object.entries(groups).forEach(([group, students]) => {\n        const totalStudents = students.length;\n        if (totalStudents > 12) {\n          const firstDayStudents = students.slice(0, 12);\n          const secondDayStudents = students.slice(12);\n          if (!limitedSchedule[date]) {\n            limitedSchedule[date] = {};\n          }\n          limitedSchedule[date][group] = firstDayStudents;\n          const nextDay = new Date(date.split(' ')[0]);\n          nextDay.setDate(nextDay.getDate() + 1);\n          const nextDayFormatted = formatDate(nextDay);\n          if (!limitedSchedule[nextDayFormatted]) {\n            limitedSchedule[nextDayFormatted] = {};\n          }\n          limitedSchedule[nextDayFormatted][group] = secondDayStudents;\n        } else {\n          if (!limitedSchedule[date]) {\n            limitedSchedule[date] = {};\n          }\n          limitedSchedule[date][group] = students;\n        }\n      });\n    });\n    return limitedSchedule;\n  };\n  const groupedSchedule = distributeStudentsByProtectionDays(protection_schedule);\n  const limitedSchedule = limitStudentsPerDay(groupedSchedule);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(limitedSchedule).map(([date, groups]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), Object.entries(groups).map(([group, students]) => /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0424\\u0418\\u041E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0414\\u0430\\u0442\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: getFullName(student)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: group\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)]\n      }, group, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this))]\n    }, date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_c = ViewProtectionSchedulePersons;\nexport default ViewProtectionSchedulePersons;\nvar _c;\n$RefreshReg$(_c, \"ViewProtectionSchedulePersons\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","ViewProtectionSchedulePersons","protection_schedule","students_list_for_schedule","formatDate","date","options","day","month","year","toLocaleDateString","getFullName","studentData","student","last_name","first_name","patronymic","distributeStudentsByProtectionDays","schedule","groupedSchedule","forEach","item","group","dateKey","groupName","name","groupId","id","students","filter","limitStudentsPerDay","limitedSchedule","Object","entries","groups","totalStudents","length","firstDayStudents","slice","secondDayStudents","nextDay","Date","split","setDate","getDate","nextDayFormatted","children","map","fileName","_jsxFileName","lineNumber","columnNumber","bordered","hover","index","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/ProtectionSchedule/ViewProtectionSchedulePersons.js"],"sourcesContent":["import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst ViewProtectionSchedulePersons = ({ protection_schedule, students_list_for_schedule }) => {\r\n    const formatDate = (date) => {\r\n        const options = { day: 'numeric', month: 'long', year: 'numeric' };\r\n        return date.toLocaleDateString('ru-RU', options);\r\n    };\r\n\r\n    const getFullName = (studentData) => {\r\n        if (studentData && studentData.student) {\r\n            const { last_name, first_name, patronymic } = studentData.student;\r\n            return `${last_name} ${first_name} ${patronymic}`;\r\n        } else {\r\n            return 'Unknown';\r\n        }\r\n    };\r\n\r\n    const distributeStudentsByProtectionDays = (schedule) => {\r\n        const groupedSchedule = {};\r\n\r\n        schedule.forEach((item) => {\r\n            if (!item.group) return;\r\n\r\n            const dateKey = formatDate(item.date);\r\n            const groupName = item.group.name;\r\n            const groupId = item.group.id;\r\n\r\n            if (!groupedSchedule[dateKey]) {\r\n                groupedSchedule[dateKey] = {};\r\n            }\r\n\r\n            if (!groupedSchedule[dateKey][groupName]) {\r\n                groupedSchedule[dateKey][groupName] = [];\r\n            }\r\n\r\n            const students = students_list_for_schedule.filter(student => student.student.group.id === groupId);\r\n            groupedSchedule[dateKey][groupName] = students;\r\n        });\r\n\r\n        return groupedSchedule;\r\n    };\r\n\r\n    const limitStudentsPerDay = (schedule) => {\r\n        const limitedSchedule = {};\r\n\r\n        Object.entries(schedule).forEach(([date, groups]) => {\r\n            Object.entries(groups).forEach(([group, students]) => {\r\n                const totalStudents = students.length;\r\n\r\n                if (totalStudents > 12) {\r\n                    const firstDayStudents = students.slice(0, 12);\r\n                    const secondDayStudents = students.slice(12);\r\n\r\n                    if (!limitedSchedule[date]) {\r\n                        limitedSchedule[date] = {};\r\n                    }\r\n\r\n                    limitedSchedule[date][group] = firstDayStudents;\r\n\r\n                    const nextDay = new Date(date.split(' ')[0]);\r\n                    nextDay.setDate(nextDay.getDate() + 1);\r\n                    const nextDayFormatted = formatDate(nextDay);\r\n\r\n                    if (!limitedSchedule[nextDayFormatted]) {\r\n                        limitedSchedule[nextDayFormatted] = {};\r\n                    }\r\n\r\n                    limitedSchedule[nextDayFormatted][group] = secondDayStudents;\r\n                } else {\r\n                    if (!limitedSchedule[date]) {\r\n                        limitedSchedule[date] = {};\r\n                    }\r\n\r\n                    limitedSchedule[date][group] = students;\r\n                }\r\n            });\r\n        });\r\n\r\n        return limitedSchedule;\r\n    };\r\n\r\n    const groupedSchedule = distributeStudentsByProtectionDays(protection_schedule);\r\n    const limitedSchedule = limitStudentsPerDay(groupedSchedule);\r\n\r\n    return (\r\n        <div>\r\n            {Object.entries(limitedSchedule).map(([date, groups]) => (\r\n                <div key={date}>\r\n                    <h3>{date}</h3>\r\n                    {Object.entries(groups).map(([group, students]) => (\r\n                        <Table bordered hover key={group}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ФИО</th>\r\n                                    <th>Группа</th>\r\n                                    <th>Дата</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {students.map((student, index) => (\r\n                                    <tr key={index}>\r\n                                        <td>{getFullName(student)}</td>\r\n                                        <td>{group}</td>\r\n                                        <td>{date}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewProtectionSchedulePersons;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}