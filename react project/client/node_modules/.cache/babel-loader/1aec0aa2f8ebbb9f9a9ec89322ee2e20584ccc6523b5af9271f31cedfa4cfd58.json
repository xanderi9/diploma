{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\ProtectionSchedule\\\\ViewProtectionScheduleTable.jsx\";\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ViewProtectionScheduleTable({\n  protection_schedule\n}) {\n  // Helper function to convert date format\n  const formatDate = dateString => {\n    const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\n    const day = dateString.slice(0, 2);\n    const month = months[parseInt(dateString.slice(2, 4), 10) - 1];\n    const year = dateString.slice(4, 8);\n    return `${day} ${month} ${year}`;\n  };\n  const generateHeading = group => {\n    const {\n      name,\n      speciality\n    } = group;\n    const {\n      code: specialityCode,\n      name: specialityName,\n      field_of_study\n    } = speciality;\n    const {\n      code: fieldOfStudyCode,\n      name: fieldOfStudyName\n    } = field_of_study;\n    if (name.includes('Б')) {\n      return `Бакалавры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\n    } else if (name.includes('М')) {\n      return `Магистры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\n    } else {\n      return `Группа ${name}`;\n    }\n  };\n\n  // Group by group name\n  const groupedByGroupName = protection_schedule.reduce((acc, item) => {\n    const groupName = item.group.name;\n    if (!acc[groupName]) {\n      acc[groupName] = [];\n    }\n    acc[groupName].push(item);\n    return acc;\n  }, {});\n\n  // Collect all unique dates for each group\n  const datesByGroup = Object.keys(groupedByGroupName).reduce((acc, groupName) => {\n    groupedByGroupName[groupName].forEach(item => {\n      if (!acc[groupName]) {\n        acc[groupName] = new Set();\n      }\n      acc[groupName].add(item.date);\n    });\n    return acc;\n  }, {});\n\n  // Merge entries by date\n  const groupedByDate = protection_schedule.reduce((acc, item) => {\n    const date = item.date;\n    if (!acc[date]) {\n      acc[date] = [];\n    }\n    acc[date].push(item);\n    return acc;\n  }, {});\n\n  // Find unique group names for each date\n  const groupNamesByDate = Object.keys(groupedByDate).reduce((acc, date) => {\n    groupedByDate[date].forEach(item => {\n      if (!acc[date]) {\n        acc[date] = new Set();\n      }\n      acc[date].add(item.group.name);\n    });\n    return acc;\n  }, {});\n\n  // Generate combined data for rendering\n  const combinedData = Object.keys(groupNamesByDate).reduce((acc, date) => {\n    groupNamesByDate[date].forEach(groupName => {\n      const combinedKey = [...datesByGroup[groupName]].join(',') + `-${groupName}`;\n      if (!acc[combinedKey]) {\n        acc[combinedKey] = [];\n      }\n      acc[combinedKey].push(...groupedByGroupName[groupName].filter(item => item.date === date));\n    });\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mb-4 text-center\",\n      children: \"\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A \\u0437\\u0430\\u0449\\u0438\\u0442 \\u0412\\u041A\\u0420\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), Object.keys(combinedData).map((key, index) => {\n      const items = combinedData[key];\n      const groupNames = Array.from(new Set(items.map(item => item.group.name)));\n      const headings = groupNames.map(groupName => {\n        const group = items.find(item => item.group.name === groupName).group;\n        return generateHeading(group);\n      }).join(\"; \");\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: headings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          bordered: true,\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u041F\\u041F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0414\\u0430\\u0442\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0412\\u0440\\u0435\\u043C\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0410\\u0443\\u0434\\u0438\\u0442\\u043E\\u0440\\u0438\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0423\\u0447. \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: items.map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: idx + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(item.date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"9:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.audience_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.group.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n}\n_c = ViewProtectionScheduleTable;\nexport default ViewProtectionScheduleTable;\nvar _c;\n$RefreshReg$(_c, \"ViewProtectionScheduleTable\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewProtectionScheduleTable","protection_schedule","formatDate","dateString","months","day","slice","month","parseInt","year","generateHeading","group","name","speciality","code","specialityCode","specialityName","field_of_study","fieldOfStudyCode","fieldOfStudyName","includes","groupedByGroupName","reduce","acc","item","groupName","push","datesByGroup","Object","keys","forEach","Set","add","date","groupedByDate","groupNamesByDate","combinedData","combinedKey","join","filter","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","key","index","items","groupNames","Array","from","headings","find","style","marginBottom","bordered","width","idx","audience_number","id","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/ProtectionSchedule/ViewProtectionScheduleTable.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nfunction ViewProtectionScheduleTable({ protection_schedule }) {\r\n  // Helper function to convert date format\r\n  const formatDate = (dateString) => {\r\n    const months = [\r\n      'января', 'февраля', 'марта', 'апреля', 'мая', 'июня',\r\n      'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'\r\n    ];\r\n    const day = dateString.slice(0, 2);\r\n    const month = months[parseInt(dateString.slice(2, 4), 10) - 1];\r\n    const year = dateString.slice(4, 8);\r\n    return `${day} ${month} ${year}`;\r\n  };\r\n\r\n  const generateHeading = (group) => {\r\n    const { name, speciality } = group;\r\n    const { code: specialityCode, name: specialityName, field_of_study } = speciality;\r\n    const { code: fieldOfStudyCode, name: fieldOfStudyName } = field_of_study;\r\n\r\n    if (name.includes('Б')) {\r\n      return `Бакалавры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\r\n    } else if (name.includes('М')) {\r\n      return `Магистры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\r\n    } else {\r\n      return `Группа ${name}`;\r\n    }\r\n  };\r\n\r\n  // Group by group name\r\n  const groupedByGroupName = protection_schedule.reduce((acc, item) => {\r\n    const groupName = item.group.name;\r\n    if (!acc[groupName]) {\r\n      acc[groupName] = [];\r\n    }\r\n    acc[groupName].push(item);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Collect all unique dates for each group\r\n  const datesByGroup = Object.keys(groupedByGroupName).reduce((acc, groupName) => {\r\n    groupedByGroupName[groupName].forEach((item) => {\r\n      if (!acc[groupName]) {\r\n        acc[groupName] = new Set();\r\n      }\r\n      acc[groupName].add(item.date);\r\n    });\r\n    return acc;\r\n  }, {});\r\n\r\n  // Merge entries by date\r\n  const groupedByDate = protection_schedule.reduce((acc, item) => {\r\n    const date = item.date;\r\n    if (!acc[date]) {\r\n      acc[date] = [];\r\n    }\r\n    acc[date].push(item);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Find unique group names for each date\r\n  const groupNamesByDate = Object.keys(groupedByDate).reduce((acc, date) => {\r\n    groupedByDate[date].forEach((item) => {\r\n      if (!acc[date]) {\r\n        acc[date] = new Set();\r\n      }\r\n      acc[date].add(item.group.name);\r\n    });\r\n    return acc;\r\n  }, {});\r\n\r\n  // Generate combined data for rendering\r\n  const combinedData = Object.keys(groupNamesByDate).reduce((acc, date) => {\r\n    groupNamesByDate[date].forEach((groupName) => {\r\n      const combinedKey = [...datesByGroup[groupName]].join(',') + `-${groupName}`;\r\n      if (!acc[combinedKey]) {\r\n        acc[combinedKey] = [];\r\n      }\r\n      acc[combinedKey].push(...groupedByGroupName[groupName].filter(item => item.date === date));\r\n    });\r\n    return acc;\r\n  }, {});\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"mb-4 text-center\">График защит ВКР</h4>\r\n      {Object.keys(combinedData).map((key, index) => {\r\n        const items = combinedData[key];\r\n        const groupNames = Array.from(new Set(items.map(item => item.group.name)));\r\n        const headings = groupNames.map(groupName => {\r\n          const group = items.find(item => item.group.name === groupName).group;\r\n          return generateHeading(group);\r\n        }).join(\"; \");\r\n\r\n        return (\r\n          <div key={index} style={{ marginBottom: '20px' }}>\r\n            <h6>{headings}</h6>\r\n            <Table bordered style={{ width: '100%' }}>\r\n              <thead>\r\n                <tr>\r\n                  <th>ПП</th>\r\n                  <th>Дата</th>\r\n                  <th>Время</th>\r\n                  <th>Аудитория</th>\r\n                  <th>Уч. группа</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {items.map((item, idx) => (\r\n                  <tr key={item.id}>\r\n                    <td>{idx + 1}</td>\r\n                    <td>{formatDate(item.date)}</td>\r\n                    <td>9:00</td>\r\n                    <td>{item.audience_number}</td>\r\n                    <td>{item.group.name}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewProtectionScheduleTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}