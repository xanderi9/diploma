{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react project\\\\client\\\\src\\\\components\\\\Orders\\\\PublishOrdersForm\\\\PublishOrdersForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport BlockInfo from '../../BlockInfo/BlockInfo';\nimport styles from './PublishOrdersForm.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PublishOrdersForm() {\n  _s();\n  const [dragging, setDragging] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [fileNames, setFileNames] = useState([]);\n  const inputRef = useRef(null);\n  const handleDragEnter = event => {\n    event.preventDefault();\n    setDragging(true);\n  };\n  const handleDragLeave = event => {\n    event.preventDefault();\n    setDragging(false);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    setDragging(false);\n    const files = Array.from(event.dataTransfer.files);\n    const newFileNames = files.map(file => file.name);\n    setSelectedFiles([...selectedFiles, ...files]);\n    setFileNames([...fileNames, ...newFileNames]);\n  };\n  const handleFileInputChange = event => {\n    const files = Array.from(event.target.files);\n    const newFileNames = files.map(file => file.name);\n    setSelectedFiles([...selectedFiles, ...files]);\n    setFileNames([...fileNames, ...newFileNames]);\n  };\n  const handleFormClick = () => {\n    inputRef.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mb-4 text-center\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043F\\u0440\\u0438\\u043A\\u0430\\u0437\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlockInfo, {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0438\\u043A\\u0430\\u0437\\u044B \\u0432 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435 pdf \\u0438 \\u043E\\u043D\\u0438 \\u0441\\u0442\\u0430\\u043D\\u0443\\u0442 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B \\u0432\\u0441\\u0435\\u043C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\\u043C \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onDragEnter: handleDragEnter,\n      onDragLeave: handleDragLeave,\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      className: styles.form_drag,\n      onClick: handleFormClick,\n      children: [dragging ? 'Файлы выбраны' : 'Перетащите файлы сюда или кликните для выбора', fileNames.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.form_published,\n        children: fileNames.map((fileName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: fileName\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf\",\n      ref: inputRef,\n      style: {\n        display: 'none'\n      },\n      onChange: handleFileInputChange,\n      multiple: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PublishOrdersForm, \"8m57U5DkRhnRzJ/ikwhhKu+/6U0=\");\n_c = PublishOrdersForm;\nexport default PublishOrdersForm;\nvar _c;\n$RefreshReg$(_c, \"PublishOrdersForm\");","map":{"version":3,"names":["React","useState","useRef","BlockInfo","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","PublishOrdersForm","_s","dragging","setDragging","selectedFiles","setSelectedFiles","fileNames","setFileNames","inputRef","handleDragEnter","event","preventDefault","handleDragLeave","handleDragOver","handleDrop","files","Array","from","dataTransfer","newFileNames","map","file","name","handleFileInputChange","target","handleFormClick","current","click","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onDragEnter","onDragLeave","onDragOver","onDrop","form_drag","onClick","length","form_published","index","type","accept","ref","style","display","onChange","multiple","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/react project/client/src/components/Orders/PublishOrdersForm/PublishOrdersForm.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport BlockInfo from '../../BlockInfo/BlockInfo';\r\nimport styles from './PublishOrdersForm.module.css';\r\n\r\nfunction PublishOrdersForm() {\r\n  const [dragging, setDragging] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [fileNames, setFileNames] = useState([]);\r\n  const inputRef = useRef(null);\r\n\r\n  const handleDragEnter = (event) => {\r\n    event.preventDefault();\r\n    setDragging(true);\r\n  };\r\n\r\n  const handleDragLeave = (event) => {\r\n    event.preventDefault();\r\n    setDragging(false);\r\n  };\r\n\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n    setDragging(false);\r\n    const files = Array.from(event.dataTransfer.files);\r\n    const newFileNames = files.map(file => file.name);\r\n    setSelectedFiles([...selectedFiles, ...files]);\r\n    setFileNames([...fileNames, ...newFileNames]);\r\n  };\r\n\r\n  const handleFileInputChange = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    const newFileNames = files.map(file => file.name);\r\n    setSelectedFiles([...selectedFiles, ...files]);\r\n    setFileNames([...fileNames, ...newFileNames]);\r\n  };\r\n\r\n  const handleFormClick = () => {\r\n    inputRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"mb-4 text-center\">Загрузка приказов</h4>\r\n      <BlockInfo>\r\n        Загрузите приказы в формате pdf и они станут доступны всем пользователям в системе\r\n      </BlockInfo>\r\n      <div\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n        onDragOver={handleDragOver}\r\n        onDrop={handleDrop}\r\n        className={styles.form_drag}\r\n        onClick={handleFormClick}\r\n      >\r\n        {dragging ? 'Файлы выбраны' : 'Перетащите файлы сюда или кликните для выбора'}\r\n        {fileNames.length > 0 && (\r\n        \r\n              <div className={styles.form_published}> \r\n            {fileNames.map((fileName, index) => (\r\n              \r\n              <div key={index}>{fileName}\r\n              </div>\r\n \r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <input\r\n        type=\"file\"\r\n        accept=\".pdf\"\r\n        ref={inputRef}\r\n        style={{ display: 'none' }}\r\n        onChange={handleFileInputChange}\r\n        multiple\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PublishOrdersForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}