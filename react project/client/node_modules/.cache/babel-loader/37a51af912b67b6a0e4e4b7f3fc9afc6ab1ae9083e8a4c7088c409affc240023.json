{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\ProtectionSchedule\\\\ViewProtectionScheduleTable.jsx\";\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ViewProtectionScheduleTable({\n  protection_schedule\n}) {\n  // Helper function to convert date format\n  const formatDate = dateString => {\n    const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\n    const day = dateString.slice(0, 2);\n    const month = months[parseInt(dateString.slice(2, 4), 10) - 1];\n    const year = dateString.slice(4, 8);\n    return `${day} ${month} ${year}`;\n  };\n  const generateHeading = group => {\n    const {\n      name,\n      speciality\n    } = group;\n    const {\n      code: specialityCode,\n      name: specialityName,\n      field_of_study\n    } = speciality;\n    const {\n      code: fieldOfStudyCode,\n      name: fieldOfStudyName\n    } = field_of_study;\n    if (name.includes('Б')) {\n      return `Бакалавры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\n    } else if (name.includes('М')) {\n      return `Магистры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\n    } else {\n      return `Группа ${name}`;\n    }\n  };\n\n  // Combine all data into a single list with extra info for grouping\n  const combinedData = protection_schedule.map((item, index) => ({\n    ...item,\n    formattedDate: formatDate(item.date),\n    order: index + 1\n  }));\n\n  // Group by date and then by group within the same date\n  const groupedByDateAndGroup = combinedData.reduce((acc, item) => {\n    const date = item.date;\n    const groupName = item.group.name;\n    if (!acc[date]) {\n      acc[date] = {};\n    }\n    if (!acc[date][groupName]) {\n      acc[date][groupName] = [];\n    }\n    acc[date][groupName].push(item);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mb-4 text-center\",\n      children: \"\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A \\u0437\\u0430\\u0449\\u0438\\u0442 \\u0412\\u041A\\u0420\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041F\\u041F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0414\\u0430\\u0442\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0412\\u0440\\u0435\\u043C\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0410\\u0443\\u0434\\u0438\\u0442\\u043E\\u0440\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0423\\u0447. \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(groupedByDateAndGroup).map((date, dateIndex) => Object.keys(groupedByDateAndGroup[date]).map((groupName, groupIndex) => {\n          const items = groupedByDateAndGroup[date][groupName];\n          const heading = generateHeading(items[0].group);\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"5\",\n                children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: heading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), items.map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.order\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.formattedDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"9:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.audience_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: groupName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 23\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this))]\n          }, `${date}-${groupName}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this);\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = ViewProtectionScheduleTable;\nexport default ViewProtectionScheduleTable;\nvar _c;\n$RefreshReg$(_c, \"ViewProtectionScheduleTable\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewProtectionScheduleTable","protection_schedule","formatDate","dateString","months","day","slice","month","parseInt","year","generateHeading","group","name","speciality","code","specialityCode","specialityName","field_of_study","fieldOfStudyCode","fieldOfStudyName","includes","combinedData","map","item","index","formattedDate","date","order","groupedByDateAndGroup","reduce","acc","groupName","push","children","className","fileName","_jsxFileName","lineNumber","columnNumber","bordered","style","width","Object","keys","dateIndex","groupIndex","items","heading","colSpan","idx","audience_number","id","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/ProtectionSchedule/ViewProtectionScheduleTable.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nfunction ViewProtectionScheduleTable({ protection_schedule }) {\r\n  // Helper function to convert date format\r\n  const formatDate = (dateString) => {\r\n    const months = [\r\n      'января', 'февраля', 'марта', 'апреля', 'мая', 'июня',\r\n      'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'\r\n    ];\r\n    const day = dateString.slice(0, 2);\r\n    const month = months[parseInt(dateString.slice(2, 4), 10) - 1];\r\n    const year = dateString.slice(4, 8);\r\n    return `${day} ${month} ${year}`;\r\n  };\r\n\r\n  const generateHeading = (group) => {\r\n    const { name, speciality } = group;\r\n    const { code: specialityCode, name: specialityName, field_of_study } = speciality;\r\n    const { code: fieldOfStudyCode, name: fieldOfStudyName } = field_of_study;\r\n\r\n    if (name.includes('Б')) {\r\n      return `Бакалавры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\r\n    } else if (name.includes('М')) {\r\n      return `Магистры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\r\n    } else {\r\n      return `Группа ${name}`;\r\n    }\r\n  };\r\n\r\n  // Combine all data into a single list with extra info for grouping\r\n  const combinedData = protection_schedule.map((item, index) => ({\r\n    ...item,\r\n    formattedDate: formatDate(item.date),\r\n    order: index + 1\r\n  }));\r\n\r\n  // Group by date and then by group within the same date\r\n  const groupedByDateAndGroup = combinedData.reduce((acc, item) => {\r\n    const date = item.date;\r\n    const groupName = item.group.name;\r\n    if (!acc[date]) {\r\n      acc[date] = {};\r\n    }\r\n    if (!acc[date][groupName]) {\r\n      acc[date][groupName] = [];\r\n    }\r\n    acc[date][groupName].push(item);\r\n    return acc;\r\n  }, {});\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"mb-4 text-center\">График защит ВКР</h4>\r\n      <Table bordered style={{ width: '100%' }}>\r\n        <thead>\r\n          <tr>\r\n            <th>ПП</th>\r\n            <th>Дата</th>\r\n            <th>Время</th>\r\n            <th>Аудитория</th>\r\n            <th>Уч. группа</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(groupedByDateAndGroup).map((date, dateIndex) => (\r\n            Object.keys(groupedByDateAndGroup[date]).map((groupName, groupIndex) => {\r\n              const items = groupedByDateAndGroup[date][groupName];\r\n              const heading = generateHeading(items[0].group);\r\n              return (\r\n                <React.Fragment key={`${date}-${groupName}`}>\r\n                  <tr>\r\n                    <td colSpan=\"5\"><h6>{heading}</h6></td>\r\n                  </tr>\r\n                  {items.map((item, idx) => (\r\n                    <tr key={item.id}>\r\n                      <td>{item.order}</td>\r\n                      <td>{item.formattedDate}</td>\r\n                      <td>9:00</td>\r\n                      <td>{item.audience_number}</td>\r\n                      <td>{groupName}</td>\r\n                    </tr>\r\n                  ))}\r\n                </React.Fragment>\r\n              );\r\n            })\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewProtectionScheduleTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}