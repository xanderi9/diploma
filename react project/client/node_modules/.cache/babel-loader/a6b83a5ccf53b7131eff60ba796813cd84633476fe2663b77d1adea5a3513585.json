{"ast":null,"code":"import { saveAs } from 'file-saver';\nimport JSZip from 'jszip';\nconst generateProtocolContent = ({\n  chairman,\n  membersList,\n  workProtection,\n  student,\n  teacher,\n  theme,\n  data\n}) => {\n  const getInitials = (firstName, patronymic) => {\n    return `${firstName.charAt(0)}.${patronymic.charAt(0)}.`;\n  };\n  const np = getInitials(chairman.user.first_name, chairman.user.patronymic);\n  const full_name_student = {\n    last: student.user.last_name,\n    first: student.user.first_name,\n    middle: student.user.patronymic\n  };\n  let fullnameStudent = petrovich(full_name_student, 'accusative');\n  fullnameStudent = `${fullnameStudent.last} ${fullnameStudent.first} ${fullnameStudent.middle}`;\n  const [hours_start, min_start] = workProtection.time.split(':');\n  const startTime = new Date();\n  startTime.setHours(hours_start);\n  startTime.setMinutes(min_start);\n  startTime.setMinutes(startTime.getMinutes() + 20);\n  const hours_end = startTime.getHours();\n  const min_end = startTime.getMinutes();\n  const protocolData = {\n    protocol_number: workProtection.protocol_number,\n    group_protection_date: new Date(workProtection.date).toLocaleDateString('ru-RU'),\n    hours_start: hours_start,\n    min_start: min_start,\n    hours_end: hours_end,\n    min_end: min_end,\n    chairman_last_name: chairman.user.last_name,\n    chairman_np: np,\n    chairman_degree: chairman.employee_information.academic_degree,\n    chairman_job_title: chairman.employee_information.job_title,\n    members_list: membersList.map(member => ({\n      members_last_name: member.user.last_name,\n      members_np: getInitials(member.user.first_name, member.user.patronymic),\n      members_degree: member.employee_information.academic_degree || '',\n      members_job_title: member.employee_information.job_title,\n      members_place_of_work: member.employee_information.place_of_work\n    })),\n    student_fullname: fullnameStudent,\n    specialityCode: student.group.speciality.code,\n    specialtityProgram: student.group.speciality.name,\n    theme: theme,\n    teacher_last_name: teacher.user.last_name,\n    teacher_np: getInitials(teacher.user.first_name, teacher.user.patronymic),\n    teacher_degree: teacher.employee_information.academic_degree,\n    teacher_job_title: teacher.employee_information.job_title,\n    reviewer_last_name: theme.reviewer.user.last_name ? theme.reviewer.user.last_name : '',\n    reviewer_np: theme.reviewer.user.last_name ? getInitials(theme.reviewer.user.first_name, theme.reviewer.user.patronymic) : '',\n    reviewer_degree: theme.reviewer.employee_information.academic_degree ? theme.reviewer.employee_information.academic_degree : '',\n    reviewer_job_title: theme.reviewer.employee_information.job_title ? theme.reviewer.employee_information.job_title : '',\n    student_last_name: student.user.last_name,\n    student_np: getInitials(student.user.first_name, student.user.patronymic),\n    secretary_last_name: data.user.last_name,\n    secretary_np: getInitials(data.user.first_name, data.user.patronymic),\n    duration: 20\n  };\n\n  // Генерируем содержимое документа на основе шаблона и данных\n  return `Протокол_${student.user.last_name}_${student.user.first_name}.docx: ${JSON.stringify(protocolData)}`;\n};\nconst generateProtocolsFunction = async ({\n  composition_of_sec,\n  selectedGroup,\n  groupData,\n  data\n}) => {\n  const zip = new JSZip();\n  try {\n    for (const item of groupData) {\n      const {\n        request,\n        work_protection\n      } = item;\n      const student = request.student;\n      const teacher = request.teacher;\n      const theme = request.theme;\n      const chairman = composition_of_sec.find(comp => comp.chairman_of_SEC === true);\n      const membersList = composition_of_sec.filter(sec => sec.chairman_of_SEC === false);\n\n      // Генерируем содержимое протокола\n      const content = generateProtocolContent({\n        chairman,\n        membersList,\n        workProtection: work_protection,\n        student,\n        teacher,\n        theme,\n        data\n      });\n\n      // Добавляем содержимое протокола в архив\n      zip.file(`Протокол_${student.user.last_name}_${student.user.first_name}.docx`, content);\n    }\n\n    // Генерируем архив и скачиваем его\n    zip.generateAsync({\n      type: 'blob'\n    }).then(function (content) {\n      saveAs(content, 'Протоколы.zip');\n    });\n  } catch (error) {\n    console.error('Ошибка загрузки файла:', error);\n  }\n};\nexport default generateProtocolsFunction;","map":{"version":3,"names":["saveAs","JSZip","generateProtocolContent","chairman","membersList","workProtection","student","teacher","theme","data","getInitials","firstName","patronymic","charAt","np","user","first_name","full_name_student","last","last_name","first","middle","fullnameStudent","petrovich","hours_start","min_start","time","split","startTime","Date","setHours","setMinutes","getMinutes","hours_end","getHours","min_end","protocolData","protocol_number","group_protection_date","date","toLocaleDateString","chairman_last_name","chairman_np","chairman_degree","employee_information","academic_degree","chairman_job_title","job_title","members_list","map","member","members_last_name","members_np","members_degree","members_job_title","members_place_of_work","place_of_work","student_fullname","specialityCode","group","speciality","code","specialtityProgram","name","teacher_last_name","teacher_np","teacher_degree","teacher_job_title","reviewer_last_name","reviewer","reviewer_np","reviewer_degree","reviewer_job_title","student_last_name","student_np","secretary_last_name","secretary_np","duration","JSON","stringify","generateProtocolsFunction","composition_of_sec","selectedGroup","groupData","zip","item","request","work_protection","find","comp","chairman_of_SEC","filter","sec","content","file","generateAsync","type","then","error","console"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/Forms/GenerateProtocols/GenerateProtocolFunction.js"],"sourcesContent":["import { saveAs } from 'file-saver';\r\nimport JSZip from 'jszip';\r\n\r\nconst generateProtocolContent = ({ \r\n    chairman,\r\n    membersList,\r\n    workProtection,\r\n    student,\r\n    teacher,\r\n    theme,\r\n    data\r\n}) => {\r\n    const getInitials = (firstName, patronymic) => {\r\n        return `${firstName.charAt(0)}.${patronymic.charAt(0)}.`;\r\n    };\r\n\r\n    const np = getInitials(chairman.user.first_name, chairman.user.patronymic);\r\n\r\n    const full_name_student = {\r\n        last: student.user.last_name,\r\n        first: student.user.first_name,\r\n        middle: student.user.patronymic,\r\n    };\r\n    let fullnameStudent = petrovich(full_name_student, 'accusative');\r\n    fullnameStudent = `${fullnameStudent.last} ${fullnameStudent.first} ${fullnameStudent.middle}`;\r\n    \r\n    const [hours_start, min_start] = workProtection.time.split(':');\r\n    const startTime = new Date();\r\n    startTime.setHours(hours_start);\r\n    startTime.setMinutes(min_start);\r\n    startTime.setMinutes(startTime.getMinutes() + 20);\r\n    const hours_end = startTime.getHours();\r\n    const min_end = startTime.getMinutes();\r\n\r\n    const protocolData = {\r\n        protocol_number: workProtection.protocol_number,\r\n        group_protection_date: new Date(workProtection.date).toLocaleDateString('ru-RU'),\r\n        hours_start: hours_start,\r\n        min_start: min_start,\r\n        hours_end: hours_end,\r\n        min_end: min_end,\r\n        chairman_last_name: chairman.user.last_name,\r\n        chairman_np: np,\r\n        chairman_degree: chairman.employee_information.academic_degree,\r\n        chairman_job_title: chairman.employee_information.job_title,\r\n        members_list: membersList.map(member => ({\r\n            members_last_name: member.user.last_name,\r\n            members_np: getInitials(member.user.first_name, member.user.patronymic),\r\n            members_degree: member.employee_information.academic_degree || '',\r\n            members_job_title: member.employee_information.job_title,\r\n            members_place_of_work: member.employee_information.place_of_work,\r\n        })),\r\n        student_fullname: fullnameStudent,\r\n        specialityCode: student.group.speciality.code,\r\n        specialtityProgram: student.group.speciality.name,\r\n        theme: theme,\r\n        teacher_last_name: teacher.user.last_name,\r\n        teacher_np: getInitials(teacher.user.first_name, teacher.user.patronymic),\r\n        teacher_degree: teacher.employee_information.academic_degree,\r\n        teacher_job_title: teacher.employee_information.job_title,\r\n        reviewer_last_name: theme.reviewer.user.last_name ? theme.reviewer.user.last_name : '',\r\n        reviewer_np: theme.reviewer.user.last_name ? getInitials(theme.reviewer.user.first_name, theme.reviewer.user.patronymic) : '',\r\n        reviewer_degree: theme.reviewer.employee_information.academic_degree ? theme.reviewer.employee_information.academic_degree : '',\r\n        reviewer_job_title: theme.reviewer.employee_information.job_title ? theme.reviewer.employee_information.job_title : '',\r\n        student_last_name: student.user.last_name,\r\n        student_np: getInitials(student.user.first_name, student.user.patronymic),\r\n        secretary_last_name: data.user.last_name,\r\n        secretary_np: getInitials(data.user.first_name, data.user.patronymic),\r\n        duration: 20,\r\n    };\r\n\r\n    // Генерируем содержимое документа на основе шаблона и данных\r\n    return `Протокол_${student.user.last_name}_${student.user.first_name}.docx: ${JSON.stringify(protocolData)}`;\r\n};\r\n\r\nconst generateProtocolsFunction = async ({ \r\n    composition_of_sec, \r\n    selectedGroup,\r\n    groupData,\r\n    data\r\n}) => {\r\n    const zip = new JSZip();\r\n   \r\n    try {\r\n        for (const item of groupData) {\r\n            const { request, work_protection } = item;\r\n            const student = request.student;\r\n            const teacher = request.teacher;\r\n            const theme = request.theme;\r\n            const chairman = composition_of_sec.find(comp => comp.chairman_of_SEC === true);\r\n            const membersList = composition_of_sec.filter(sec => sec.chairman_of_SEC === false);\r\n\r\n            // Генерируем содержимое протокола\r\n            const content = generateProtocolContent({ \r\n                chairman,\r\n                membersList,\r\n                workProtection: work_protection,\r\n                student,\r\n                teacher,\r\n                theme,\r\n                data\r\n            });\r\n\r\n            // Добавляем содержимое протокола в архив\r\n            zip.file(`Протокол_${student.user.last_name}_${student.user.first_name}.docx`, content);\r\n        }\r\n\r\n        // Генерируем архив и скачиваем его\r\n        zip.generateAsync({ type: 'blob' }).then(function (content) {\r\n            saveAs(content, 'Протоколы.zip');\r\n        });\r\n    } catch (error) {\r\n        console.error('Ошибка загрузки файла:', error);\r\n    }\r\n};\r\n\r\nexport default generateProtocolsFunction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}