{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react project\\\\client\\\\src\\\\components\\\\Tables\\\\SecretaryTableData\\\\SecretaryHugeTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { useTable, useFilters } from 'react-table';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport { Button } from 'react-bootstrap';\nimport styles from '../../../container.module.css';\nimport Filter from '../Filter/Filter';\nimport hide_cell from '../../../img/hide_cell.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SecretaryHugeTable({\n  info_for_table\n}) {\n  _s();\n  const [tableData, setTableData] = useState(info_for_table.requests);\n  const [originalData] = useState(info_for_table.requests); // Store the original data\n  const [editableCell, setEditableCell] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const columns = React.useMemo(() => [{\n    Header: '№ п/п',\n    accessor: (row, index) => index + 1,\n    Filter: Filter\n  }, {\n    Header: 'ср.б.',\n    accessor: row => `${row.student.average_score}`,\n    Filter: Filter\n  }, {\n    Header: 'Фамилия, Имя, Отчество',\n    accessor: row => `${row.student.surname} ${row.student.name} ${row.student.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Тема',\n    accessor: row => `${row.theme.name}`,\n    Filter: Filter\n  }, {\n    Header: 'Руководитель',\n    accessor: row => `${row.teacher.surname} ${row.teacher.name} ${row.teacher.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Консультант',\n    accessor: row => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Рецензент',\n    accessor: row => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'организация',\n    accessor: row => `${row.theme.organization.name} ${row.theme.organization.last_name_of_responsible} ${row.theme.organization.first_name_of_responsible} ${row.theme.organization.patronymic_name_of_responsible}\n         ${row.theme.organization.job_title_of_resposible} ${row.theme.organization.additional_information}`,\n    Filter: Filter\n  }, {\n    Header: 'Телефон',\n    accessor: row => `${row.student.phone}`,\n    Filter: Filter\n  }, {\n    Header: 'Email',\n    accessor: row => `${row.student.email}`,\n    Filter: Filter\n  }, {\n    Header: 'бюджет/платный',\n    accessor: row => `${row.student.basis_of_study}`,\n    Filter: Filter\n  }, {\n    Header: 'оценка на предзащите/ преддипломная практика',\n    accessor: row => `${row.preprotection_grade}`,\n    Filter: Filter\n  }, {\n    Header: 'оценка на защите',\n    accessor: row => `${row.workProtecton.final_grade}`,\n    Filter: Filter\n  }, {\n    Header: 'дата рождения',\n    accessor: row => `${row.student.date_of_birth}`,\n    Filter: Filter\n  }, {\n    Header: 'год окончания предыдущ образования',\n    accessor: row => `${row.student.year_of_prev_education_completion}`,\n    Filter: Filter\n  }, {\n    Header: 'форма предыдущего образования',\n    accessor: row => `${row.student.form_of_prev_education}`,\n    Filter: Filter\n  }, {\n    Header: 'год поступления',\n    accessor: row => `${row.student.year_of_admission}`,\n    Filter: Filter\n  }, {\n    Header: 'особые отметки',\n    accessor: row => `${row.student.special_marks}`,\n    Filter: Filter\n  }, {\n    Header: 'вид ВКР',\n    accessor: row => `${row.type_of_fqw}`,\n    Filter: Filter,\n    headerProps: {\n      rowSpan: 2\n    }\n  }, {\n    Header: 'ВКР по заявке',\n    accessor: row => `${row.theme.fqw_by_application}`,\n    Filter: Filter\n  }, {\n    Header: 'ВКР на англ. языке',\n    accessor: row => row.fqw_in_english ? 'да' : 'нет',\n    Filter: Filter\n  }, {\n    Header: 'ВКР рекомендовано',\n    accessor: row => `${row.fqw_recommended}`,\n    Filter: Filter\n  }, {\n    Header: 'наличие спец. условий',\n    accessor: row => row.special_conditions ? 'да' : 'нет',\n    Filter: Filter\n  }, {\n    Header: 'приказы',\n    columns: [{\n      Header: 'допуск',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'тема',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'изменение темы',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'рецензент',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'отчисление',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'с какого числа отчисление',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }]\n  }, {\n    Header: 'отметки о выполнении',\n    columns: [{\n      Header: 'долги',\n      accessor: row => `${row.student.number_of_debts}`,\n      Filter: Filter\n    }, {\n      Header: 'справка о выполнении уч. плана',\n      accessor: row => `${row.student.certificate_of_curriculum_completion}`,\n      Filter: Filter\n    }, {\n      Header: 'сдана зачетка',\n      accessor: row => `${row.student.record_book_submitted}`,\n      Filter: Filter\n    }, {\n      Header: 'сдана пояснительная записка',\n      accessor: row => row.explanatory_note_submitted ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'красный диплом',\n      accessor: row => row.student.diploma_with_honors ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'согласие на публикацию',\n      accessor: row => row.publication_agree ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'отзыв',\n      accessor: row => `${row.teacher_review}`,\n      Filter: Filter\n    }, {\n      Header: 'рецензия',\n      accessor: row => `${row.review}`,\n      Filter: Filter\n    }, {\n      Header: 'Акт о внедрении',\n      accessor: row => row.implementation_act ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'отчет о плагиате',\n      accessor: row => row.plagarism_report ? row.plagarism_report : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'заявление на последипломный отпуск',\n      accessor: row => row.student.application_for_postgraduate_leave ? row.student.application_for_postgraduate_leave : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'рекомендован к поступлению',\n      accessor: row => `${row.student.recommended_for_admission}`,\n      Filter: Filter\n    }]\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state: {\n      filters,\n      globalFilter\n    },\n    setGlobalFilter,\n    toggleHideColumn\n  } = useTable({\n    columns,\n    data: tableData\n  }, useFilters);\n  const handleDoubleClick = (rowIndex, columnId) => {\n    setEditableCell({\n      rowIndex,\n      columnId\n    });\n  };\n  const handleCellChange = (e, rowIndex, columnId) => {\n    const {\n      value\n    } = e.target;\n    const updatedData = tableData.map((row, index) => {\n      if (index === rowIndex) {\n        return {\n          ...row,\n          [columnId]: value\n        };\n      }\n      return row;\n    });\n    setTableData(updatedData);\n  };\n  const toggleColumnVisibility = columnId => {\n    const newHiddenColumns = hiddenColumns.includes(columnId) ? hiddenColumns.filter(id => id !== columnId) : [...hiddenColumns, columnId];\n    setHiddenColumns(newHiddenColumns);\n    toggleHideColumn(columnId);\n  };\n  useEffect(() => {\n    // Apply hidden columns when component mounts\n    setHiddenColumns([]);\n  }, []);\n  const exportToExcel = () => {\n    const tableClone = document.getElementById('dataTable').cloneNode(true);\n    const hiddenCells = tableClone.querySelectorAll(`.${styles.hidden}`);\n    hiddenCells.forEach(cell => cell.remove());\n    const ws = XLSX.utils.table_to_sheet(tableClone);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Data');\n    XLSX.writeFile(wb, 'Data.xlsx');\n  };\n  const resetTable = () => {\n    setTableData(originalData);\n    setHiddenColumns([]);\n    setEditableCell(null);\n    // Restore hidden columns\n    hiddenColumns.forEach(columnId => {\n      toggleHideColumn(columnId);\n    });\n  };\n  const showOnlyColumnsByIndex = columnIndexesToShow => {\n    const columnsToShow = columns.map((column, index) => {\n      return columnIndexesToShow.includes(index) ? column.id : null;\n    }).filter(Boolean);\n    setHiddenColumns(columnsToShow);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mb-4 text-center\",\n      children: \"\\u0422\\u0430\\u0431\\u043B\\u0438\\u0446\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: exportToExcel,\n      className: \"mb-4\",\n      children: \"Export to Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: resetTable,\n      className: \"mb-4\",\n      children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => showOnlyColumnsByIndex([0, 1, 2, 3, 4, 5]),\n      className: \"mb-4\",\n      children: \"\\u041E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u043E\\u043F\\u0440\\u0435\\u0434\\u0435\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0441\\u0442\\u043E\\u043B\\u0431\\u0446\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      id: \"dataTable\",\n      className: styles.huge_table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => {\n            const visible = !hiddenColumns.includes(column.id);\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(),\n              style: {\n                display: visible ? 'table-cell' : 'none',\n                position: 'relative',\n                paddingRight: '-15px'\n              },\n              children: [column.render('Header'), column.canFilter && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'absolute',\n                  right: '0',\n                  bottom: '0',\n                  marginRight: '-13%',\n                  marginBottom: '-8%'\n                },\n                children: /*#__PURE__*/_jsxDEV(Filter, {\n                  column: column\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 23\n              }, this), column.canFilter && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'absolute',\n                  right: '0',\n                  top: '0',\n                  marginRight: '-13%',\n                  marginTop: '-10%'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"none\",\n                  onClick: () => toggleColumnVisibility(column.id),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: hide_cell,\n                    width: 25,\n                    height: 25,\n                    alt: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map((row, rowIndex) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              className: `${styles.data_cell} ${hiddenColumns.includes(cell.column.id) ? styles.hidden : ''}`,\n              style: {\n                display: hiddenColumns.includes(cell.column.id) ? 'none' : ''\n              },\n              onDoubleClick: () => handleDoubleClick(rowIndex, cell.column.id),\n              children: editableCell && editableCell.rowIndex === rowIndex && editableCell.columnId === cell.column.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: cell.value,\n                onChange: e => handleCellChange(e, rowIndex, cell.column.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 23\n              }, this) : cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n}\n_s(SecretaryHugeTable, \"dkSrN7CUNH+U+IM96z4SQ+HZ4Qw=\", false, function () {\n  return [useTable];\n});\n_c = SecretaryHugeTable;\nexport default SecretaryHugeTable;\nvar _c;\n$RefreshReg$(_c, \"SecretaryHugeTable\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","useTable","useFilters","XLSX","saveAs","Button","styles","Filter","hide_cell","jsxDEV","_jsxDEV","SecretaryHugeTable","info_for_table","_s","tableData","setTableData","requests","originalData","editableCell","setEditableCell","hiddenColumns","setHiddenColumns","columns","Header","accessor","row","index","student","average_score","surname","name","patronymic","theme","teacher","consultant","organization","last_name_of_responsible","first_name_of_responsible","patronymic_name_of_responsible","job_title_of_resposible","additional_information","phone","email","basis_of_study","preprotection_grade","workProtecton","final_grade","date_of_birth","year_of_prev_education_completion","form_of_prev_education","year_of_admission","special_marks","type_of_fqw","headerProps","rowSpan","fqw_by_application","fqw_in_english","fqw_recommended","special_conditions","isVisible","number_of_debts","certificate_of_curriculum_completion","record_book_submitted","explanatory_note_submitted","diploma_with_honors","publication_agree","teacher_review","review","implementation_act","plagarism_report","application_for_postgraduate_leave","recommended_for_admission","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","filters","globalFilter","setGlobalFilter","toggleHideColumn","data","handleDoubleClick","rowIndex","columnId","handleCellChange","e","value","target","updatedData","map","toggleColumnVisibility","newHiddenColumns","includes","filter","id","exportToExcel","tableClone","document","getElementById","cloneNode","hiddenCells","querySelectorAll","hidden","forEach","cell","remove","ws","utils","table_to_sheet","wb","book_new","book_append_sheet","writeFile","resetTable","showOnlyColumnsByIndex","columnIndexesToShow","columnsToShow","column","Boolean","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","huge_table","headerGroup","getHeaderGroupProps","headers","visible","getHeaderProps","style","display","position","paddingRight","render","canFilter","right","bottom","marginRight","marginBottom","top","marginTop","variant","src","width","height","alt","getRowProps","cells","getCellProps","data_cell","onDoubleClick","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/react project/client/src/components/Tables/SecretaryTableData/SecretaryHugeTable.js"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useTable, useFilters } from 'react-table';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport { Button } from 'react-bootstrap';\r\nimport styles from '../../../container.module.css';\r\nimport Filter from '../Filter/Filter';\r\nimport hide_cell from '../../../img/hide_cell.png';\r\n\r\nfunction SecretaryHugeTable({ info_for_table }) {\r\n  const [tableData, setTableData] = useState(info_for_table.requests);\r\n  const [originalData] = useState(info_for_table.requests); // Store the original data\r\n  const [editableCell, setEditableCell] = useState(null);\r\n  const [hiddenColumns, setHiddenColumns] = useState([]);\r\n  const columns = React.useMemo(\r\n    () => [\r\n      \r\n      {\r\n        Header: '№ п/п',\r\n        accessor: (row, index) => index + 1,\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'ср.б.',\r\n        accessor: (row) =>  `${row.student.average_score}`,\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'Фамилия, Имя, Отчество',\r\n        accessor: (row) => `${row.student.surname} ${row.student.name} ${row.student.patronymic}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Тема',\r\n        \r\n        accessor:  (row) =>  `${row.theme.name}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Руководитель',\r\n        accessor: (row) => `${row.teacher.surname} ${row.teacher.name} ${row.teacher.patronymic}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Консультант',\r\n        accessor: (row) => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Рецензент',\r\n        accessor: (row) =>  `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'организация',\r\n        accessor: (row) =>  `${row.theme.organization.name} ${row.theme.organization.last_name_of_responsible} ${row.theme.organization.first_name_of_responsible} ${row.theme.organization.patronymic_name_of_responsible}\r\n         ${row.theme.organization.job_title_of_resposible} ${row.theme.organization.additional_information}`,\r\n         Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Телефон',\r\n        accessor: (row) =>  `${row.student.phone}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Email',\r\n        accessor: (row) =>  `${row.student.email}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'бюджет/платный',\r\n        accessor: (row) =>  `${row.student.basis_of_study}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'оценка на предзащите/ преддипломная практика',\r\n        accessor: (row) =>  `${row.preprotection_grade}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'оценка на защите',\r\n        accessor: (row) =>  `${row.workProtecton.final_grade}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'дата рождения',\r\n        accessor: (row) =>  `${row.student.date_of_birth}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'год окончания предыдущ образования',\r\n        accessor: (row) =>  `${row.student.year_of_prev_education_completion}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'форма предыдущего образования',\r\n        accessor: (row) =>  `${row.student.form_of_prev_education}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'год поступления',\r\n        accessor: (row) =>  `${row.student.year_of_admission}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'особые отметки',\r\n        accessor: (row) =>  `${row.student.special_marks}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'вид ВКР',\r\n        accessor: (row) =>  `${row.type_of_fqw}`,\r\n        Filter: Filter,\r\n        headerProps: { rowSpan: 2 },\r\n      },\r\n      {\r\n        Header: 'ВКР по заявке',\r\n        accessor: (row) =>  `${row.theme.fqw_by_application}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'ВКР на англ. языке',\r\n        accessor: (row) => (row.fqw_in_english ? 'да' : 'нет'),\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'ВКР рекомендовано',\r\n        accessor: (row) =>  `${row.fqw_recommended}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'наличие спец. условий',\r\n        accessor: (row) => (row.special_conditions ? 'да' : 'нет'),\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'приказы',\r\n        columns: [\r\n          {\r\n            Header: 'допуск',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            isVisible: true\r\n          },\r\n          {\r\n            Header: 'тема',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            isVisible: true\r\n          },\r\n          {\r\n            Header: 'изменение темы',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            isVisible: true\r\n          },\r\n          {\r\n            Header: 'рецензент',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            isVisible: true\r\n          },\r\n          {\r\n            Header: 'отчисление',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            isVisible: true\r\n          },\r\n          {\r\n            Header: 'с какого числа отчисление',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            isVisible: true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        Header: 'отметки о выполнении',\r\n        columns: [\r\n          \r\n      {\r\n        Header: 'долги',\r\n        accessor: (row) =>  `${row.student.number_of_debts}`,\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'справка о выполнении уч. плана',\r\n        accessor: (row) =>  `${row.student.certificate_of_curriculum_completion}`,\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'сдана зачетка',\r\n        accessor: (row) =>  `${row.student.record_book_submitted}`,\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'сдана пояснительная записка',\r\n        accessor: (row) => (row.explanatory_note_submitted ? 'да' : 'нет'),\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'красный диплом',\r\n        accessor: (row) => (row.student.diploma_with_honors ? 'да' : 'нет'),\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'согласие на публикацию',\r\n        accessor: (row) => (row.publication_agree ? 'да' : 'нет'),\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'отзыв',\r\n        accessor: (row) =>  `${row.teacher_review}`,\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'рецензия',\r\n        accessor: (row) =>  `${row.review}`,\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'Акт о внедрении',\r\n        accessor: (row) => (row.implementation_act ? 'да' : 'нет'),\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'отчет о плагиате',\r\n        accessor: (row) => (row.plagarism_report ? row.plagarism_report : 'нет'),\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'заявление на последипломный отпуск',\r\n        accessor: (row) => (row.student.application_for_postgraduate_leave ? row.student.application_for_postgraduate_leave: 'нет'),\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'рекомендован к поступлению',\r\n        accessor: (row) =>  `${row.student.recommended_for_admission}`,\r\n        Filter: Filter\r\n      },\r\n        ]\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state: { filters, globalFilter },\r\n    setGlobalFilter,\r\n    toggleHideColumn\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data: tableData,\r\n    },\r\n    useFilters\r\n  );\r\n\r\n  const handleDoubleClick = (rowIndex, columnId) => {\r\n    setEditableCell({ rowIndex, columnId });\r\n  };\r\n\r\n  const handleCellChange = (e, rowIndex, columnId) => {\r\n    const { value } = e.target;\r\n    const updatedData = tableData.map((row, index) => {\r\n      if (index === rowIndex) {\r\n        return {\r\n          ...row,\r\n          [columnId]: value,\r\n        };\r\n      }\r\n      return row;\r\n    });\r\n    setTableData(updatedData);\r\n  };\r\n\r\n  const toggleColumnVisibility = (columnId) => {\r\n    const newHiddenColumns = hiddenColumns.includes(columnId)\r\n      ? hiddenColumns.filter((id) => id !== columnId)\r\n      : [...hiddenColumns, columnId];\r\n    setHiddenColumns(newHiddenColumns);\r\n    toggleHideColumn(columnId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Apply hidden columns when component mounts\r\n    setHiddenColumns([]);\r\n  }, []);\r\n\r\n  const exportToExcel = () => {\r\n    const tableClone = document.getElementById('dataTable').cloneNode(true);\r\n    const hiddenCells = tableClone.querySelectorAll(`.${styles.hidden}`);\r\n    hiddenCells.forEach((cell) => cell.remove());\r\n\r\n    const ws = XLSX.utils.table_to_sheet(tableClone);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Data');\r\n    XLSX.writeFile(wb, 'Data.xlsx');\r\n  };\r\n\r\n  const resetTable = () => {\r\n    setTableData(originalData);\r\n    setHiddenColumns([]);\r\n    setEditableCell(null);\r\n    // Restore hidden columns\r\n    hiddenColumns.forEach((columnId) => {\r\n      toggleHideColumn(columnId);\r\n    });\r\n  };\r\n  const showOnlyColumnsByIndex = (columnIndexesToShow) => {\r\n    const columnsToShow = columns.map((column, index) => {\r\n      return columnIndexesToShow.includes(index) ? column.id : null;\r\n    }).filter(Boolean);\r\n    setHiddenColumns(columnsToShow);\r\n  };\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <h4 className=\"mb-4 text-center\">Таблица данных</h4>\r\n      <Button onClick={exportToExcel} className=\"mb-4\">\r\n        Export to Excel\r\n      </Button>\r\n      <Button onClick={resetTable} className=\"mb-4\">\r\n        Сбросить таблицу\r\n      </Button>\r\n      <Button onClick={() => showOnlyColumnsByIndex([0, 1, 2, 3, 4, 5])} className=\"mb-4\">\r\n  Оставить только определенные столбцы\r\n</Button>\r\n\r\n\r\n      <table {...getTableProps()} id=\"dataTable\" className={styles.huge_table}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => {\r\n                const visible = !hiddenColumns.includes(column.id);\r\n                return (\r\n                  <th\r\n                    {...column.getHeaderProps()}\r\n                    style={{\r\n                      display: visible ? 'table-cell' : 'none',\r\n                      position: 'relative',\r\n                      paddingRight: '-15px',\r\n                    }}\r\n                  >\r\n                    {column.render('Header')}\r\n                    {column.canFilter && (\r\n                      <div\r\n                        style={{\r\n                          position: 'absolute',\r\n                          right: '0',\r\n                          bottom: '0',\r\n                          marginRight: '-13%',\r\n                          marginBottom: '-8%'\r\n                        }}\r\n                      >\r\n                        <Filter column={column} />\r\n                      </div>\r\n                    )}\r\n                    {column.canFilter && (\r\n                      <div\r\n                        style={{\r\n                          position: 'absolute',\r\n                          right: '0',\r\n                          top: '0',\r\n                          marginRight: '-13%',\r\n                          marginTop: '-10%'\r\n                        }}\r\n                      >\r\n                        <Button variant=\"none\" onClick={() => toggleColumnVisibility(column.id)}>\r\n                          <img src={hide_cell} width={25} height={25} alt=\"Скрыть\" />\r\n                        </Button>\r\n                      </div>\r\n                    )}\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, rowIndex) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => (\r\n                  <td\r\n                    {...cell.getCellProps()}\r\n                    className={`${styles.data_cell} ${hiddenColumns.includes(cell.column.id) ? styles.hidden : ''}`}\r\n                    style={{ display: hiddenColumns.includes(cell.column.id) ? 'none' : '' }}\r\n                    onDoubleClick={() => handleDoubleClick(rowIndex, cell.column.id)}\r\n                  >\r\n                    {editableCell && editableCell.rowIndex === rowIndex && editableCell.columnId === cell.column.id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={cell.value}\r\n                        onChange={(e) => handleCellChange(e, rowIndex, cell.column.id)}\r\n                      />\r\n                    ) : (\r\n                      cell.render('Cell')\r\n                    )}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SecretaryHugeTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}