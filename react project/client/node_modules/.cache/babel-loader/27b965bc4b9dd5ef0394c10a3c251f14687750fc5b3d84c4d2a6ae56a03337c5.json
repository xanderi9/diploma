{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\ProtectionSchedule\\\\ViewProtectionSchedulePersons.js\";\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewProtectionSchedulePersons = ({\n  protection_schedule,\n  students_list_for_schedule\n}) => {\n  const formatDate = date => {\n    const options = {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    };\n    return date.toLocaleDateString('ru-RU', options);\n  };\n  const getFullName = studentData => {\n    if (studentData && studentData.student) {\n      const {\n        last_name,\n        first_name,\n        patronymic\n      } = studentData.student;\n      return `${last_name} ${first_name} ${patronymic}`;\n    } else {\n      return 'Unknown';\n    }\n  };\n  const limitStudentsPerDay = schedule => {\n    const updatedSchedule = {};\n    Object.entries(schedule).forEach(([date, groups]) => {\n      Object.entries(groups).forEach(([group, students]) => {\n        if (students.length > 12) {\n          const firstDayStudents = students.slice(0, 12);\n          const secondDayStudents = students.slice(12);\n          const nextDay = new Date(date);\n          nextDay.setDate(nextDay.getDate() + 1);\n          const nextDayKey = formatDate(nextDay);\n          if (!updatedSchedule[date]) {\n            updatedSchedule[date] = {};\n          }\n          if (!updatedSchedule[nextDayKey]) {\n            updatedSchedule[nextDayKey] = {};\n          }\n          updatedSchedule[date][group] = firstDayStudents;\n          updatedSchedule[nextDayKey][group] = secondDayStudents;\n        } else {\n          if (!updatedSchedule[date]) {\n            updatedSchedule[date] = {};\n          }\n          updatedSchedule[date][group] = students;\n        }\n      });\n    });\n    return updatedSchedule;\n  };\n  const groupedSchedule = distributeStudentsByProtectionDays(protection_schedule);\n  const limitedSchedule = limitStudentsPerDay(groupedSchedule);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(limitedSchedule).map(([date, groups]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), Object.entries(groups).map(([group, students]) => /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0424\\u0418\\u041E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0414\\u0430\\u0442\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: getFullName(student)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: group\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this)]\n      }, group, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this))]\n    }, date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_c = ViewProtectionSchedulePersons;\nexport default ViewProtectionSchedulePersons;\nvar _c;\n$RefreshReg$(_c, \"ViewProtectionSchedulePersons\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","ViewProtectionSchedulePersons","protection_schedule","students_list_for_schedule","formatDate","date","options","day","month","year","toLocaleDateString","getFullName","studentData","student","last_name","first_name","patronymic","limitStudentsPerDay","schedule","updatedSchedule","Object","entries","forEach","groups","group","students","length","firstDayStudents","slice","secondDayStudents","nextDay","Date","setDate","getDate","nextDayKey","groupedSchedule","distributeStudentsByProtectionDays","limitedSchedule","children","map","fileName","_jsxFileName","lineNumber","columnNumber","bordered","hover","index","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/ProtectionSchedule/ViewProtectionSchedulePersons.js"],"sourcesContent":["import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst ViewProtectionSchedulePersons = ({ protection_schedule, students_list_for_schedule }) => {\r\n    const formatDate = (date) => {\r\n        const options = { day: 'numeric', month: 'long', year: 'numeric' };\r\n        return date.toLocaleDateString('ru-RU', options);\r\n    };\r\n\r\n    const getFullName = (studentData) => {\r\n        if (studentData && studentData.student) {\r\n            const { last_name, first_name, patronymic } = studentData.student;\r\n            return `${last_name} ${first_name} ${patronymic}`;\r\n        } else {\r\n            return 'Unknown';\r\n        }\r\n    };\r\n\r\n    const limitStudentsPerDay = (schedule) => {\r\n        const updatedSchedule = {};\r\n\r\n        Object.entries(schedule).forEach(([date, groups]) => {\r\n            Object.entries(groups).forEach(([group, students]) => {\r\n                if (students.length > 12) {\r\n                    const firstDayStudents = students.slice(0, 12);\r\n                    const secondDayStudents = students.slice(12);\r\n                    \r\n                    const nextDay = new Date(date);\r\n                    nextDay.setDate(nextDay.getDate() + 1);\r\n                    const nextDayKey = formatDate(nextDay);\r\n\r\n                    if (!updatedSchedule[date]) {\r\n                        updatedSchedule[date] = {};\r\n                    }\r\n\r\n                    if (!updatedSchedule[nextDayKey]) {\r\n                        updatedSchedule[nextDayKey] = {};\r\n                    }\r\n\r\n                    updatedSchedule[date][group] = firstDayStudents;\r\n                    updatedSchedule[nextDayKey][group] = secondDayStudents;\r\n                } else {\r\n                    if (!updatedSchedule[date]) {\r\n                        updatedSchedule[date] = {};\r\n                    }\r\n\r\n                    updatedSchedule[date][group] = students;\r\n                }\r\n            });\r\n        });\r\n\r\n        return updatedSchedule;\r\n    };\r\n\r\n    const groupedSchedule = distributeStudentsByProtectionDays(protection_schedule);\r\n    const limitedSchedule = limitStudentsPerDay(groupedSchedule);\r\n\r\n    return (\r\n        <div>\r\n            {Object.entries(limitedSchedule).map(([date, groups]) => (\r\n                <div key={date}>\r\n                    <h3>{date}</h3>\r\n                    {Object.entries(groups).map(([group, students]) => (\r\n                        <Table bordered hover key={group}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ФИО</th>\r\n                                    <th>Группа</th>\r\n                                    <th>Дата</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {students.map((student, index) => (\r\n                                    <tr key={index}>\r\n                                        <td>{getFullName(student)}</td>\r\n                                        <td>{group}</td>\r\n                                        <td>{date}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewProtectionSchedulePersons;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}