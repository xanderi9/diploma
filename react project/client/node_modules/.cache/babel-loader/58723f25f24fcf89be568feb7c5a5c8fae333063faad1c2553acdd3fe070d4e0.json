{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\Tables\\\\SecretaryTableData\\\\SecretaryHugeTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { useTable, useFilters } from 'react-table';\nimport * as XLSX from 'xlsx';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport styles from '../../../container.module.css';\nimport Filter from '../Filter/Filter';\nimport hide_cell from '../../../img/hide_cell.png';\nimport BlockInfo from '../../BlockInfo/BlockInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SecretaryHugeTable({\n  info_for_table\n}) {\n  _s();\n  const isFirstRowEmpty = data => {\n    return data.length > 0 && Object.values(data[0]).every(cell => cell === null || cell === '');\n  };\n  const [tableData, setTableData] = useState(() => {\n    // Remove the first row if it is empty\n    const data = info_for_table.requests;\n    if (isFirstRowEmpty(data)) {\n      return data.slice(1);\n    }\n    return data;\n  });\n\n  // Добавляем состояние для отслеживания изменений в таблице\n  const [tableModified, setTableModified] = useState(false);\n  const [originalData] = useState(info_for_table.requests); // Store the original data\n  const [editableCell, setEditableCell] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [isColumnsModified, setIsColumnsModified] = useState(false);\n  const columns = React.useMemo(() => [{\n    Header: '№ п/п',\n    accessor: (row, index) => index + 1,\n    Filter: Filter\n  }, {\n    Header: 'ср.б.',\n    accessor: row => `${row.student.average_score}`,\n    Filter: Filter\n  }, {\n    Header: 'номер протокола',\n    accessor: row => `${row.workProtecton.protocol_number}`,\n    Filter: Filter\n  }, {\n    Header: 'дата протокола',\n    accessor: row => `${row.workProtecton.date}`,\n    Filter: Filter\n  }, {\n    Header: 'Фамилия, Имя, Отчество',\n    accessor: row => `${row.student.surname} ${row.student.name} ${row.student.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Тема',\n    accessor: row => `${row.theme.name}`,\n    Filter: Filter\n  }, {\n    Header: 'Руководитель',\n    accessor: row => `${row.teacher.surname} ${row.teacher.name} ${row.teacher.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Консультант',\n    accessor: row => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Рецензент',\n    accessor: row => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'организация',\n    accessor: row => `${row.theme.company.name} ${row.theme.company.last_name_of_responsible} ${row.theme.company.first_name_of_responsible} ${row.theme.company.patronymic_name_of_responsible}\n           ${row.theme.company.job_title_of_resposible} ${row.theme.company.additional_information}`,\n    Filter: Filter\n  }, {\n    Header: 'номер зачетки',\n    accessor: row => `${row.student.record_book_number}`,\n    Filter: Filter\n  }, {\n    Header: 'Телефон',\n    accessor: row => `${row.student.phone}`,\n    Filter: Filter\n  }, {\n    Header: 'Email',\n    accessor: row => `${row.student.email}`,\n    Filter: Filter\n  }, {\n    Header: 'бюджет/платный',\n    accessor: row => `${row.student.basis_of_study}`,\n    Filter: Filter\n  }, {\n    Header: 'оценка на предзащите/ преддипломная практика',\n    accessor: row => `${row.preprotection_grade}`,\n    Filter: Filter\n  }, {\n    Header: 'оценка на защите',\n    accessor: row => `${row.workProtecton.final_grade}`,\n    Filter: Filter\n  }, {\n    Header: 'дата рождения',\n    accessor: row => `${row.student.date_of_birth}`,\n    Filter: Filter\n  }, {\n    Header: 'год окончания предыдущ образования',\n    accessor: row => `${row.student.year_of_prev_education_completion}`,\n    Filter: Filter\n  }, {\n    Header: 'форма предыдущего образования',\n    accessor: row => `${row.student.form_of_prev_education}`,\n    Filter: Filter\n  }, {\n    Header: 'год поступления',\n    accessor: row => `${row.student.year_of_admission}`,\n    Filter: Filter\n  }, {\n    Header: 'особые отметки',\n    accessor: row => `${row.student.special_marks}`,\n    Filter: Filter\n  }, {\n    Header: 'приказы',\n    columns: [{\n      Header: 'допуск',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'тема',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'изменение темы',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'рецензент',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'отчисление',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'с какого числа отчисление',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }]\n  }, {\n    Header: 'отметки о выполнении',\n    columns: [{\n      Header: 'долги',\n      accessor: row => `${row.student.number_of_debts}`,\n      Filter: Filter\n    }, {\n      Header: 'справка о выполнении уч. плана',\n      accessor: row => `${row.student.certificate_of_curriculum_completion}`,\n      Filter: Filter\n    }, {\n      Header: 'сдана зачетка',\n      accessor: row => `${row.student.record_book_submitted}`,\n      Filter: Filter\n    }, {\n      Header: 'сдана пояснительная записка',\n      accessor: row => row.explanatory_note_submitted ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'красный диплом',\n      accessor: row => row.student.diploma_with_honors ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'согласие на публикацию',\n      accessor: row => row.publication_agree ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'отзыв',\n      accessor: row => `${row.teacher_review}`,\n      Filter: Filter\n    }, {\n      Header: 'рецензия',\n      accessor: row => `${row.review}`,\n      Filter: Filter\n    }, {\n      Header: 'Акт о внедрении',\n      accessor: row => row.implementation_act ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'отчет о плагиате',\n      accessor: row => row.plagarism_report ? row.plagarism_report : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'заявление на последипломный отпуск',\n      accessor: row => row.student.application_for_postgraduate_leave ? row.student.application_for_postgraduate_leave : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'рекомендован к поступлению',\n      accessor: row => `${row.student.recommended_for_admission}`,\n      Filter: Filter\n    }]\n  }, {\n    Header: 'вид ВКР',\n    accessor: row => `${row.type_of_fqw}`,\n    Filter: Filter,\n    headerProps: {\n      rowSpan: 2\n    }\n  }, {\n    Header: 'ВКР по заявке',\n    accessor: row => `${row.theme.fqw_by_application}`,\n    Filter: Filter\n  }, {\n    Header: 'ВКР на англ. языке',\n    accessor: row => row.fqw_in_english ? 'да' : 'нет',\n    Filter: Filter\n  }, {\n    Header: 'ВКР рекомендовано',\n    accessor: row => `${row.fqw_recommended}`,\n    Filter: Filter\n  }, {\n    Header: 'наличие спец. условий',\n    accessor: row => row.special_conditions ? 'да' : 'нет',\n    Filter: Filter\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    allColumns,\n    toggleHideColumn\n  } = useTable({\n    columns,\n    data: tableData\n  }, useFilters // Use the useFilters plugin hook\n  );\n  const [editedCellValues, setEditedCellValues] = useState({});\n  const handleClick = cell => {\n    if (editableCell && editableCell.rowIndex === cell.row.index && editableCell.columnId === cell.column.id) {\n      // If the clicked cell is already in edit mode, do nothing\n      return;\n    }\n    setEditableCell({\n      rowIndex: cell.row.index,\n      columnId: cell.column.id\n    });\n  };\n  const handleCellChange = (e, rowIndex, columnId) => {\n    const {\n      value\n    } = e.target;\n    setEditedCellValues(prevState => ({\n      ...prevState,\n      [`${rowIndex}-${columnId}`]: value\n    }));\n  };\n  const handleBlur = (rowIndex, columnId) => {\n    const editedValue = editedCellValues[`${rowIndex}-${columnId}`];\n    const updatedData = tableData.map((row, index) => {\n      if (index === rowIndex) {\n        return {\n          ...row,\n          [columnId]: editedValue !== undefined ? editedValue : row[columnId]\n        };\n      }\n      return row;\n    });\n    setTableData(updatedData);\n    setEditedCellValues({});\n    setEditableCell(null);\n    // Устанавливаем состояние, что таблица была изменена\n    setTableModified(true);\n  };\n  const saveChanges = () => {\n    // Здесь вы можете добавить логику для сохранения изменений\n    // Например, отправку данных на сервер или другое место\n    // После сохранения изменений сбросьте состояние обратно в false\n    setTableModified(false);\n  };\n  const handleKeyDown = (e, rowIndex, columnId) => {\n    if (e.key === 'Enter') {\n      handleBlur(rowIndex, columnId);\n    }\n  };\n  useEffect(() => {\n    window.dispatchEvent(new Event('resize')); // Trigger resize event to adjust table layout\n  }, [tableData]);\n  const toggleColumnVisibility = columnId => {\n    const newHiddenColumns = hiddenColumns.includes(columnId) ? hiddenColumns.filter(id => id !== columnId) : [...hiddenColumns, columnId];\n    setHiddenColumns(newHiddenColumns);\n    toggleHideColumn(columnId);\n  };\n  useEffect(() => {\n    // Apply hidden columns when component mounts\n    setHiddenColumns([]);\n  }, []);\n  const exportToExcel = () => {\n    const tableClone = document.getElementById('dataTable').cloneNode(true);\n    const hiddenCells = tableClone.querySelectorAll(`.${styles.hidden}`);\n    hiddenCells.forEach(cell => cell.remove());\n    const ws = XLSX.utils.table_to_sheet(tableClone);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Data');\n    XLSX.writeFile(wb, 'Data.xlsx');\n  };\n  const resetTable = () => {\n    if (tableModified) {\n      setTableData(originalData);\n      setHiddenColumns([]);\n      setEditableCell(null);\n      setIsColumnsModified(false); // Reset the modification state\n      setEditedCellValues({}); // Clear edited cell values\n      // Restore hidden columns\n      hiddenColumns.forEach(columnId => {\n        toggleHideColumn(columnId);\n      });\n      setTableModified(false); // Reset table modification state\n    }\n  };\n  const showOnlyColumnsByIndex = columnIndexesToShow => {\n    if (isColumnsModified) return; // Do nothing if columns have been modified\n\n    const newHiddenColumns = allColumns.map((column, index) => columnIndexesToShow.includes(index) ? '' : column.id !== '' ? column.id : null);\n    setHiddenColumns(newHiddenColumns.filter(Boolean));\n    setIsColumnsModified(true); // Set the flag to true to indicate column modification\n    allColumns.forEach(column => {\n      if (!column.isVisible) {\n        toggleHideColumn(column.id);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: styles.actions,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: exportToExcel,\n          children: \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442 \\u0432 Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: resetTable,\n          children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: saveChanges,\n          disabled: !tableModified,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlockInfo, {\n      title: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435\",\n      content: \"\\u041D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 \\u043D\\u0430 \\u044F\\u0447\\u0435\\u0439\\u043A\\u0443 \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u044B, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435. \\u041D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 Enter, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      id: \"dataTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 19\n            }, this), column.canFilter ? column.render('Filter') : null, /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => toggleColumnVisibility(column.id),\n              className: styles.hideColumnIcon,\n              title: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C \\u043A\\u043E\\u043B\\u043E\\u043D\\u043A\\u0443\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: hide_cell,\n                alt: \"hide cell\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map((row, rowIndex) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              onClick: () => handleClick(cell),\n              className: (editableCell === null || editableCell === void 0 ? void 0 : editableCell.rowIndex) === rowIndex && (editableCell === null || editableCell === void 0 ? void 0 : editableCell.columnId) === cell.column.id ? styles.editable : '',\n              children: (editableCell === null || editableCell === void 0 ? void 0 : editableCell.rowIndex) === rowIndex && (editableCell === null || editableCell === void 0 ? void 0 : editableCell.columnId) === cell.column.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedCellValues[`${rowIndex}-${cell.column.id}`] !== undefined ? editedCellValues[`${rowIndex}-${cell.column.id}`] : cell.render('Cell'),\n                onChange: e => handleCellChange(e, rowIndex, cell.column.id),\n                onBlur: () => handleBlur(rowIndex, cell.column.id),\n                onKeyDown: e => handleKeyDown(e, rowIndex, cell.column.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 23\n              }, this) : cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 408,\n    columnNumber: 5\n  }, this);\n}\n_s(SecretaryHugeTable, \"KHB67oQA/SkozULBE1+PcqvBVh4=\", false, function () {\n  return [useTable];\n});\n_c = SecretaryHugeTable;\nexport default SecretaryHugeTable;\nvar _c;\n$RefreshReg$(_c, \"SecretaryHugeTable\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","useTable","useFilters","XLSX","Button","Row","Col","styles","Filter","hide_cell","BlockInfo","jsxDEV","_jsxDEV","SecretaryHugeTable","info_for_table","_s","isFirstRowEmpty","data","length","Object","values","every","cell","tableData","setTableData","requests","slice","tableModified","setTableModified","originalData","editableCell","setEditableCell","hiddenColumns","setHiddenColumns","isColumnsModified","setIsColumnsModified","columns","Header","accessor","row","index","student","average_score","workProtecton","protocol_number","date","surname","name","patronymic","theme","teacher","consultant","company","last_name_of_responsible","first_name_of_responsible","patronymic_name_of_responsible","job_title_of_resposible","additional_information","record_book_number","phone","email","basis_of_study","preprotection_grade","final_grade","date_of_birth","year_of_prev_education_completion","form_of_prev_education","year_of_admission","special_marks","isVisible","number_of_debts","certificate_of_curriculum_completion","record_book_submitted","explanatory_note_submitted","diploma_with_honors","publication_agree","teacher_review","review","implementation_act","plagarism_report","application_for_postgraduate_leave","recommended_for_admission","type_of_fqw","headerProps","rowSpan","fqw_by_application","fqw_in_english","fqw_recommended","special_conditions","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","allColumns","toggleHideColumn","editedCellValues","setEditedCellValues","handleClick","rowIndex","columnId","column","id","handleCellChange","e","value","target","prevState","handleBlur","editedValue","updatedData","map","undefined","saveChanges","handleKeyDown","key","window","dispatchEvent","Event","toggleColumnVisibility","newHiddenColumns","includes","filter","exportToExcel","tableClone","document","getElementById","cloneNode","hiddenCells","querySelectorAll","hidden","forEach","remove","ws","utils","table_to_sheet","wb","book_new","book_append_sheet","writeFile","resetTable","showOnlyColumnsByIndex","columnIndexesToShow","Boolean","children","className","actions","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","title","content","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","canFilter","hideColumnIcon","src","alt","getRowProps","cells","getCellProps","editable","type","onChange","onBlur","onKeyDown","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/Tables/SecretaryTableData/SecretaryHugeTable.js"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useTable, useFilters } from 'react-table';\r\nimport * as XLSX from 'xlsx';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport styles from '../../../container.module.css';\r\nimport Filter from '../Filter/Filter';\r\nimport hide_cell from '../../../img/hide_cell.png';\r\nimport BlockInfo from '../../BlockInfo/BlockInfo';\r\n\r\nfunction SecretaryHugeTable({ info_for_table }) {\r\n\r\n  const isFirstRowEmpty = (data) => {\r\n    return data.length > 0 && Object.values(data[0]).every((cell) => cell === null || cell === '');\r\n  };\r\n\r\n  const [tableData, setTableData] = useState(() => {\r\n    // Remove the first row if it is empty\r\n    const data = info_for_table.requests;\r\n    if (isFirstRowEmpty(data)) {\r\n      return data.slice(1);\r\n    }\r\n    return data;\r\n  });\r\n\r\n    // Добавляем состояние для отслеживания изменений в таблице\r\n    const [tableModified, setTableModified] = useState(false);\r\n  \r\n    const [originalData] = useState(info_for_table.requests); // Store the original data\r\n    const [editableCell, setEditableCell] = useState(null);\r\n  \r\n    const [hiddenColumns, setHiddenColumns] = useState([]);\r\n    const [isColumnsModified, setIsColumnsModified] = useState(false);\r\n  \r\n    const columns = React.useMemo(\r\n      () => [\r\n        \r\n        {\r\n          Header: '№ п/п',\r\n          accessor: (row, index) => index + 1,\r\n          Filter: Filter\r\n        },\r\n        {\r\n          Header: 'ср.б.',\r\n          accessor: (row) =>  `${row.student.average_score}`,\r\n          Filter: Filter\r\n        },\r\n        {\r\n          Header: 'номер протокола',\r\n          accessor: (row) =>  `${row.workProtecton.protocol_number}`,\r\n          Filter: Filter\r\n        },\r\n        {\r\n          Header: 'дата протокола',\r\n          accessor: (row) =>  `${row.workProtecton.date}`,\r\n          Filter: Filter\r\n        },\r\n  \r\n        {\r\n          Header: 'Фамилия, Имя, Отчество',\r\n          accessor: (row) => `${row.student.surname} ${row.student.name} ${row.student.patronymic}`,\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'Тема',\r\n          \r\n          accessor:  (row) =>  `${row.theme.name}`,\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'Руководитель',\r\n          accessor: (row) => `${row.teacher.surname} ${row.teacher.name} ${row.teacher.patronymic}`,\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'Консультант',\r\n          accessor: (row) => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'Рецензент',\r\n          accessor: (row) =>  `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'организация',\r\n          accessor: (row) =>  `${row.theme.company.name} ${row.theme.company.last_name_of_responsible} ${row.theme.company.first_name_of_responsible} ${row.theme.company.patronymic_name_of_responsible}\r\n           ${row.theme.company.job_title_of_resposible} ${row.theme.company.additional_information}`,\r\n           Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'номер зачетки',\r\n          accessor: (row) =>  `${row.student.record_book_number}`,\r\n           Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'Телефон',\r\n          accessor: (row) =>  `${row.student.phone}`,\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'Email',\r\n          accessor: (row) =>  `${row.student.email}`,\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'бюджет/платный',\r\n          accessor: (row) =>  `${row.student.basis_of_study}`,\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'оценка на предзащите/ преддипломная практика',\r\n          accessor: (row) =>  `${row.preprotection_grade}`,\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'оценка на защите',\r\n          accessor: (row) =>  `${row.workProtecton.final_grade}`,\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'дата рождения',\r\n          accessor: (row) =>  `${row.student.date_of_birth}`,\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'год окончания предыдущ образования',\r\n          accessor: (row) =>  `${row.student.year_of_prev_education_completion}`,\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'форма предыдущего образования',\r\n          accessor: (row) =>  `${row.student.form_of_prev_education}`,\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'год поступления',\r\n          accessor: (row) =>  `${row.student.year_of_admission}`,\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'особые отметки',\r\n          accessor: (row) =>  `${row.student.special_marks}`,\r\n          Filter: Filter,\r\n        },\r\n        \r\n        {\r\n          Header: 'приказы',\r\n          columns: [\r\n            {\r\n              Header: 'допуск',\r\n              accessor: (row) => `${row.workProtecton.final_grade}`,\r\n              Filter: Filter,\r\n              isVisible: true\r\n            },\r\n            {\r\n              Header: 'тема',\r\n              accessor: (row) => `${row.workProtecton.final_grade}`,\r\n              Filter: Filter,\r\n              isVisible: true\r\n            },\r\n            {\r\n              Header: 'изменение темы',\r\n              accessor: (row) => `${row.workProtecton.final_grade}`,\r\n              Filter: Filter,\r\n              isVisible: true\r\n            },\r\n            {\r\n              Header: 'рецензент',\r\n              accessor: (row) => `${row.workProtecton.final_grade}`,\r\n              Filter: Filter,\r\n              isVisible: true\r\n            },\r\n            {\r\n              Header: 'отчисление',\r\n              accessor: (row) => `${row.workProtecton.final_grade}`,\r\n              Filter: Filter,\r\n              isVisible: true\r\n            },\r\n            {\r\n              Header: 'с какого числа отчисление',\r\n              accessor: (row) => `${row.workProtecton.final_grade}`,\r\n              Filter: Filter,\r\n              isVisible: true\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          Header: 'отметки о выполнении',\r\n          columns: [\r\n            \r\n        {\r\n          Header: 'долги',\r\n          accessor: (row) =>  `${row.student.number_of_debts}`,\r\n          Filter: Filter\r\n        },\r\n        {\r\n          Header: 'справка о выполнении уч. плана',\r\n          accessor: (row) =>  `${row.student.certificate_of_curriculum_completion}`,\r\n          Filter: Filter\r\n        },\r\n        {\r\n          Header: 'сдана зачетка',\r\n          accessor: (row) =>  `${row.student.record_book_submitted}`,\r\n          Filter: Filter\r\n        },\r\n        {\r\n          Header: 'сдана пояснительная записка',\r\n          accessor: (row) => (row.explanatory_note_submitted ? 'да' : 'нет'),\r\n          Filter: Filter\r\n        },\r\n        {\r\n          Header: 'красный диплом',\r\n          accessor: (row) => (row.student.diploma_with_honors ? 'да' : 'нет'),\r\n          Filter: Filter\r\n        },\r\n        {\r\n          Header: 'согласие на публикацию',\r\n          accessor: (row) => (row.publication_agree ? 'да' : 'нет'),\r\n          Filter: Filter\r\n        },\r\n        {\r\n          Header: 'отзыв',\r\n          accessor: (row) =>  `${row.teacher_review}`,\r\n          Filter: Filter\r\n        },\r\n        {\r\n          Header: 'рецензия',\r\n          accessor: (row) =>  `${row.review}`,\r\n          Filter: Filter\r\n        },\r\n        {\r\n          Header: 'Акт о внедрении',\r\n          accessor: (row) => (row.implementation_act ? 'да' : 'нет'),\r\n          Filter: Filter\r\n        },\r\n        {\r\n          Header: 'отчет о плагиате',\r\n          accessor: (row) => (row.plagarism_report ? row.plagarism_report : 'нет'),\r\n          Filter: Filter\r\n        },\r\n        {\r\n          Header: 'заявление на последипломный отпуск',\r\n          accessor: (row) => (row.student.application_for_postgraduate_leave ? row.student.application_for_postgraduate_leave: 'нет'),\r\n          Filter: Filter\r\n        },\r\n        {\r\n          Header: 'рекомендован к поступлению',\r\n          accessor: (row) =>  `${row.student.recommended_for_admission}`,\r\n          Filter: Filter\r\n        },\r\n          ]\r\n        },\r\n        {\r\n          Header: 'вид ВКР',\r\n          accessor: (row) =>  `${row.type_of_fqw}`,\r\n          Filter: Filter,\r\n          headerProps: { rowSpan: 2 },\r\n        },\r\n        {\r\n          Header: 'ВКР по заявке',\r\n          accessor: (row) =>  `${row.theme.fqw_by_application}`,\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'ВКР на англ. языке',\r\n          accessor: (row) => (row.fqw_in_english ? 'да' : 'нет'),\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'ВКР рекомендовано',\r\n          accessor: (row) =>  `${row.fqw_recommended}`,\r\n          Filter: Filter,\r\n        },\r\n        {\r\n          Header: 'наличие спец. условий',\r\n          accessor: (row) => (row.special_conditions ? 'да' : 'нет'),\r\n          Filter: Filter,\r\n        },\r\n      ],\r\n      []\r\n    );\r\n  \r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n      allColumns,\r\n      toggleHideColumn,\r\n    } = useTable(\r\n      { columns, data: tableData },\r\n      useFilters // Use the useFilters plugin hook\r\n    );\r\n  \r\n    const [editedCellValues, setEditedCellValues] = useState({});\r\n  \r\n    const handleClick = (cell) => {\r\n      if (editableCell && editableCell.rowIndex === cell.row.index && editableCell.columnId === cell.column.id) {\r\n        // If the clicked cell is already in edit mode, do nothing\r\n        return;\r\n      }\r\n      setEditableCell({\r\n        rowIndex: cell.row.index,\r\n        columnId: cell.column.id,\r\n      });\r\n    };\r\n  \r\n    const handleCellChange = (e, rowIndex, columnId) => {\r\n      const { value } = e.target;\r\n      setEditedCellValues((prevState) => ({\r\n        ...prevState,\r\n        [`${rowIndex}-${columnId}`]: value,\r\n      }));\r\n    };\r\n    \r\n    const handleBlur = (rowIndex, columnId) => {\r\n      const editedValue = editedCellValues[`${rowIndex}-${columnId}`];\r\n      const updatedData = tableData.map((row, index) => {\r\n        if (index === rowIndex) {\r\n          return {\r\n            ...row,\r\n            [columnId]: editedValue !== undefined ? editedValue : row[columnId],\r\n          };\r\n        }\r\n        return row;\r\n      });\r\n      setTableData(updatedData);\r\n      setEditedCellValues({});\r\n      setEditableCell(null);\r\n      // Устанавливаем состояние, что таблица была изменена\r\n      setTableModified(true);\r\n    };\r\n    \r\n    const saveChanges = () => {\r\n      // Здесь вы можете добавить логику для сохранения изменений\r\n      // Например, отправку данных на сервер или другое место\r\n      // После сохранения изменений сбросьте состояние обратно в false\r\n      setTableModified(false);\r\n    };\r\n  \r\n    const handleKeyDown = (e, rowIndex, columnId) => {\r\n      if (e.key === 'Enter') {\r\n        handleBlur(rowIndex, columnId);\r\n      }\r\n    };\r\n  \r\n    useEffect(() => {\r\n      window.dispatchEvent(new Event('resize')); // Trigger resize event to adjust table layout\r\n    }, [tableData]);\r\n  \r\n    const toggleColumnVisibility = (columnId) => {\r\n      const newHiddenColumns = hiddenColumns.includes(columnId)\r\n        ? hiddenColumns.filter((id) => id !== columnId)\r\n        : [...hiddenColumns, columnId];\r\n      setHiddenColumns(newHiddenColumns);\r\n      toggleHideColumn(columnId);\r\n    };\r\n  \r\n    useEffect(() => {\r\n      // Apply hidden columns when component mounts\r\n      setHiddenColumns([]);\r\n    }, []);\r\n  \r\n    const exportToExcel = () => {\r\n      const tableClone = document.getElementById('dataTable').cloneNode(true);\r\n      const hiddenCells = tableClone.querySelectorAll(`.${styles.hidden}`);\r\n      hiddenCells.forEach((cell) => cell.remove());\r\n  \r\n      const ws = XLSX.utils.table_to_sheet(tableClone);\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, 'Data');\r\n      XLSX.writeFile(wb, 'Data.xlsx');\r\n    };\r\n  \r\n    const resetTable = () => {\r\n      if (tableModified) {\r\n        setTableData(originalData);\r\n        setHiddenColumns([]);\r\n        setEditableCell(null);\r\n        setIsColumnsModified(false); // Reset the modification state\r\n        setEditedCellValues({}); // Clear edited cell values\r\n        // Restore hidden columns\r\n        hiddenColumns.forEach((columnId) => {\r\n          toggleHideColumn(columnId);\r\n        });\r\n        setTableModified(false); // Reset table modification state\r\n      }\r\n    };\r\n    \r\n    const showOnlyColumnsByIndex = (columnIndexesToShow) => {\r\n      if (isColumnsModified) return; // Do nothing if columns have been modified\r\n    \r\n      const newHiddenColumns = allColumns.map((column, index) =>\r\n        columnIndexesToShow.includes(index) ? '' : (column.id !== '' ? column.id : null)\r\n      );\r\n    \r\n      setHiddenColumns(newHiddenColumns.filter(Boolean));\r\n      setIsColumnsModified(true); // Set the flag to true to indicate column modification\r\n      allColumns.forEach((column) => {\r\n        if (!column.isVisible) {\r\n          toggleHideColumn(column.id);\r\n        }\r\n      });\r\n    };\r\n    \r\n  return (\r\n    <div>\r\n      <Row className={styles.actions}>\r\n        <Col>\r\n          <Button onClick={exportToExcel}>Экспорт в Excel</Button>\r\n        </Col>\r\n        <Col>\r\n          <Button onClick={resetTable}>Сбросить изменения</Button>\r\n        </Col>\r\n        <Col>\r\n          <Button onClick={saveChanges} disabled={!tableModified}>\r\n            Сохранить изменения\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <BlockInfo\r\n        title=\"Примечание\"\r\n        content=\"Нажмите на ячейку таблицы, чтобы начать редактирование. Нажмите Enter, чтобы сохранить изменения.\"\r\n      />\r\n      <table {...getTableProps()} id=\"dataTable\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>\r\n                  <div>{column.render('Header')}</div>\r\n                  {column.canFilter ? column.render('Filter') : null}\r\n                  <span\r\n                    onClick={() => toggleColumnVisibility(column.id)}\r\n                    className={styles.hideColumnIcon}\r\n                    title=\"Скрыть колонку\"\r\n                  >\r\n                    <img src={hide_cell} alt=\"hide cell\" />\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, rowIndex) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => (\r\n                  <td\r\n                    {...cell.getCellProps()}\r\n                    onClick={() => handleClick(cell)}\r\n                    className={editableCell?.rowIndex === rowIndex && editableCell?.columnId === cell.column.id ? styles.editable : ''}\r\n                  >\r\n                    {editableCell?.rowIndex === rowIndex && editableCell?.columnId === cell.column.id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editedCellValues[`${rowIndex}-${cell.column.id}`] !== undefined ? editedCellValues[`${rowIndex}-${cell.column.id}`] : cell.render('Cell')}\r\n                        onChange={(e) => handleCellChange(e, rowIndex, cell.column.id)}\r\n                        onBlur={() => handleBlur(rowIndex, cell.column.id)}\r\n                        onKeyDown={(e) => handleKeyDown(e, rowIndex, cell.column.id)}\r\n                      />\r\n                    ) : (\r\n                      cell.render('Cell')\r\n                    )}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SecretaryHugeTable;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AAC3D,SAASC,QAAQ,EAAEC,UAAU,QAAQ,aAAa;AAClD,OAAO,KAAKC,IAAI,MAAM,MAAM;AAC5B,SAASC,MAAM,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAClD,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,kBAAkBA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAE9C,MAAMC,eAAe,GAAIC,IAAI,IAAK;IAChC,OAAOA,IAAI,CAACC,MAAM,GAAG,CAAC,IAAIC,MAAM,CAACC,MAAM,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC,CAACI,KAAK,CAAEC,IAAI,IAAKA,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,EAAE,CAAC;EAChG,CAAC;EAED,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,MAAM;IAC/C;IACA,MAAMmB,IAAI,GAAGH,cAAc,CAACW,QAAQ;IACpC,IAAIT,eAAe,CAACC,IAAI,CAAC,EAAE;MACzB,OAAOA,IAAI,CAACS,KAAK,CAAC,CAAC,CAAC;IACtB;IACA,OAAOT,IAAI;EACb,CAAC,CAAC;;EAEA;EACA,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAM,CAAC+B,YAAY,CAAC,GAAG/B,QAAQ,CAACgB,cAAc,CAACW,QAAQ,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAM,CAACkC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMsC,OAAO,GAAGvC,KAAK,CAACE,OAAO,CAC3B,MAAM,CAEJ;IACEsC,MAAM,EAAE,OAAO;IACfC,QAAQ,EAAEA,CAACC,GAAG,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC;IACnChC,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,OAAO;IACfC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACE,OAAO,CAACC,aAAc,EAAC;IAClDlC,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,iBAAiB;IACzBC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACI,aAAa,CAACC,eAAgB,EAAC;IAC1DpC,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,gBAAgB;IACxBC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACI,aAAa,CAACE,IAAK,EAAC;IAC/CrC,MAAM,EAAEA;EACV,CAAC,EAED;IACE6B,MAAM,EAAE,wBAAwB;IAChCC,QAAQ,EAAGC,GAAG,IAAM,GAAEA,GAAG,CAACE,OAAO,CAACK,OAAQ,IAAGP,GAAG,CAACE,OAAO,CAACM,IAAK,IAAGR,GAAG,CAACE,OAAO,CAACO,UAAW,EAAC;IACzFxC,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,MAAM;IAEdC,QAAQ,EAAIC,GAAG,IAAO,GAAEA,GAAG,CAACU,KAAK,CAACF,IAAK,EAAC;IACxCvC,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,cAAc;IACtBC,QAAQ,EAAGC,GAAG,IAAM,GAAEA,GAAG,CAACW,OAAO,CAACJ,OAAQ,IAAGP,GAAG,CAACW,OAAO,CAACH,IAAK,IAAGR,GAAG,CAACW,OAAO,CAACF,UAAW,EAAC;IACzFxC,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,aAAa;IACrBC,QAAQ,EAAGC,GAAG,IAAM,GAAEA,GAAG,CAACY,UAAU,CAACL,OAAQ,IAAGP,GAAG,CAACY,UAAU,CAACJ,IAAK,IAAGR,GAAG,CAACY,UAAU,CAACH,UAAW,EAAC;IAClGxC,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,WAAW;IACnBC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACY,UAAU,CAACL,OAAQ,IAAGP,GAAG,CAACY,UAAU,CAACJ,IAAK,IAAGR,GAAG,CAACY,UAAU,CAACH,UAAW,EAAC;IACnGxC,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,aAAa;IACrBC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACU,KAAK,CAACG,OAAO,CAACL,IAAK,IAAGR,GAAG,CAACU,KAAK,CAACG,OAAO,CAACC,wBAAyB,IAAGd,GAAG,CAACU,KAAK,CAACG,OAAO,CAACE,yBAA0B,IAAGf,GAAG,CAACU,KAAK,CAACG,OAAO,CAACG,8BAA+B;AACzM,aAAahB,GAAG,CAACU,KAAK,CAACG,OAAO,CAACI,uBAAwB,IAAGjB,GAAG,CAACU,KAAK,CAACG,OAAO,CAACK,sBAAuB,EAAC;IACzFjD,MAAM,EAAEA;EACX,CAAC,EACD;IACE6B,MAAM,EAAE,eAAe;IACvBC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACE,OAAO,CAACiB,kBAAmB,EAAC;IACtDlD,MAAM,EAAEA;EACX,CAAC,EACD;IACE6B,MAAM,EAAE,SAAS;IACjBC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACE,OAAO,CAACkB,KAAM,EAAC;IAC1CnD,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,OAAO;IACfC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACE,OAAO,CAACmB,KAAM,EAAC;IAC1CpD,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,gBAAgB;IACxBC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACE,OAAO,CAACoB,cAAe,EAAC;IACnDrD,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,8CAA8C;IACtDC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACuB,mBAAoB,EAAC;IAChDtD,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,kBAAkB;IAC1BC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACI,aAAa,CAACoB,WAAY,EAAC;IACtDvD,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,eAAe;IACvBC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACE,OAAO,CAACuB,aAAc,EAAC;IAClDxD,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,oCAAoC;IAC5CC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACE,OAAO,CAACwB,iCAAkC,EAAC;IACtEzD,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,+BAA+B;IACvCC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACE,OAAO,CAACyB,sBAAuB,EAAC;IAC3D1D,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,iBAAiB;IACzBC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACE,OAAO,CAAC0B,iBAAkB,EAAC;IACtD3D,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,gBAAgB;IACxBC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACE,OAAO,CAAC2B,aAAc,EAAC;IAClD5D,MAAM,EAAEA;EACV,CAAC,EAED;IACE6B,MAAM,EAAE,SAAS;IACjBD,OAAO,EAAE,CACP;MACEC,MAAM,EAAE,QAAQ;MAChBC,QAAQ,EAAGC,GAAG,IAAM,GAAEA,GAAG,CAACI,aAAa,CAACoB,WAAY,EAAC;MACrDvD,MAAM,EAAEA,MAAM;MACd6D,SAAS,EAAE;IACb,CAAC,EACD;MACEhC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAGC,GAAG,IAAM,GAAEA,GAAG,CAACI,aAAa,CAACoB,WAAY,EAAC;MACrDvD,MAAM,EAAEA,MAAM;MACd6D,SAAS,EAAE;IACb,CAAC,EACD;MACEhC,MAAM,EAAE,gBAAgB;MACxBC,QAAQ,EAAGC,GAAG,IAAM,GAAEA,GAAG,CAACI,aAAa,CAACoB,WAAY,EAAC;MACrDvD,MAAM,EAAEA,MAAM;MACd6D,SAAS,EAAE;IACb,CAAC,EACD;MACEhC,MAAM,EAAE,WAAW;MACnBC,QAAQ,EAAGC,GAAG,IAAM,GAAEA,GAAG,CAACI,aAAa,CAACoB,WAAY,EAAC;MACrDvD,MAAM,EAAEA,MAAM;MACd6D,SAAS,EAAE;IACb,CAAC,EACD;MACEhC,MAAM,EAAE,YAAY;MACpBC,QAAQ,EAAGC,GAAG,IAAM,GAAEA,GAAG,CAACI,aAAa,CAACoB,WAAY,EAAC;MACrDvD,MAAM,EAAEA,MAAM;MACd6D,SAAS,EAAE;IACb,CAAC,EACD;MACEhC,MAAM,EAAE,2BAA2B;MACnCC,QAAQ,EAAGC,GAAG,IAAM,GAAEA,GAAG,CAACI,aAAa,CAACoB,WAAY,EAAC;MACrDvD,MAAM,EAAEA,MAAM;MACd6D,SAAS,EAAE;IACb,CAAC;EAEL,CAAC,EACD;IACEhC,MAAM,EAAE,sBAAsB;IAC9BD,OAAO,EAAE,CAEX;MACEC,MAAM,EAAE,OAAO;MACfC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACE,OAAO,CAAC6B,eAAgB,EAAC;MACpD9D,MAAM,EAAEA;IACV,CAAC,EACD;MACE6B,MAAM,EAAE,gCAAgC;MACxCC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACE,OAAO,CAAC8B,oCAAqC,EAAC;MACzE/D,MAAM,EAAEA;IACV,CAAC,EACD;MACE6B,MAAM,EAAE,eAAe;MACvBC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACE,OAAO,CAAC+B,qBAAsB,EAAC;MAC1DhE,MAAM,EAAEA;IACV,CAAC,EACD;MACE6B,MAAM,EAAE,6BAA6B;MACrCC,QAAQ,EAAGC,GAAG,IAAMA,GAAG,CAACkC,0BAA0B,GAAG,IAAI,GAAG,KAAM;MAClEjE,MAAM,EAAEA;IACV,CAAC,EACD;MACE6B,MAAM,EAAE,gBAAgB;MACxBC,QAAQ,EAAGC,GAAG,IAAMA,GAAG,CAACE,OAAO,CAACiC,mBAAmB,GAAG,IAAI,GAAG,KAAM;MACnElE,MAAM,EAAEA;IACV,CAAC,EACD;MACE6B,MAAM,EAAE,wBAAwB;MAChCC,QAAQ,EAAGC,GAAG,IAAMA,GAAG,CAACoC,iBAAiB,GAAG,IAAI,GAAG,KAAM;MACzDnE,MAAM,EAAEA;IACV,CAAC,EACD;MACE6B,MAAM,EAAE,OAAO;MACfC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACqC,cAAe,EAAC;MAC3CpE,MAAM,EAAEA;IACV,CAAC,EACD;MACE6B,MAAM,EAAE,UAAU;MAClBC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACsC,MAAO,EAAC;MACnCrE,MAAM,EAAEA;IACV,CAAC,EACD;MACE6B,MAAM,EAAE,iBAAiB;MACzBC,QAAQ,EAAGC,GAAG,IAAMA,GAAG,CAACuC,kBAAkB,GAAG,IAAI,GAAG,KAAM;MAC1DtE,MAAM,EAAEA;IACV,CAAC,EACD;MACE6B,MAAM,EAAE,kBAAkB;MAC1BC,QAAQ,EAAGC,GAAG,IAAMA,GAAG,CAACwC,gBAAgB,GAAGxC,GAAG,CAACwC,gBAAgB,GAAG,KAAM;MACxEvE,MAAM,EAAEA;IACV,CAAC,EACD;MACE6B,MAAM,EAAE,oCAAoC;MAC5CC,QAAQ,EAAGC,GAAG,IAAMA,GAAG,CAACE,OAAO,CAACuC,kCAAkC,GAAGzC,GAAG,CAACE,OAAO,CAACuC,kCAAkC,GAAE,KAAM;MAC3HxE,MAAM,EAAEA;IACV,CAAC,EACD;MACE6B,MAAM,EAAE,4BAA4B;MACpCC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACE,OAAO,CAACwC,yBAA0B,EAAC;MAC9DzE,MAAM,EAAEA;IACV,CAAC;EAED,CAAC,EACD;IACE6B,MAAM,EAAE,SAAS;IACjBC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAAC2C,WAAY,EAAC;IACxC1E,MAAM,EAAEA,MAAM;IACd2E,WAAW,EAAE;MAAEC,OAAO,EAAE;IAAE;EAC5B,CAAC,EACD;IACE/C,MAAM,EAAE,eAAe;IACvBC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACU,KAAK,CAACoC,kBAAmB,EAAC;IACrD7E,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,oBAAoB;IAC5BC,QAAQ,EAAGC,GAAG,IAAMA,GAAG,CAAC+C,cAAc,GAAG,IAAI,GAAG,KAAM;IACtD9E,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,mBAAmB;IAC3BC,QAAQ,EAAGC,GAAG,IAAO,GAAEA,GAAG,CAACgD,eAAgB,EAAC;IAC5C/E,MAAM,EAAEA;EACV,CAAC,EACD;IACE6B,MAAM,EAAE,uBAAuB;IAC/BC,QAAQ,EAAGC,GAAG,IAAMA,GAAG,CAACiD,kBAAkB,GAAG,IAAI,GAAG,KAAM;IAC1DhF,MAAM,EAAEA;EACV,CAAC,CACF,EACD,EACF,CAAC;EAED,MAAM;IACJiF,aAAa;IACbC,iBAAiB;IACjBC,YAAY;IACZC,IAAI;IACJC,UAAU;IACVC,UAAU;IACVC;EACF,CAAC,GAAG9F,QAAQ,CACV;IAAEmC,OAAO;IAAEnB,IAAI,EAAEM;EAAU,CAAC,EAC5BrB,UAAU,CAAC;EACb,CAAC;EAED,MAAM,CAAC8F,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnG,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5D,MAAMoG,WAAW,GAAI5E,IAAI,IAAK;IAC5B,IAAIQ,YAAY,IAAIA,YAAY,CAACqE,QAAQ,KAAK7E,IAAI,CAACiB,GAAG,CAACC,KAAK,IAAIV,YAAY,CAACsE,QAAQ,KAAK9E,IAAI,CAAC+E,MAAM,CAACC,EAAE,EAAE;MACxG;MACA;IACF;IACAvE,eAAe,CAAC;MACdoE,QAAQ,EAAE7E,IAAI,CAACiB,GAAG,CAACC,KAAK;MACxB4D,QAAQ,EAAE9E,IAAI,CAAC+E,MAAM,CAACC;IACxB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAACC,CAAC,EAAEL,QAAQ,EAAEC,QAAQ,KAAK;IAClD,MAAM;MAAEK;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAC1BT,mBAAmB,CAAEU,SAAS,KAAM;MAClC,GAAGA,SAAS;MACZ,CAAE,GAAER,QAAS,IAAGC,QAAS,EAAC,GAAGK;IAC/B,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,UAAU,GAAGA,CAACT,QAAQ,EAAEC,QAAQ,KAAK;IACzC,MAAMS,WAAW,GAAGb,gBAAgB,CAAE,GAAEG,QAAS,IAAGC,QAAS,EAAC,CAAC;IAC/D,MAAMU,WAAW,GAAGvF,SAAS,CAACwF,GAAG,CAAC,CAACxE,GAAG,EAAEC,KAAK,KAAK;MAChD,IAAIA,KAAK,KAAK2D,QAAQ,EAAE;QACtB,OAAO;UACL,GAAG5D,GAAG;UACN,CAAC6D,QAAQ,GAAGS,WAAW,KAAKG,SAAS,GAAGH,WAAW,GAAGtE,GAAG,CAAC6D,QAAQ;QACpE,CAAC;MACH;MACA,OAAO7D,GAAG;IACZ,CAAC,CAAC;IACFf,YAAY,CAACsF,WAAW,CAAC;IACzBb,mBAAmB,CAAC,CAAC,CAAC,CAAC;IACvBlE,eAAe,CAAC,IAAI,CAAC;IACrB;IACAH,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMqF,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA;IACA;IACArF,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMsF,aAAa,GAAGA,CAACV,CAAC,EAAEL,QAAQ,EAAEC,QAAQ,KAAK;IAC/C,IAAII,CAAC,CAACW,GAAG,KAAK,OAAO,EAAE;MACrBP,UAAU,CAACT,QAAQ,EAAEC,QAAQ,CAAC;IAChC;EACF,CAAC;EAEDpG,SAAS,CAAC,MAAM;IACdoH,MAAM,CAACC,aAAa,CAAC,IAAIC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC,EAAE,CAAC/F,SAAS,CAAC,CAAC;EAEf,MAAMgG,sBAAsB,GAAInB,QAAQ,IAAK;IAC3C,MAAMoB,gBAAgB,GAAGxF,aAAa,CAACyF,QAAQ,CAACrB,QAAQ,CAAC,GACrDpE,aAAa,CAAC0F,MAAM,CAAEpB,EAAE,IAAKA,EAAE,KAAKF,QAAQ,CAAC,GAC7C,CAAC,GAAGpE,aAAa,EAAEoE,QAAQ,CAAC;IAChCnE,gBAAgB,CAACuF,gBAAgB,CAAC;IAClCzB,gBAAgB,CAACK,QAAQ,CAAC;EAC5B,CAAC;EAEDpG,SAAS,CAAC,MAAM;IACd;IACAiC,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM0F,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,SAAS,CAAC,IAAI,CAAC;IACvE,MAAMC,WAAW,GAAGJ,UAAU,CAACK,gBAAgB,CAAE,IAAG1H,MAAM,CAAC2H,MAAO,EAAC,CAAC;IACpEF,WAAW,CAACG,OAAO,CAAE7G,IAAI,IAAKA,IAAI,CAAC8G,MAAM,CAAC,CAAC,CAAC;IAE5C,MAAMC,EAAE,GAAGlI,IAAI,CAACmI,KAAK,CAACC,cAAc,CAACX,UAAU,CAAC;IAChD,MAAMY,EAAE,GAAGrI,IAAI,CAACmI,KAAK,CAACG,QAAQ,CAAC,CAAC;IAChCtI,IAAI,CAACmI,KAAK,CAACI,iBAAiB,CAACF,EAAE,EAAEH,EAAE,EAAE,MAAM,CAAC;IAC5ClI,IAAI,CAACwI,SAAS,CAACH,EAAE,EAAE,WAAW,CAAC;EACjC,CAAC;EAED,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIjH,aAAa,EAAE;MACjBH,YAAY,CAACK,YAAY,CAAC;MAC1BI,gBAAgB,CAAC,EAAE,CAAC;MACpBF,eAAe,CAAC,IAAI,CAAC;MACrBI,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC;MAC7B8D,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACzB;MACAjE,aAAa,CAACmG,OAAO,CAAE/B,QAAQ,IAAK;QAClCL,gBAAgB,CAACK,QAAQ,CAAC;MAC5B,CAAC,CAAC;MACFxE,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC;EAED,MAAMiH,sBAAsB,GAAIC,mBAAmB,IAAK;IACtD,IAAI5G,iBAAiB,EAAE,OAAO,CAAC;;IAE/B,MAAMsF,gBAAgB,GAAG1B,UAAU,CAACiB,GAAG,CAAC,CAACV,MAAM,EAAE7D,KAAK,KACpDsG,mBAAmB,CAACrB,QAAQ,CAACjF,KAAK,CAAC,GAAG,EAAE,GAAI6D,MAAM,CAACC,EAAE,KAAK,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,IAC7E,CAAC;IAEDrE,gBAAgB,CAACuF,gBAAgB,CAACE,MAAM,CAACqB,OAAO,CAAC,CAAC;IAClD5G,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5B2D,UAAU,CAACqC,OAAO,CAAE9B,MAAM,IAAK;MAC7B,IAAI,CAACA,MAAM,CAAChC,SAAS,EAAE;QACrB0B,gBAAgB,CAACM,MAAM,CAACC,EAAE,CAAC;MAC7B;IACF,CAAC,CAAC;EACJ,CAAC;EAEH,oBACE1F,OAAA;IAAAoI,QAAA,gBACEpI,OAAA,CAACP,GAAG;MAAC4I,SAAS,EAAE1I,MAAM,CAAC2I,OAAQ;MAAAF,QAAA,gBAC7BpI,OAAA,CAACN,GAAG;QAAA0I,QAAA,eACFpI,OAAA,CAACR,MAAM;UAAC+I,OAAO,EAAExB,aAAc;UAAAqB,QAAA,EAAC;QAAe;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACN3I,OAAA,CAACN,GAAG;QAAA0I,QAAA,eACFpI,OAAA,CAACR,MAAM;UAAC+I,OAAO,EAAEP,UAAW;UAAAI,QAAA,EAAC;QAAkB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACN3I,OAAA,CAACN,GAAG;QAAA0I,QAAA,eACFpI,OAAA,CAACR,MAAM;UAAC+I,OAAO,EAAElC,WAAY;UAACuC,QAAQ,EAAE,CAAC7H,aAAc;UAAAqH,QAAA,EAAC;QAExD;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN3I,OAAA,CAACF,SAAS;MACR+I,KAAK,EAAC,8DAAY;MAClBC,OAAO,EAAC;IAAmG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5G,CAAC,eACF3I,OAAA;MAAA,GAAW6E,aAAa,CAAC,CAAC;MAAEa,EAAE,EAAC,WAAW;MAAA0C,QAAA,gBACxCpI,OAAA;QAAAoI,QAAA,EACGrD,YAAY,CAACoB,GAAG,CAAE4C,WAAW,iBAC5B/I,OAAA;UAAA,GAAQ+I,WAAW,CAACC,mBAAmB,CAAC,CAAC;UAAAZ,QAAA,EACtCW,WAAW,CAACE,OAAO,CAAC9C,GAAG,CAAEV,MAAM,iBAC9BzF,OAAA;YAAA,GAAQyF,MAAM,CAACyD,cAAc,CAAC,CAAC;YAAAd,QAAA,gBAC7BpI,OAAA;cAAAoI,QAAA,EAAM3C,MAAM,CAAC0D,MAAM,CAAC,QAAQ;YAAC;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EACnClD,MAAM,CAAC2D,SAAS,GAAG3D,MAAM,CAAC0D,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,eAClDnJ,OAAA;cACEuI,OAAO,EAAEA,CAAA,KAAM5B,sBAAsB,CAAClB,MAAM,CAACC,EAAE,CAAE;cACjD2C,SAAS,EAAE1I,MAAM,CAAC0J,cAAe;cACjCR,KAAK,EAAC,iFAAgB;cAAAT,QAAA,eAEtBpI,OAAA;gBAAKsJ,GAAG,EAAEzJ,SAAU;gBAAC0J,GAAG,EAAC;cAAW;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR3I,OAAA;QAAA,GAAW8E,iBAAiB,CAAC,CAAC;QAAAsD,QAAA,EAC3BpD,IAAI,CAACmB,GAAG,CAAC,CAACxE,GAAG,EAAE4D,QAAQ,KAAK;UAC3BN,UAAU,CAACtD,GAAG,CAAC;UACf,oBACE3B,OAAA;YAAA,GAAQ2B,GAAG,CAAC6H,WAAW,CAAC,CAAC;YAAApB,QAAA,EACtBzG,GAAG,CAAC8H,KAAK,CAACtD,GAAG,CAAEzF,IAAI,iBAClBV,OAAA;cAAA,GACMU,IAAI,CAACgJ,YAAY,CAAC,CAAC;cACvBnB,OAAO,EAAEA,CAAA,KAAMjD,WAAW,CAAC5E,IAAI,CAAE;cACjC2H,SAAS,EAAE,CAAAnH,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEqE,QAAQ,MAAKA,QAAQ,IAAI,CAAArE,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEsE,QAAQ,MAAK9E,IAAI,CAAC+E,MAAM,CAACC,EAAE,GAAG/F,MAAM,CAACgK,QAAQ,GAAG,EAAG;cAAAvB,QAAA,EAElH,CAAAlH,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEqE,QAAQ,MAAKA,QAAQ,IAAI,CAAArE,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEsE,QAAQ,MAAK9E,IAAI,CAAC+E,MAAM,CAACC,EAAE,gBAC/E1F,OAAA;gBACE4J,IAAI,EAAC,MAAM;gBACX/D,KAAK,EAAET,gBAAgB,CAAE,GAAEG,QAAS,IAAG7E,IAAI,CAAC+E,MAAM,CAACC,EAAG,EAAC,CAAC,KAAKU,SAAS,GAAGhB,gBAAgB,CAAE,GAAEG,QAAS,IAAG7E,IAAI,CAAC+E,MAAM,CAACC,EAAG,EAAC,CAAC,GAAGhF,IAAI,CAACyI,MAAM,CAAC,MAAM,CAAE;gBACjJU,QAAQ,EAAGjE,CAAC,IAAKD,gBAAgB,CAACC,CAAC,EAAEL,QAAQ,EAAE7E,IAAI,CAAC+E,MAAM,CAACC,EAAE,CAAE;gBAC/DoE,MAAM,EAAEA,CAAA,KAAM9D,UAAU,CAACT,QAAQ,EAAE7E,IAAI,CAAC+E,MAAM,CAACC,EAAE,CAAE;gBACnDqE,SAAS,EAAGnE,CAAC,IAAKU,aAAa,CAACV,CAAC,EAAEL,QAAQ,EAAE7E,IAAI,CAAC+E,MAAM,CAACC,EAAE;cAAE;gBAAA8C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9D,CAAC,GAEFjI,IAAI,CAACyI,MAAM,CAAC,MAAM;YACnB;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAET,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACxI,EAAA,CAndQF,kBAAkB;EAAA,QAyRnBZ,QAAQ;AAAA;AAAA2K,EAAA,GAzRP/J,kBAAkB;AAqd3B,eAAeA,kBAAkB;AAAC,IAAA+J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}