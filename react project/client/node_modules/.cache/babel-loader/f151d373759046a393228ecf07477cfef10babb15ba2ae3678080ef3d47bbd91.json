{"ast":null,"code":"import petrovich from 'petrovich';\nimport { saveAs } from 'file-saver';\nimport PizZip from 'pizzip';\nimport Docxtemplater from 'docxtemplater';\nimport word from './protocol.docx';\nconst generateProtocolsFunction = async ({\n  composition_of_sec,\n  selectedGroup,\n  groupData,\n  data\n}) => {\n  // Извлекаем председателя и членов СЭК\n  const chairman = composition_of_sec.member_of_SEC.find(comp => comp.chairman_of_SEC === true);\n  const members_list = composition_of_sec.member_of_SEC.filter(sec => sec.chairman_of_SEC === false);\n\n  // Функция для получения инициалов (Фамилия И.О.)\n  const getInitials = (firstName, patronymic) => {\n    return `${firstName.charAt(0)}. ${patronymic.charAt(0)}.`;\n  };\n  try {\n    // Загружаем шаблон документа\n    const response = await fetch(word); // Путь к вашему файлу шаблона\n    if (!response.ok) throw new Error('Ошибка сети');\n    const arrayBuffer = await response.arrayBuffer();\n\n    // Проходимся по каждому элементу groupData (предполагаем, что это массив)\n    for (const item of groupData) {\n      const student = item.student;\n      const request = student.request_list.find(req => req.is_accepted_request); // Находим принятую заявку студента\n\n      if (!request) {\n        console.warn(`Для студента ${student.last_name} ${student.first_name} не найдена принятая заявка.`);\n        continue; // Пропускаем студента без принятой заявки\n      }\n      const teacher = request.teacher;\n      const theme = request.theme;\n\n      // Вычисляем время окончания: добавляем 20 минут к времени начала\n      const [hours_start, min_start] = item.work_protection.time.split(':');\n      const startTime = new Date();\n      startTime.setHours(hours_start);\n      startTime.setMinutes(min_start);\n      startTime.setMinutes(startTime.getMinutes() + 20);\n      const hours_end = startTime.getHours();\n      const min_end = startTime.getMinutes();\n\n      // Формируем объект с данными для подстановки в шаблон\n      const dataToRender = {\n        protocol_number: item.work_protection.protocol_number,\n        group_protection_date: new Date(item.work_protection.date).toLocaleDateString('ru-RU'),\n        hours_start: hours_start,\n        min_start: min_start,\n        hours_end: hours_end,\n        min_end: min_end,\n        chairman_last_name: chairman.user.last_name,\n        chairman_np: getInitials(chairman.user.first_name, chairman.user.patronymic),\n        chairman_degree: chairman.employee_information.academic_degree,\n        chairman_job_title: chairman.employee_information.job_title,\n        members_list: members_list.map(member => ({\n          members_last_name: member.user.last_name,\n          members_np: member.user ? getInitials(member.user.first_name, member.user.patronymic) : '',\n          members_degree: member.employee_information.academic_degree || '',\n          members_job_title: member.employee_information.job_title,\n          members_place_of_work: member.employee_information.place_of_work\n        })),\n        student_fullname: `${student.last_name} ${student.first_name} ${student.patronymic}`,\n        specialityCode: student.group.speciality.code,\n        specialtityProgram: student.group.speciality.name,\n        theme: theme ? theme.name : '',\n        teacher_last_name: teacher.last_name,\n        teacher_np: getInitials(teacher.first_name, teacher.patronymic),\n        teacher_degree: teacher.employee_information.academic_degree,\n        teacher_job_title: teacher.employee_information.job_title,\n        reviewer_last_name: theme && theme.reviewer.user.last_name ? theme.reviewer.user.last_name : '',\n        reviewer_np: theme && theme.reviewer.user.last_name ? getInitials(theme.reviewer.user.first_name, theme.reviewer.user.patronymic) : '',\n        reviewer_degree: theme && theme.reviewer.employee_information.academic_degree ? theme.reviewer.employee_information.academic_degree : '',\n        reviewer_job_title: theme && theme.reviewer.employee_information.job_title ? theme.reviewer.employee_information.job_title : '',\n        student_last_name: student.last_name,\n        student_np: getInitials(student.first_name, student.patronymic),\n        secretary_last_name: data.user.last_name,\n        secretary_np: getInitials(data.user.first_name, data.user.patronymic),\n        duration: 20\n      };\n\n      // Создаем новую инстанцию Docxtemplater для каждого студента\n      const zip = new PizZip(arrayBuffer);\n      const doc = new Docxtemplater(zip);\n      doc.setData(dataToRender);\n      doc.render();\n\n      // Генерируем файл и сохраняем его\n      const output = doc.getZip().generate({\n        type: 'blob'\n      });\n      saveAs(output, `Протокол_${student.last_name}_${student.first_name}.docx`);\n    }\n  } catch (error) {\n    console.error('Ошибка загрузки файла:', error);\n  }\n};\nexport default generateProtocolsFunction;","map":{"version":3,"names":["petrovich","saveAs","PizZip","Docxtemplater","word","generateProtocolsFunction","composition_of_sec","selectedGroup","groupData","data","chairman","member_of_SEC","find","comp","chairman_of_SEC","members_list","filter","sec","getInitials","firstName","patronymic","charAt","response","fetch","ok","Error","arrayBuffer","item","student","request","request_list","req","is_accepted_request","console","warn","last_name","first_name","teacher","theme","hours_start","min_start","work_protection","time","split","startTime","Date","setHours","setMinutes","getMinutes","hours_end","getHours","min_end","dataToRender","protocol_number","group_protection_date","date","toLocaleDateString","chairman_last_name","user","chairman_np","chairman_degree","employee_information","academic_degree","chairman_job_title","job_title","map","member","members_last_name","members_np","members_degree","members_job_title","members_place_of_work","place_of_work","student_fullname","specialityCode","group","speciality","code","specialtityProgram","name","teacher_last_name","teacher_np","teacher_degree","teacher_job_title","reviewer_last_name","reviewer","reviewer_np","reviewer_degree","reviewer_job_title","student_last_name","student_np","secretary_last_name","secretary_np","duration","zip","doc","setData","render","output","getZip","generate","type","error"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/Forms/GenerateProtocols/GenerateProtocolFunction.js"],"sourcesContent":["import petrovich from 'petrovich';\r\nimport { saveAs } from 'file-saver';\r\nimport PizZip from 'pizzip';\r\nimport Docxtemplater from 'docxtemplater';\r\nimport word from './protocol.docx';\r\n\r\nconst generateProtocolsFunction = async ({ \r\n    composition_of_sec, \r\n    selectedGroup,\r\n    groupData,\r\n    data\r\n}) => {\r\n    // Извлекаем председателя и членов СЭК\r\n    const chairman = composition_of_sec.member_of_SEC.find(comp => comp.chairman_of_SEC === true);\r\n    const members_list = composition_of_sec.member_of_SEC.filter(sec => sec.chairman_of_SEC === false);\r\n\r\n    // Функция для получения инициалов (Фамилия И.О.)\r\n    const getInitials = (firstName, patronymic) => {\r\n        return `${firstName.charAt(0)}. ${patronymic.charAt(0)}.`;\r\n    };\r\n\r\n    try {\r\n        // Загружаем шаблон документа\r\n        const response = await fetch(word); // Путь к вашему файлу шаблона\r\n        if (!response.ok) throw new Error('Ошибка сети');\r\n        const arrayBuffer = await response.arrayBuffer();\r\n\r\n        // Проходимся по каждому элементу groupData (предполагаем, что это массив)\r\n        for (const item of groupData) {\r\n            const student = item.student;\r\n            const request = student.request_list.find(req => req.is_accepted_request); // Находим принятую заявку студента\r\n\r\n            if (!request) {\r\n                console.warn(`Для студента ${student.last_name} ${student.first_name} не найдена принятая заявка.`);\r\n                continue; // Пропускаем студента без принятой заявки\r\n            }\r\n\r\n            const teacher = request.teacher;\r\n            const theme = request.theme;\r\n\r\n            // Вычисляем время окончания: добавляем 20 минут к времени начала\r\n            const [hours_start, min_start] = item.work_protection.time.split(':');\r\n            const startTime = new Date();\r\n            startTime.setHours(hours_start);\r\n            startTime.setMinutes(min_start);\r\n            startTime.setMinutes(startTime.getMinutes() + 20);\r\n\r\n            const hours_end = startTime.getHours();\r\n            const min_end = startTime.getMinutes();\r\n\r\n            // Формируем объект с данными для подстановки в шаблон\r\n            const dataToRender = {\r\n                protocol_number: item.work_protection.protocol_number,\r\n                group_protection_date: new Date(item.work_protection.date).toLocaleDateString('ru-RU'),\r\n                hours_start: hours_start,\r\n                min_start: min_start,\r\n                hours_end: hours_end,\r\n                min_end: min_end,\r\n                chairman_last_name: chairman.user.last_name,\r\n                chairman_np: getInitials(chairman.user.first_name, chairman.user.patronymic),\r\n                chairman_degree: chairman.employee_information.academic_degree,\r\n                chairman_job_title: chairman.employee_information.job_title,\r\n                members_list: members_list.map(member => ({\r\n                    members_last_name: member.user.last_name,\r\n                    members_np: member.user ? getInitials(member.user.first_name, member.user.patronymic) : '',\r\n                    members_degree: member.employee_information.academic_degree || '',\r\n                    members_job_title: member.employee_information.job_title,\r\n                    members_place_of_work: member.employee_information.place_of_work,\r\n                })),\r\n                student_fullname: `${student.last_name} ${student.first_name} ${student.patronymic}`,\r\n                specialityCode: student.group.speciality.code,\r\n                specialtityProgram: student.group.speciality.name,\r\n                theme: theme ? theme.name : '',\r\n                teacher_last_name: teacher.last_name,\r\n                teacher_np: getInitials(teacher.first_name, teacher.patronymic),\r\n                teacher_degree: teacher.employee_information.academic_degree,\r\n                teacher_job_title: teacher.employee_information.job_title,\r\n                reviewer_last_name: theme && theme.reviewer.user.last_name ? theme.reviewer.user.last_name : '',\r\n                reviewer_np: theme && theme.reviewer.user.last_name ? getInitials(theme.reviewer.user.first_name, theme.reviewer.user.patronymic) : '',\r\n                reviewer_degree: theme && theme.reviewer.employee_information.academic_degree ? theme.reviewer.employee_information.academic_degree : '',\r\n                reviewer_job_title: theme && theme.reviewer.employee_information.job_title ? theme.reviewer.employee_information.job_title : '',\r\n                student_last_name: student.last_name,\r\n                student_np: getInitials(student.first_name, student.patronymic),\r\n                secretary_last_name: data.user.last_name,\r\n                secretary_np: getInitials(data.user.first_name, data.user.patronymic),\r\n                duration: 20,\r\n            };\r\n\r\n            // Создаем новую инстанцию Docxtemplater для каждого студента\r\n            const zip = new PizZip(arrayBuffer);\r\n            const doc = new Docxtemplater(zip);\r\n\r\n            doc.setData(dataToRender);\r\n            doc.render();\r\n\r\n            // Генерируем файл и сохраняем его\r\n            const output = doc.getZip().generate({ type: 'blob' });\r\n            saveAs(output, `Протокол_${student.last_name}_${student.first_name}.docx`);\r\n        }\r\n    } catch (error) {\r\n        console.error('Ошибка загрузки файла:', error);\r\n    }\r\n};\r\n\r\nexport default generateProtocolsFunction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}