{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\ProtectionSchedule\\\\ViewProtectionScheduleTable.jsx\";\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ViewProtectionScheduleTable({\n  protection_schedule\n}) {\n  // Helper function to convert date format\n  const formatDate = dateString => {\n    const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\n    const day = dateString.slice(0, 2);\n    const month = months[parseInt(dateString.slice(2, 4), 10) - 1];\n    const year = dateString.slice(4, 8);\n    return `${day} ${month} ${year}`;\n  };\n  const generateHeading = item => {\n    if (item.group) {\n      const {\n        name,\n        speciality\n      } = item.group;\n      if (name.includes('Б')) {\n        return `Бакалавры по специальности ${speciality ? speciality.code : ''} \"${speciality ? speciality.name : ''}\" по программе ${speciality && speciality.field_of_study ? speciality.field_of_study.code : ''} \"${speciality && speciality.field_of_study ? speciality.field_of_study.name : ''}\"`;\n      } else if (name.includes('М')) {\n        return `Магистры по специальности ${speciality ? speciality.code : ''} \"${speciality ? speciality.name : ''}\" по программе ${speciality && speciality.field_of_study ? speciality.field_of_study.code : ''} \"${speciality && speciality.field_of_study ? speciality.field_of_study.name : ''}\"`;\n      } else {\n        return `Группа ${name}`;\n      }\n    } else {\n      return item.additional_information || '';\n    }\n  };\n\n  // Group by group name\n  const groupedByGroupName = protection_schedule.reduce((acc, item) => {\n    const groupName = item.group ? item.group.name : null;\n    if (!acc[groupName]) {\n      acc[groupName] = [];\n    }\n    acc[groupName].push(item);\n    return acc;\n  }, {});\n\n  // Group by date\n  const groupedByDate = protection_schedule.reduce((acc, item) => {\n    const date = item.date;\n    if (!acc[date]) {\n      acc[date] = [];\n    }\n    acc[date].push(item);\n    return acc;\n  }, {});\n  const sortedDates = Object.keys(groupedByDate).sort();\n  const processedGroups = new Set();\n  let bottomTable = null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mb-4 text-center\",\n      children: \"\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A \\u0437\\u0430\\u0449\\u0438\\u0442 \\u0412\\u041A\\u0420\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-5\",\n      children: [sortedDates.map((date, index) => {\n        const dateItems = groupedByDate[date];\n\n        // Filter out items that have been processed already\n        const unprocessedItems = dateItems.filter(item => !processedGroups.has(item.group ? item.group.name : null));\n        if (unprocessedItems.length > 1) {\n          const uniqueGroupNames = [...new Set(unprocessedItems.map(item => item.group ? item.group.name : null))];\n          uniqueGroupNames.forEach(groupName => processedGroups.add(groupName));\n          const sortedGroupNames = uniqueGroupNames.sort((a, b) => {\n            if (a && b) {\n              if (a.includes('М') && b.includes('Б')) return -1;\n              if (a.includes('Б') && b.includes('М')) return 1;\n              return 0;\n            } else {\n              return 0;\n            }\n          });\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '20px'\n            },\n            children: sortedGroupNames.map((groupName, groupIdx) => {\n              const groupItem = unprocessedItems.find(item => item.group ? item.group.name === groupName : null);\n              if (!groupItem) return null;\n              const heading = generateHeading(groupItem.group);\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: heading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Table, {\n                  bordered: true,\n                  style: {\n                    width: '100%'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"\\u041F\\u041F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"\\u0414\\u0430\\u0442\\u0430\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 95,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"\\u0412\\u0440\\u0435\\u043C\\u044F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 96,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"\\u0410\\u0443\\u0434\\u0438\\u0442\\u043E\\u0440\\u0438\\u044F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 97,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"\\u0423\\u0447. \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 98,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: unprocessedItems.map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: idx + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: formatDate(item.date)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 105,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: \"9:00\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 106,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.audience_number\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 107,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.group ? item.group.name : ''\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 31\n                      }, this)]\n                    }, item.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 23\n                }, this)]\n              }, groupIdx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this);\n            })\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this);\n        } else {\n          return null;\n        }\n      }), Object.keys(groupedByGroupName).sort((a, b) => {\n        if (a && b) {\n          if (a.includes('М') && b.includes('Б')) return -1;\n          if (a.includes('Б') && b.includes('М')) return 1;\n          return 0;\n        } else {\n          return 0;\n        }\n      }).map((groupName, index) => {\n        if (!processedGroups.has(groupName)) {\n          const groupItems = groupedByGroupName[groupName];\n          processedGroups.add(groupName);\n\n          // Group by date for the same group\n          const groupedByDateForGroup = groupItems.reduce((acc, item) => {\n            const date = item.date;\n            if (!acc[date]) {\n              acc[date] = [];\n            }\n            acc[date].push(item);\n            return acc;\n          }, {});\n          const sortedGroupDates = Object.keys(groupedByDateForGroup).sort();\n          const group = groupItems[0].group;\n          const heading = generateHeading(group);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: heading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              bordered: true,\n              style: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u041F\\u041F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0414\\u0430\\u0442\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0412\\u0440\\u0435\\u043C\\u044F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0410\\u0443\\u0434\\u0438\\u0442\\u043E\\u0440\\u0438\\u044F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0423\\u0447. \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: sortedGroupDates.map((date, dateIdx) => {\n                  const dateItems = groupedByDateForGroup[date];\n                  return dateItems.map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dateIdx * dateItems.length + idx + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatDate(item.date)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"9:00\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item.audience_number\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item.group ? item.group.name : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 27\n                    }, this)]\n                  }, item.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 25\n                  }, this));\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this);\n        } else {\n          return null;\n        }\n      }), groupedByGroupName[null] && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"\\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          bordered: true,\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u041F\\u041F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0414\\u0430\\u0442\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0412\\u0440\\u0435\\u043C\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0410\\u0443\\u0434\\u0438\\u0442\\u043E\\u0440\\u0438\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0423\\u0447. \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: groupedByGroupName[null].map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: idx + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(item.date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"9:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.audience_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.additional_information\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = ViewProtectionScheduleTable;\nexport default ViewProtectionScheduleTable;\nvar _c;\n$RefreshReg$(_c, \"ViewProtectionScheduleTable\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewProtectionScheduleTable","protection_schedule","formatDate","dateString","months","day","slice","month","parseInt","year","generateHeading","item","group","name","speciality","includes","code","field_of_study","additional_information","groupedByGroupName","reduce","acc","groupName","push","groupedByDate","date","sortedDates","Object","keys","sort","processedGroups","Set","bottomTable","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","dateItems","unprocessedItems","filter","has","length","uniqueGroupNames","forEach","add","sortedGroupNames","a","b","style","marginBottom","groupIdx","groupItem","find","heading","bordered","width","idx","audience_number","id","groupItems","groupedByDateForGroup","sortedGroupDates","dateIdx","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/ProtectionSchedule/ViewProtectionScheduleTable.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nfunction ViewProtectionScheduleTable({ protection_schedule }) {\r\n  // Helper function to convert date format\r\n  const formatDate = (dateString) => {\r\n    const months = [\r\n      'января', 'февраля', 'марта', 'апреля', 'мая', 'июня',\r\n      'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'\r\n    ];\r\n    const day = dateString.slice(0, 2);\r\n    const month = months[parseInt(dateString.slice(2, 4), 10) - 1];\r\n    const year = dateString.slice(4, 8);\r\n    return `${day} ${month} ${year}`;\r\n  };\r\n\r\n  const generateHeading = (item) => {\r\n    if (item.group) {\r\n      const { name, speciality } = item.group;\r\n      if (name.includes('Б')) {\r\n        return `Бакалавры по специальности ${speciality ? speciality.code : ''} \"${speciality ? speciality.name : ''}\" по программе ${speciality && speciality.field_of_study ? speciality.field_of_study.code : ''} \"${speciality && speciality.field_of_study ? speciality.field_of_study.name : ''}\"`;\r\n      } else if (name.includes('М')) {\r\n        return `Магистры по специальности ${speciality ? speciality.code : ''} \"${speciality ? speciality.name : ''}\" по программе ${speciality && speciality.field_of_study ? speciality.field_of_study.code : ''} \"${speciality && speciality.field_of_study ? speciality.field_of_study.name : ''}\"`;\r\n      } else {\r\n        return `Группа ${name}`;\r\n      }\r\n    } else {\r\n      return item.additional_information || '';\r\n    }\r\n  };\r\n  \r\n\r\n  // Group by group name\r\n  const groupedByGroupName = protection_schedule.reduce((acc, item) => {\r\n    const groupName = item.group ? item.group.name : null;\r\n    if (!acc[groupName]) {\r\n      acc[groupName] = [];\r\n    }\r\n    acc[groupName].push(item);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Group by date\r\n  const groupedByDate = protection_schedule.reduce((acc, item) => {\r\n    const date = item.date;\r\n    if (!acc[date]) {\r\n      acc[date] = [];\r\n    }\r\n    acc[date].push(item);\r\n    return acc;\r\n  }, {});\r\n\r\n  const sortedDates = Object.keys(groupedByDate).sort();\r\n\r\n  const processedGroups = new Set();\r\n  let bottomTable = null;\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"mb-4 text-center\">График защит ВКР</h4>\r\n      <div className='mx-5'>\r\n        {sortedDates.map((date, index) => {\r\n          const dateItems = groupedByDate[date];\r\n\r\n          // Filter out items that have been processed already\r\n          const unprocessedItems = dateItems.filter(item => !processedGroups.has(item.group ? item.group.name : null));\r\n\r\n          if (unprocessedItems.length > 1) {\r\n            const uniqueGroupNames = [...new Set(unprocessedItems.map(item => item.group ? item.group.name : null))];\r\n            uniqueGroupNames.forEach(groupName => processedGroups.add(groupName));\r\n\r\n            const sortedGroupNames = uniqueGroupNames.sort((a, b) => {\r\n              if (a && b) {\r\n                if (a.includes('М') && b.includes('Б')) return -1;\r\n                if (a.includes('Б') && b.includes('М')) return 1;\r\n                return 0;\r\n              } else {\r\n                return 0;\r\n              }\r\n            });\r\n\r\n            return (\r\n              <div key={index} style={{ marginBottom: '20px' }}>\r\n                {sortedGroupNames.map((groupName, groupIdx) => {\r\n                  const groupItem = unprocessedItems.find(item => item.group ? item.group.name === groupName : null);\r\n                  if (!groupItem) return null;\r\n                  const heading = generateHeading(groupItem.group);\r\n                  return (\r\n                    <React.Fragment key={groupIdx}>\r\n                      <h6>{heading}</h6>\r\n                      <Table bordered style={{ width: '100%' }}>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>ПП</th>\r\n                            <th>Дата</th>\r\n                            <th>Время</th>\r\n                            <th>Аудитория</th>\r\n                            <th>Уч. группа</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {unprocessedItems.map((item, idx) => (\r\n                            <tr key={item.id}>\r\n                              <td>{idx + 1}</td>\r\n                              <td>{formatDate(item.date)}</td>\r\n                              <td>9:00</td>\r\n                              <td>{item.audience_number}</td>\r\n                              <td>{item.group ? item.group.name : ''}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n\r\n        {Object.keys(groupedByGroupName).sort((a, b) => {\r\n          if (a && b) {\r\n            if (a.includes('М') && b.includes('Б')) return -1;\r\n            if (a.includes('Б') && b.includes('М')) return 1;\r\n            return 0;\r\n          } else {\r\n            return 0;\r\n          }\r\n        }).map((groupName, index) => {\r\n          if (!processedGroups.has(groupName)) {\r\n            const groupItems = groupedByGroupName[groupName];\r\n            processedGroups.add(groupName);\r\n\r\n            // Group by date for the same group\r\n            const groupedByDateForGroup = groupItems.reduce((acc, item) => {\r\n              const date = item.date;\r\n              if (!acc[date]) {\r\n                acc[date] = [];\r\n              }\r\n              acc[date].push(item);\r\n              return acc;\r\n            }, {});\r\n\r\n            const sortedGroupDates = Object.keys(groupedByDateForGroup).sort();\r\n\r\n            const group = groupItems[0].group;\r\n            const heading = generateHeading(group);\r\n\r\n            return (\r\n              <div key={index} style={{ marginBottom: '20px' }}>\r\n                <h6>{heading}</h6>\r\n                <Table bordered style={{ width: '100%' }}>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>ПП</th>\r\n                      <th>Дата</th>\r\n                      <th>Время</th>\r\n                      <th>Аудитория</th>\r\n                      <th>Уч. группа</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {sortedGroupDates.map((date, dateIdx) => {\r\n                      const dateItems = groupedByDateForGroup[date];\r\n\r\n                      return dateItems.map((item, idx) => (\r\n                        <tr key={item.id}>\r\n                          <td>{dateIdx * dateItems.length + idx + 1}</td>\r\n                          <td>{formatDate(item.date)}</td>\r\n                          <td>9:00</td>\r\n                          <td>{item.audience_number}</td>\r\n                          <td>{item.group ? item.group.name : ''}</td>\r\n                        </tr>\r\n                      ));\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n\r\n        {/* Additional Information Table */}\r\n        {groupedByGroupName[null] && (\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <h6>Дополнительная информация:</h6>\r\n            <Table bordered style={{ width: '100%' }}>\r\n              <thead>\r\n                <tr>\r\n                  <th>ПП</th>\r\n                  <th>Дата</th>\r\n                  <th>Время</th>\r\n                  <th>Аудитория</th>\r\n                  <th>Уч. группа</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {groupedByGroupName[null].map((item, idx) => (\r\n                  <tr key={idx}>\r\n                    <td>{idx + 1}</td>\r\n                    <td>{formatDate(item.date)}</td>\r\n                    <td>9:00</td>\r\n                    <td>{item.audience_number}</td>\r\n                    <td>{item.additional_information}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewProtectionScheduleTable;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}