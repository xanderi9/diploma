{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\ProtectionSchedule\\\\ViewProtectionScheduleTable.jsx\";\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ViewProtectionScheduleTable({\n  protection_schedule\n}) {\n  // Helper function to convert date format\n  const formatDate = dateString => {\n    const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\n    const day = dateString.slice(0, 2);\n    const month = months[parseInt(dateString.slice(2, 4), 10) - 1];\n    const year = dateString.slice(4, 8);\n    return `${day} ${month} ${year}`;\n  };\n  const generateHeading = group => {\n    const {\n      name,\n      speciality\n    } = group;\n    const {\n      code: specialityCode,\n      name: specialityName,\n      field_of_study\n    } = speciality;\n    const {\n      code: fieldOfStudyCode,\n      name: fieldOfStudyName\n    } = field_of_study;\n    if (name.includes('Б')) {\n      return `Бакалавры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\n    } else if (name.includes('М')) {\n      return `Магистры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\n    } else {\n      return `Группа ${name}`;\n    }\n  };\n\n  // Group by date and then by group name\n  const groupedByDate = protection_schedule.reduce((acc, item) => {\n    const date = item.date;\n    if (!acc[date]) {\n      acc[date] = [];\n    }\n    acc[date].push(item);\n    return acc;\n  }, {});\n\n  // To keep track of processed group names\n  const processedGroups = new Set();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mb-4 text-center\",\n      children: \"\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A \\u0437\\u0430\\u0449\\u0438\\u0442 \\u0412\\u041A\\u0420\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-5\",\n      children: Object.keys(groupedByDate).map((date, index) => {\n        const dateItems = groupedByDate[date];\n\n        // Group by group name for the same date\n        const groupedByGroupName = dateItems.reduce((acc, item) => {\n          const groupName = item.group.name;\n          if (!acc[groupName]) {\n            acc[groupName] = [];\n          }\n          acc[groupName].push(item);\n          return acc;\n        }, {});\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: Object.keys(groupedByGroupName).map((groupName, groupIdx) => {\n            const groupItems = groupedByGroupName[groupName];\n\n            // If group is already processed, skip it\n            if (processedGroups.has(groupName)) {\n              return null;\n            }\n\n            // Mark the group as processed\n            processedGroups.add(groupName);\n            const group = groupItems[0].group;\n            const heading = generateHeading(group);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: heading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Table, {\n                bordered: true,\n                style: {\n                  width: '100%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"\\u041F\\u041F\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"\\u0414\\u0430\\u0442\\u0430\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"\\u0412\\u0440\\u0435\\u043C\\u044F\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"\\u0410\\u0443\\u0434\\u0438\\u0442\\u043E\\u0440\\u0438\\u044F\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"\\u0423\\u0447. \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: groupItems.map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: idx + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatDate(item.date)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"9:00\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item.audience_number\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: groupName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 29\n                    }, this)]\n                  }, item.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this)]\n            }, groupIdx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this);\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = ViewProtectionScheduleTable;\nexport default ViewProtectionScheduleTable;\nvar _c;\n$RefreshReg$(_c, \"ViewProtectionScheduleTable\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewProtectionScheduleTable","protection_schedule","formatDate","dateString","months","day","slice","month","parseInt","year","generateHeading","group","name","speciality","code","specialityCode","specialityName","field_of_study","fieldOfStudyCode","fieldOfStudyName","includes","groupedByDate","reduce","acc","item","date","push","processedGroups","Set","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","index","dateItems","groupedByGroupName","groupName","style","marginBottom","groupIdx","groupItems","has","add","heading","bordered","width","idx","audience_number","id","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/ProtectionSchedule/ViewProtectionScheduleTable.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nfunction ViewProtectionScheduleTable({ protection_schedule }) {\r\n  // Helper function to convert date format\r\n  const formatDate = (dateString) => {\r\n    const months = [\r\n      'января', 'февраля', 'марта', 'апреля', 'мая', 'июня',\r\n      'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'\r\n    ];\r\n    const day = dateString.slice(0, 2);\r\n    const month = months[parseInt(dateString.slice(2, 4), 10) - 1];\r\n    const year = dateString.slice(4, 8);\r\n    return `${day} ${month} ${year}`;\r\n  };\r\n\r\n  const generateHeading = (group) => {\r\n    const { name, speciality } = group;\r\n    const { code: specialityCode, name: specialityName, field_of_study } = speciality;\r\n    const { code: fieldOfStudyCode, name: fieldOfStudyName } = field_of_study;\r\n\r\n    if (name.includes('Б')) {\r\n      return `Бакалавры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\r\n    } else if (name.includes('М')) {\r\n      return `Магистры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\r\n    } else {\r\n      return `Группа ${name}`;\r\n    }\r\n  };\r\n\r\n  // Group by date and then by group name\r\n  const groupedByDate = protection_schedule.reduce((acc, item) => {\r\n    const date = item.date;\r\n    if (!acc[date]) {\r\n      acc[date] = [];\r\n    }\r\n    acc[date].push(item);\r\n    return acc;\r\n  }, {});\r\n\r\n  // To keep track of processed group names\r\n  const processedGroups = new Set();\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"mb-4 text-center\">График защит ВКР</h4>\r\n      <div className='mx-5'>\r\n        {Object.keys(groupedByDate).map((date, index) => {\r\n          const dateItems = groupedByDate[date];\r\n\r\n          // Group by group name for the same date\r\n          const groupedByGroupName = dateItems.reduce((acc, item) => {\r\n            const groupName = item.group.name;\r\n            if (!acc[groupName]) {\r\n              acc[groupName] = [];\r\n            }\r\n            acc[groupName].push(item);\r\n            return acc;\r\n          }, {});\r\n\r\n          return (\r\n            <div key={index} style={{ marginBottom: '20px' }}>\r\n              {Object.keys(groupedByGroupName).map((groupName, groupIdx) => {\r\n                const groupItems = groupedByGroupName[groupName];\r\n\r\n                // If group is already processed, skip it\r\n                if (processedGroups.has(groupName)) {\r\n                  return null;\r\n                }\r\n\r\n                // Mark the group as processed\r\n                processedGroups.add(groupName);\r\n\r\n                const group = groupItems[0].group;\r\n                const heading = generateHeading(group);\r\n\r\n                return (\r\n                  <div key={groupIdx}>\r\n                    <h6>{heading}</h6>\r\n                    <Table bordered style={{ width: '100%' }}>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>ПП</th>\r\n                          <th>Дата</th>\r\n                          <th>Время</th>\r\n                          <th>Аудитория</th>\r\n                          <th>Уч. группа</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {groupItems.map((item, idx) => (\r\n                          <tr key={item.id}>\r\n                            <td>{idx + 1}</td>\r\n                            <td>{formatDate(item.date)}</td>\r\n                            <td>9:00</td>\r\n                            <td>{item.audience_number}</td>\r\n                            <td>{groupName}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </Table>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewProtectionScheduleTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}