{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nvar _require = require(\"./doc-utils.js\"),\n  wordToUtf8 = _require.wordToUtf8,\n  convertSpaces = _require.convertSpaces;\nvar xmlMatcher = require(\"./xml-matcher.js\");\nvar Lexer = require(\"./lexer.js\");\nvar Parser = require(\"./parser.js\");\nvar _render = require(\"./render.js\");\nvar postrender = require(\"./postrender.js\");\nvar resolve = require(\"./resolve.js\");\nvar joinUncorrupt = require(\"./join-uncorrupt.js\");\nfunction _getFullText(content, tagsXmlArray) {\n  var matcher = xmlMatcher(content, tagsXmlArray);\n  var result = matcher.matches.map(function (match) {\n    return match.array[2];\n  });\n  return wordToUtf8(convertSpaces(result.join(\"\")));\n}\nmodule.exports = /*#__PURE__*/function () {\n  function XmlTemplater(content, options) {\n    var _this = this;\n    _classCallCheck(this, XmlTemplater);\n    this.cachedParsers = {};\n    this.content = content;\n    Object.keys(options).forEach(function (key) {\n      _this[key] = options[key];\n    });\n    this.setModules({\n      inspect: {\n        filePath: options.filePath\n      }\n    });\n  }\n  return _createClass(XmlTemplater, [{\n    key: \"resolveTags\",\n    value: function resolveTags(tags) {\n      var _this2 = this;\n      this.tags = tags;\n      var options = this.getOptions();\n      var filePath = this.filePath;\n      options.scopeManager = this.scopeManager;\n      options.resolve = resolve;\n      var errors = [];\n      return Promise.all(this.modules.map(function (module) {\n        return Promise.resolve(module.preResolve(options))[\"catch\"](function (e) {\n          errors.push(e);\n        });\n      })).then(function () {\n        if (errors.length !== 0) {\n          throw errors;\n        }\n        return resolve(options).then(function (_ref) {\n          var resolved = _ref.resolved,\n            errors = _ref.errors;\n          errors = errors.map(function (error) {\n            // If a string is thrown, convert it to a real Error\n            if (!(error instanceof Error)) {\n              error = new Error(error);\n            }\n            // error properties might not be defined if some foreign error\n            // (unhandled error not thrown by docxtemplater willingly) is\n            // thrown.\n            error.properties = error.properties || {};\n            error.properties.file = filePath;\n            return error;\n          });\n          if (errors.length !== 0) {\n            throw errors;\n          }\n          return Promise.all(resolved).then(function (resolved) {\n            options.scopeManager.root.finishedResolving = true;\n            options.scopeManager.resolved = resolved;\n            _this2.setModules({\n              inspect: {\n                resolved: resolved,\n                filePath: filePath\n              }\n            });\n            return resolved;\n          });\n        });\n      });\n    }\n  }, {\n    key: \"getFullText\",\n    value: function getFullText() {\n      return _getFullText(this.content, this.fileTypeConfig.tagsXmlTextArray);\n    }\n  }, {\n    key: \"setModules\",\n    value: function setModules(obj) {\n      this.modules.forEach(function (module) {\n        module.set(obj);\n      });\n    }\n  }, {\n    key: \"preparse\",\n    value: function preparse() {\n      this.allErrors = [];\n      this.xmllexed = Lexer.xmlparse(this.content, {\n        text: this.fileTypeConfig.tagsXmlTextArray,\n        other: this.fileTypeConfig.tagsXmlLexedArray\n      });\n      this.setModules({\n        inspect: {\n          filePath: this.filePath,\n          xmllexed: this.xmllexed\n        }\n      });\n      var _Lexer$parse = Lexer.parse(this.xmllexed, this.delimiters, this.syntax, this.fileType),\n        lexed = _Lexer$parse.lexed,\n        lexerErrors = _Lexer$parse.errors;\n      this.allErrors = this.allErrors.concat(lexerErrors);\n      this.lexed = lexed;\n      this.setModules({\n        inspect: {\n          filePath: this.filePath,\n          lexed: this.lexed\n        }\n      });\n      var options = this.getOptions();\n      Parser.preparse(this.lexed, this.modules, options);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      this.setModules({\n        inspect: {\n          filePath: this.filePath\n        }\n      });\n      var options = this.getOptions();\n      this.parsed = Parser.parse(this.lexed, this.modules, options);\n      this.setModules({\n        inspect: {\n          filePath: this.filePath,\n          parsed: this.parsed\n        }\n      });\n      var _Parser$postparse = Parser.postparse(this.parsed, this.modules, options),\n        postparsed = _Parser$postparse.postparsed,\n        postparsedErrors = _Parser$postparse.errors;\n      this.postparsed = postparsed;\n      this.setModules({\n        inspect: {\n          filePath: this.filePath,\n          postparsed: this.postparsed\n        }\n      });\n      this.allErrors = this.allErrors.concat(postparsedErrors);\n      this.errorChecker(this.allErrors);\n      return this;\n    }\n  }, {\n    key: \"errorChecker\",\n    value: function errorChecker(errors) {\n      var _this3 = this;\n      errors.forEach(function (error) {\n        // error properties might not be defined if some foreign\n        // (unhandled error not thrown by docxtemplater willingly) is\n        // thrown.\n        error.properties = error.properties || {};\n        error.properties.file = _this3.filePath;\n      });\n      this.modules.forEach(function (module) {\n        errors = module.errorsTransformer(errors);\n      });\n    }\n  }, {\n    key: \"baseNullGetter\",\n    value: function baseNullGetter(part, sm) {\n      var _this4 = this;\n      var value = this.modules.reduce(function (value, module) {\n        if (value != null) {\n          return value;\n        }\n        return module.nullGetter(part, sm, _this4);\n      }, null);\n      if (value != null) {\n        return value;\n      }\n      return this.nullGetter(part, sm);\n    }\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      return {\n        compiled: this.postparsed,\n        cachedParsers: this.cachedParsers,\n        tags: this.tags,\n        modules: this.modules,\n        parser: this.parser,\n        contentType: this.contentType,\n        relsType: this.relsType,\n        baseNullGetter: this.baseNullGetter.bind(this),\n        filePath: this.filePath,\n        fileTypeConfig: this.fileTypeConfig,\n        fileType: this.fileType,\n        linebreaks: this.linebreaks\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render(to) {\n      this.filePath = to;\n      var options = this.getOptions();\n      options.resolved = this.scopeManager.resolved;\n      options.scopeManager = this.scopeManager;\n      options.render = _render;\n      options.joinUncorrupt = joinUncorrupt;\n      var _render2 = _render(options),\n        errors = _render2.errors,\n        parts = _render2.parts;\n      if (errors.length > 0) {\n        this.allErrors = errors;\n        this.errorChecker(errors);\n        return this;\n      }\n      this.content = postrender(parts, options);\n      this.setModules({\n        inspect: {\n          filePath: this.filePath,\n          content: this.content\n        }\n      });\n      return this;\n    }\n  }]);\n}();","map":{"version":3,"names":["_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","t","_toPrimitive","r","e","toPrimitive","call","String","Number","_require","require","wordToUtf8","convertSpaces","xmlMatcher","Lexer","Parser","_render","postrender","resolve","joinUncorrupt","_getFullText","content","tagsXmlArray","matcher","result","matches","map","match","array","join","module","exports","XmlTemplater","options","_this","cachedParsers","keys","forEach","setModules","inspect","filePath","value","resolveTags","tags","_this2","getOptions","scopeManager","errors","Promise","all","modules","preResolve","push","then","_ref","resolved","error","Error","properties","file","root","finishedResolving","getFullText","fileTypeConfig","tagsXmlTextArray","obj","set","preparse","allErrors","xmllexed","xmlparse","text","other","tagsXmlLexedArray","_Lexer$parse","parse","delimiters","syntax","fileType","lexed","lexerErrors","concat","parsed","_Parser$postparse","postparse","postparsed","postparsedErrors","errorChecker","_this3","errorsTransformer","baseNullGetter","part","sm","_this4","reduce","nullGetter","compiled","parser","contentType","relsType","bind","linebreaks","render","to","_render2","parts"],"sources":["C:/study/react project/client/node_modules/docxtemplater/js/xml-templater.js"],"sourcesContent":["\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar _require = require(\"./doc-utils.js\"),\n  wordToUtf8 = _require.wordToUtf8,\n  convertSpaces = _require.convertSpaces;\nvar xmlMatcher = require(\"./xml-matcher.js\");\nvar Lexer = require(\"./lexer.js\");\nvar Parser = require(\"./parser.js\");\nvar _render = require(\"./render.js\");\nvar postrender = require(\"./postrender.js\");\nvar resolve = require(\"./resolve.js\");\nvar joinUncorrupt = require(\"./join-uncorrupt.js\");\nfunction _getFullText(content, tagsXmlArray) {\n  var matcher = xmlMatcher(content, tagsXmlArray);\n  var result = matcher.matches.map(function (match) {\n    return match.array[2];\n  });\n  return wordToUtf8(convertSpaces(result.join(\"\")));\n}\nmodule.exports = /*#__PURE__*/function () {\n  function XmlTemplater(content, options) {\n    var _this = this;\n    _classCallCheck(this, XmlTemplater);\n    this.cachedParsers = {};\n    this.content = content;\n    Object.keys(options).forEach(function (key) {\n      _this[key] = options[key];\n    });\n    this.setModules({\n      inspect: {\n        filePath: options.filePath\n      }\n    });\n  }\n  return _createClass(XmlTemplater, [{\n    key: \"resolveTags\",\n    value: function resolveTags(tags) {\n      var _this2 = this;\n      this.tags = tags;\n      var options = this.getOptions();\n      var filePath = this.filePath;\n      options.scopeManager = this.scopeManager;\n      options.resolve = resolve;\n      var errors = [];\n      return Promise.all(this.modules.map(function (module) {\n        return Promise.resolve(module.preResolve(options))[\"catch\"](function (e) {\n          errors.push(e);\n        });\n      })).then(function () {\n        if (errors.length !== 0) {\n          throw errors;\n        }\n        return resolve(options).then(function (_ref) {\n          var resolved = _ref.resolved,\n            errors = _ref.errors;\n          errors = errors.map(function (error) {\n            // If a string is thrown, convert it to a real Error\n            if (!(error instanceof Error)) {\n              error = new Error(error);\n            }\n            // error properties might not be defined if some foreign error\n            // (unhandled error not thrown by docxtemplater willingly) is\n            // thrown.\n            error.properties = error.properties || {};\n            error.properties.file = filePath;\n            return error;\n          });\n          if (errors.length !== 0) {\n            throw errors;\n          }\n          return Promise.all(resolved).then(function (resolved) {\n            options.scopeManager.root.finishedResolving = true;\n            options.scopeManager.resolved = resolved;\n            _this2.setModules({\n              inspect: {\n                resolved: resolved,\n                filePath: filePath\n              }\n            });\n            return resolved;\n          });\n        });\n      });\n    }\n  }, {\n    key: \"getFullText\",\n    value: function getFullText() {\n      return _getFullText(this.content, this.fileTypeConfig.tagsXmlTextArray);\n    }\n  }, {\n    key: \"setModules\",\n    value: function setModules(obj) {\n      this.modules.forEach(function (module) {\n        module.set(obj);\n      });\n    }\n  }, {\n    key: \"preparse\",\n    value: function preparse() {\n      this.allErrors = [];\n      this.xmllexed = Lexer.xmlparse(this.content, {\n        text: this.fileTypeConfig.tagsXmlTextArray,\n        other: this.fileTypeConfig.tagsXmlLexedArray\n      });\n      this.setModules({\n        inspect: {\n          filePath: this.filePath,\n          xmllexed: this.xmllexed\n        }\n      });\n      var _Lexer$parse = Lexer.parse(this.xmllexed, this.delimiters, this.syntax, this.fileType),\n        lexed = _Lexer$parse.lexed,\n        lexerErrors = _Lexer$parse.errors;\n      this.allErrors = this.allErrors.concat(lexerErrors);\n      this.lexed = lexed;\n      this.setModules({\n        inspect: {\n          filePath: this.filePath,\n          lexed: this.lexed\n        }\n      });\n      var options = this.getOptions();\n      Parser.preparse(this.lexed, this.modules, options);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      this.setModules({\n        inspect: {\n          filePath: this.filePath\n        }\n      });\n      var options = this.getOptions();\n      this.parsed = Parser.parse(this.lexed, this.modules, options);\n      this.setModules({\n        inspect: {\n          filePath: this.filePath,\n          parsed: this.parsed\n        }\n      });\n      var _Parser$postparse = Parser.postparse(this.parsed, this.modules, options),\n        postparsed = _Parser$postparse.postparsed,\n        postparsedErrors = _Parser$postparse.errors;\n      this.postparsed = postparsed;\n      this.setModules({\n        inspect: {\n          filePath: this.filePath,\n          postparsed: this.postparsed\n        }\n      });\n      this.allErrors = this.allErrors.concat(postparsedErrors);\n      this.errorChecker(this.allErrors);\n      return this;\n    }\n  }, {\n    key: \"errorChecker\",\n    value: function errorChecker(errors) {\n      var _this3 = this;\n      errors.forEach(function (error) {\n        // error properties might not be defined if some foreign\n        // (unhandled error not thrown by docxtemplater willingly) is\n        // thrown.\n        error.properties = error.properties || {};\n        error.properties.file = _this3.filePath;\n      });\n      this.modules.forEach(function (module) {\n        errors = module.errorsTransformer(errors);\n      });\n    }\n  }, {\n    key: \"baseNullGetter\",\n    value: function baseNullGetter(part, sm) {\n      var _this4 = this;\n      var value = this.modules.reduce(function (value, module) {\n        if (value != null) {\n          return value;\n        }\n        return module.nullGetter(part, sm, _this4);\n      }, null);\n      if (value != null) {\n        return value;\n      }\n      return this.nullGetter(part, sm);\n    }\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      return {\n        compiled: this.postparsed,\n        cachedParsers: this.cachedParsers,\n        tags: this.tags,\n        modules: this.modules,\n        parser: this.parser,\n        contentType: this.contentType,\n        relsType: this.relsType,\n        baseNullGetter: this.baseNullGetter.bind(this),\n        filePath: this.filePath,\n        fileTypeConfig: this.fileTypeConfig,\n        fileType: this.fileType,\n        linebreaks: this.linebreaks\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render(to) {\n      this.filePath = to;\n      var options = this.getOptions();\n      options.resolved = this.scopeManager.resolved;\n      options.scopeManager = this.scopeManager;\n      options.render = _render;\n      options.joinUncorrupt = joinUncorrupt;\n      var _render2 = _render(options),\n        errors = _render2.errors,\n        parts = _render2.parts;\n      if (errors.length > 0) {\n        this.allErrors = errors;\n        this.errorChecker(errors);\n        return this;\n      }\n      this.content = postrender(parts, options);\n      this.setModules({\n        inspect: {\n          filePath: this.filePath,\n          content: this.content\n        }\n      });\n      return this;\n    }\n  }]);\n}();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}