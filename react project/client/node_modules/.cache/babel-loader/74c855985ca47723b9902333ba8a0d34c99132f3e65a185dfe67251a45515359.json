{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\ProtectionSchedule\\\\ViewProtectionSchedulePersons.js\";\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewProtectionSchedulePersons = ({\n  protection_schedule,\n  students_list_for_schedule\n}) => {\n  const formatDate = date => {\n    return moment(date).format('D MMMM YYYY г.');\n  };\n  const getFullName = studentData => {\n    if (studentData && studentData.student) {\n      const {\n        last_name,\n        first_name,\n        patronymic\n      } = studentData.student;\n      return `${last_name} ${first_name} ${patronymic}`;\n    } else {\n      return 'Unknown';\n    }\n  };\n  const distributeStudentsByProtectionDays = schedule => {\n    const groupedSchedule = {};\n    schedule.forEach(item => {\n      if (!item.group) return;\n      const dateKey = formatDate(item.date);\n      const groupName = item.group.name;\n      const groupId = item.group.id;\n      if (!groupedSchedule[dateKey]) {\n        groupedSchedule[dateKey] = {};\n      }\n      if (!groupedSchedule[dateKey][groupName]) {\n        groupedSchedule[dateKey][groupName] = [];\n      }\n      const students = students_list_for_schedule.filter(student => student.student.group.id === groupId);\n      groupedSchedule[dateKey][groupName] = students;\n    });\n    return groupedSchedule;\n  };\n  const limitStudentsPerDay = schedule => {\n    const limitedSchedule = {};\n    const allSeenStudents = new Set();\n    Object.entries(schedule).forEach(([date, groups]) => {\n      Object.entries(groups).forEach(([group, students]) => {\n        const newStudents = students.filter(student => !allSeenStudents.has(getFullName(student)));\n        newStudents.forEach(student => allSeenStudents.add(getFullName(student)));\n        if (newStudents.length > 12) {\n          const firstDayStudents = newStudents.slice(0, 12);\n          const secondDayStudents = newStudents.slice(12);\n          if (!limitedSchedule[date]) {\n            limitedSchedule[date] = {};\n          }\n          limitedSchedule[date][group] = firstDayStudents;\n          const nextDay = moment(date, 'D MMMM YYYY г.').add(1, 'days').format('D MMMM YYYY г.');\n          if (!limitedSchedule[nextDay]) {\n            limitedSchedule[nextDay] = {};\n          }\n          limitedSchedule[nextDay][group] = secondDayStudents;\n        } else {\n          if (!limitedSchedule[date]) {\n            limitedSchedule[date] = {};\n          }\n          limitedSchedule[date][group] = newStudents;\n        }\n      });\n    });\n    return limitedSchedule;\n  };\n  const groupedSchedule = distributeStudentsByProtectionDays(protection_schedule);\n  const limitedSchedule = limitStudentsPerDay(groupedSchedule);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(limitedSchedule).map(([date, groups]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), Object.entries(groups).map(([group, students]) => /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0424\\u0418\\u041E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0414\\u0430\\u0442\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: getFullName(student)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: group\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this)]\n      }, group, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this))]\n    }, date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_c = ViewProtectionSchedulePersons;\nexport default ViewProtectionSchedulePersons;\nvar _c;\n$RefreshReg$(_c, \"ViewProtectionSchedulePersons\");","map":{"version":3,"names":["React","Table","moment","jsxDEV","_jsxDEV","ViewProtectionSchedulePersons","protection_schedule","students_list_for_schedule","formatDate","date","format","getFullName","studentData","student","last_name","first_name","patronymic","distributeStudentsByProtectionDays","schedule","groupedSchedule","forEach","item","group","dateKey","groupName","name","groupId","id","students","filter","limitStudentsPerDay","limitedSchedule","allSeenStudents","Set","Object","entries","groups","newStudents","has","add","length","firstDayStudents","slice","secondDayStudents","nextDay","children","map","fileName","_jsxFileName","lineNumber","columnNumber","bordered","hover","index","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/ProtectionSchedule/ViewProtectionSchedulePersons.js"],"sourcesContent":["import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport moment from 'moment';\r\n\r\nconst ViewProtectionSchedulePersons = ({ protection_schedule, students_list_for_schedule }) => {\r\n    const formatDate = (date) => {\r\n        return moment(date).format('D MMMM YYYY г.');\r\n    };\r\n\r\n    const getFullName = (studentData) => {\r\n        if (studentData && studentData.student) {\r\n            const { last_name, first_name, patronymic } = studentData.student;\r\n            return `${last_name} ${first_name} ${patronymic}`;\r\n        } else {\r\n            return 'Unknown';\r\n        }\r\n    };\r\n\r\n    const distributeStudentsByProtectionDays = (schedule) => {\r\n        const groupedSchedule = {};\r\n\r\n        schedule.forEach((item) => {\r\n            if (!item.group) return;\r\n\r\n            const dateKey = formatDate(item.date);\r\n            const groupName = item.group.name;\r\n            const groupId = item.group.id;\r\n\r\n            if (!groupedSchedule[dateKey]) {\r\n                groupedSchedule[dateKey] = {};\r\n            }\r\n\r\n            if (!groupedSchedule[dateKey][groupName]) {\r\n                groupedSchedule[dateKey][groupName] = [];\r\n            }\r\n\r\n            const students = students_list_for_schedule.filter(student => student.student.group.id === groupId);\r\n            groupedSchedule[dateKey][groupName] = students;\r\n        });\r\n\r\n        return groupedSchedule;\r\n    };\r\n\r\n    const limitStudentsPerDay = (schedule) => {\r\n        const limitedSchedule = {};\r\n        const allSeenStudents = new Set();\r\n\r\n        Object.entries(schedule).forEach(([date, groups]) => {\r\n            Object.entries(groups).forEach(([group, students]) => {\r\n                const newStudents = students.filter(student => !allSeenStudents.has(getFullName(student)));\r\n\r\n                newStudents.forEach(student => allSeenStudents.add(getFullName(student)));\r\n\r\n                if (newStudents.length > 12) {\r\n                    const firstDayStudents = newStudents.slice(0, 12);\r\n                    const secondDayStudents = newStudents.slice(12);\r\n\r\n                    if (!limitedSchedule[date]) {\r\n                        limitedSchedule[date] = {};\r\n                    }\r\n\r\n                    limitedSchedule[date][group] = firstDayStudents;\r\n\r\n                    const nextDay = moment(date, 'D MMMM YYYY г.').add(1, 'days').format('D MMMM YYYY г.');\r\n\r\n                    if (!limitedSchedule[nextDay]) {\r\n                        limitedSchedule[nextDay] = {};\r\n                    }\r\n\r\n                    limitedSchedule[nextDay][group] = secondDayStudents;\r\n                } else {\r\n                    if (!limitedSchedule[date]) {\r\n                        limitedSchedule[date] = {};\r\n                    }\r\n\r\n                    limitedSchedule[date][group] = newStudents;\r\n                }\r\n            });\r\n        });\r\n\r\n        return limitedSchedule;\r\n    };\r\n\r\n    const groupedSchedule = distributeStudentsByProtectionDays(protection_schedule);\r\n    const limitedSchedule = limitStudentsPerDay(groupedSchedule);\r\n\r\n    return (\r\n        <div>\r\n            {Object.entries(limitedSchedule).map(([date, groups]) => (\r\n                <div key={date}>\r\n                    <h3>{date}</h3>\r\n                    {Object.entries(groups).map(([group, students]) => (\r\n                        <Table bordered hover key={group}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ФИО</th>\r\n                                    <th>Группа</th>\r\n                                    <th>Дата</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {students.map((student, index) => (\r\n                                    <tr key={index}>\r\n                                        <td>{getFullName(student)}</td>\r\n                                        <td>{group}</td>\r\n                                        <td>{date}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewProtectionSchedulePersons;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}