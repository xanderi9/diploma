{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\Tables\\\\SecretaryTableData\\\\SecretaryHugeTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { useTable, useFilters } from 'react-table';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport styles from '../../../container.module.css';\nimport Filter from '../Filter/Filter';\nimport hide_cell from '../../../img/hide_cell.png';\nimport BlockInfo from '../../BlockInfo/BlockInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SecretaryHugeTable({\n  info_for_table\n}) {\n  _s();\n  const isFirstRowEmpty = data => {\n    return data.length > 0 && Object.values(data[0]).every(cell => cell === null || cell === '');\n  };\n  const [tableData, setTableData] = useState(() => {\n    // Remove the first row if it is empty\n    const data = info_for_table.requests;\n    if (isFirstRowEmpty(data)) {\n      return data.slice(1);\n    }\n    return data;\n  });\n  const [originalData] = useState(info_for_table.requests); // Store the original data\n  const [editableCell, setEditableCell] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [isColumnsModified, setIsColumnsModified] = useState(false);\n  const [editedCellValues, setEditedCellValues] = useState({});\n  const columns = useMemo(() => [{\n    Header: '№ п/п',\n    accessor: (row, index) => index + 1,\n    Filter: Filter\n  }, {\n    Header: 'ср.б.',\n    accessor: row => `${row.student.average_score}`,\n    Filter: Filter\n  }, {\n    Header: 'номер протокола',\n    accessor: row => `${row.workProtecton.protocol_number}`,\n    Filter: Filter\n  }, {\n    Header: 'дата протокола',\n    accessor: row => `${row.workProtecton.date}`,\n    Filter: Filter\n  }, {\n    Header: 'Фамилия, Имя, Отчество',\n    accessor: row => `${row.student.surname} ${row.student.name} ${row.student.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Тема',\n    accessor: row => `${row.theme.name}`,\n    Filter: Filter\n  }, {\n    Header: 'Руководитель',\n    accessor: row => `${row.teacher.surname} ${row.teacher.name} ${row.teacher.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Консультант',\n    accessor: row => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Рецензент',\n    accessor: row => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'организация',\n    accessor: row => `${row.theme.company.name} ${row.theme.company.last_name_of_responsible} ${row.theme.company.first_name_of_responsible} ${row.theme.company.patronymic_name_of_responsible}\n         ${row.theme.company.job_title_of_resposible} ${row.theme.company.additional_information}`,\n    Filter: Filter\n  }, {\n    Header: 'номер зачетки',\n    accessor: row => `${row.student.record_book_number}`,\n    Filter: Filter\n  }, {\n    Header: 'Телефон',\n    accessor: row => `${row.student.phone}`,\n    Filter: Filter\n  }, {\n    Header: 'Email',\n    accessor: row => `${row.student.email}`,\n    Filter: Filter\n  }, {\n    Header: 'бюджет/платный',\n    accessor: row => `${row.student.basis_of_study}`,\n    Filter: Filter\n  }, {\n    Header: 'оценка на предзащите/ преддипломная практика',\n    accessor: row => `${row.preprotection_grade}`,\n    Filter: Filter\n  }, {\n    Header: 'оценка на защите',\n    accessor: row => `${row.workProtecton.final_grade}`,\n    Filter: Filter\n  }, {\n    Header: 'дата рождения',\n    accessor: row => `${row.student.date_of_birth}`,\n    Filter: Filter\n  }, {\n    Header: 'год окончания предыдущ образования',\n    accessor: row => `${row.student.year_of_prev_education_completion}`,\n    Filter: Filter\n  }, {\n    Header: 'форма предыдущего образования',\n    accessor: row => `${row.student.form_of_prev_education}`,\n    Filter: Filter\n  }, {\n    Header: 'год поступления',\n    accessor: row => `${row.student.year_of_admission}`,\n    Filter: Filter\n  }, {\n    Header: 'особые отметки',\n    accessor: row => `${row.student.special_marks}`,\n    Filter: Filter\n  }, {\n    Header: 'приказы',\n    columns: [{\n      Header: 'допуск',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'тема',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'изменение темы',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'рецензент',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'отчисление',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'с какого числа отчисление',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      isVisible: true\n    }]\n  }, {\n    Header: 'отметки о выполнении',\n    columns: [{\n      Header: 'долги',\n      accessor: row => `${row.student.number_of_debts}`,\n      Filter: Filter\n    }, {\n      Header: 'справка о выполнении уч. плана',\n      accessor: row => `${row.student.certificate_of_curriculum_completion}`,\n      Filter: Filter\n    }, {\n      Header: 'сдана зачетка',\n      accessor: row => `${row.student.record_book_submitted}`,\n      Filter: Filter\n    }, {\n      Header: 'сдана пояснительная записка',\n      accessor: row => row.explanatory_note_submitted ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'красный диплом',\n      accessor: row => row.student.diploma_with_honors ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'согласие на публикацию',\n      accessor: row => row.publication_agree ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'отзыв',\n      accessor: row => `${row.teacher_review}`,\n      Filter: Filter\n    }, {\n      Header: 'рецензия',\n      accessor: row => `${row.review}`,\n      Filter: Filter\n    }, {\n      Header: 'Акт о внедрении',\n      accessor: row => row.implementation_act ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'отчет о плагиате',\n      accessor: row => row.plagarism_report ? row.plagarism_report : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'заявление на последипломный отпуск',\n      accessor: row => row.student.application_for_postgraduate_leave ? row.student.application_for_postgraduate_leave : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'рекомендован к поступлению',\n      accessor: row => `${row.student.recommended_for_admission}`,\n      Filter: Filter\n    }]\n  }, {\n    Header: 'вид ВКР',\n    accessor: row => `${row.type_of_fqw}`,\n    Filter: Filter,\n    headerProps: {\n      rowSpan: 2\n    }\n  }, {\n    Header: 'ВКР по заявке',\n    accessor: row => `${row.theme.fqw_by_application}`,\n    Filter: Filter\n  }, {\n    Header: 'ВКР на англ. языке',\n    accessor: row => row.theme.fqw_in_english ? 'да' : 'нет',\n    Filter: Filter\n  }, {\n    Header: 'Тип ВКР',\n    accessor: row => `${row.theme.fqw_type}`,\n    Filter: Filter\n  }, {\n    Header: 'Язык выполнения ВКР',\n    accessor: row => `${row.theme.language_of_fqw}`,\n    Filter: Filter\n  }, {\n    Header: 'Бюджет',\n    accessor: row => row.student.budget ? 'да' : 'нет',\n    Filter: Filter\n  }, {\n    Header: 'Тематика ВКР',\n    accessor: row => `${row.theme.topic_of_fqw}`,\n    Filter: Filter\n  }], [tableData]);\n  const data = useMemo(() => tableData, [tableData]);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setHiddenColumns: setTableHiddenColumns,\n    state: {\n      hiddenColumns: tableHiddenColumns\n    }\n  } = useTable({\n    columns,\n    data\n  }, useFilters);\n  useEffect(() => {\n    // Set initial hidden columns\n    setTableHiddenColumns(hiddenColumns);\n  }, [hiddenColumns, setTableHiddenColumns]);\n  useEffect(() => {\n    setIsColumnsModified(hiddenColumns.length !== 0);\n  }, [hiddenColumns]);\n  const toggleColumnVisibility = columnId => {\n    setHiddenColumns(prevHiddenColumns => prevHiddenColumns.includes(columnId) ? prevHiddenColumns.filter(id => id !== columnId) : [...prevHiddenColumns, columnId]);\n  };\n  const handleDownload = () => {\n    const filteredData = rows.map(row => row.original);\n    const worksheet = XLSX.utils.json_to_sheet(filteredData);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');\n    const excelBuffer = XLSX.write(workbook, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    const blob = new Blob([excelBuffer], {\n      type: 'application/octet-stream'\n    });\n    saveAs(blob, 'table_data.xlsx');\n  };\n  const handleUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet);\n      setTableData(jsonData);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  const handleCellClick = (rowIndex, columnId) => {\n    if (editableCell && editableCell.rowIndex === rowIndex && editableCell.columnId === columnId) {\n      setEditableCell(null); // Close the cell if it's already open\n    } else {\n      setEditableCell({\n        rowIndex,\n        columnId\n      }); // Open the clicked cell\n    }\n  };\n  const handleInputChange = (e, rowIndex, columnId) => {\n    const newValue = e.target.value;\n    setEditedCellValues(prevValues => ({\n      ...prevValues,\n      [`${rowIndex}-${columnId}`]: newValue\n    }));\n  };\n  const handleSaveChanges = () => {\n    const newData = [...tableData];\n    for (const [key, value] of Object.entries(editedCellValues)) {\n      const [rowIndex, columnId] = key.split('-').map(Number);\n      const column = columns[columnId];\n      newData[rowIndex][column.accessor] = value;\n    }\n    setTableData(newData);\n    setEditedCellValues({});\n    setEditableCell(null); // Close the currently edited cell\n  };\n  const handleCancelChanges = () => {\n    setEditedCellValues({});\n    setEditableCell(null); // Close the currently edited cell\n  };\n  const handleResetColumns = () => {\n    setHiddenColumns([]);\n  };\n  const renderCell = (cell, rowIndex, columnId) => {\n    const isEditableCell = editableCell && editableCell.rowIndex === rowIndex && editableCell.columnId === columnId;\n    if (isEditableCell) {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedCellValues[`${rowIndex}-${columnId}`] || cell.value,\n        onChange: e => handleInputChange(e, rowIndex, columnId),\n        onBlur: handleSaveChanges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => handleCellClick(rowIndex, columnId),\n      children: cell.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['button-container'],\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleDownload,\n        children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: () => document.getElementById('file-upload').click(),\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        style: {\n          display: 'none'\n        },\n        onChange: handleUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), isColumnsModified && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"warning\",\n        onClick: handleResetColumns,\n        children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      style: {\n        overflowX: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        className: styles['table'],\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map((column, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(),\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: column.render('Header')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    onClick: () => toggleColumnVisibility(index),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: hide_cell,\n                      alt: \"Hide\",\n                      style: {\n                        width: '16px'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map((row, rowIndex) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              children: row.cells.map((cell, columnIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: renderCell(cell, rowIndex, columnIndex)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 398,\n    columnNumber: 5\n  }, this);\n}\n_s(SecretaryHugeTable, \"Xi2ZobQUOaRSQ+Fj3VDPcP2gQfM=\", false, function () {\n  return [useTable];\n});\n_c = SecretaryHugeTable;\nexport default SecretaryHugeTable;\nvar _c;\n$RefreshReg$(_c, \"SecretaryHugeTable\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","useTable","useFilters","XLSX","saveAs","Button","Row","Col","styles","Filter","hide_cell","BlockInfo","jsxDEV","_jsxDEV","SecretaryHugeTable","info_for_table","_s","isFirstRowEmpty","data","length","Object","values","every","cell","tableData","setTableData","requests","slice","originalData","editableCell","setEditableCell","hiddenColumns","setHiddenColumns","isColumnsModified","setIsColumnsModified","editedCellValues","setEditedCellValues","columns","Header","accessor","row","index","student","average_score","workProtecton","protocol_number","date","surname","name","patronymic","theme","teacher","consultant","company","last_name_of_responsible","first_name_of_responsible","patronymic_name_of_responsible","job_title_of_resposible","additional_information","record_book_number","phone","email","basis_of_study","preprotection_grade","final_grade","date_of_birth","year_of_prev_education_completion","form_of_prev_education","year_of_admission","special_marks","isVisible","number_of_debts","certificate_of_curriculum_completion","record_book_submitted","explanatory_note_submitted","diploma_with_honors","publication_agree","teacher_review","review","implementation_act","plagarism_report","application_for_postgraduate_leave","recommended_for_admission","type_of_fqw","headerProps","rowSpan","fqw_by_application","fqw_in_english","fqw_type","language_of_fqw","budget","topic_of_fqw","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setTableHiddenColumns","state","tableHiddenColumns","toggleColumnVisibility","columnId","prevHiddenColumns","includes","filter","id","handleDownload","filteredData","map","original","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","write","bookType","type","blob","Blob","handleUpload","event","file","target","files","reader","FileReader","onload","e","Uint8Array","result","read","Sheets","SheetNames","jsonData","sheet_to_json","readAsArrayBuffer","handleCellClick","rowIndex","handleInputChange","newValue","value","prevValues","handleSaveChanges","newData","key","entries","split","Number","column","handleCancelChanges","handleResetColumns","renderCell","isEditableCell","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","onClick","children","className","variant","document","getElementById","click","style","display","overflowX","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","src","alt","width","getRowProps","cells","columnIndex","getCellProps","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/Tables/SecretaryTableData/SecretaryHugeTable.js"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useTable, useFilters } from 'react-table';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport styles from '../../../container.module.css';\r\nimport Filter from '../Filter/Filter';\r\nimport hide_cell from '../../../img/hide_cell.png';\r\nimport BlockInfo from '../../BlockInfo/BlockInfo';\r\n\r\nfunction SecretaryHugeTable({ info_for_table }) {\r\n\r\n  const isFirstRowEmpty = (data) => {\r\n    return data.length > 0 && Object.values(data[0]).every((cell) => cell === null || cell === '');\r\n  };\r\n\r\n  const [tableData, setTableData] = useState(() => {\r\n    // Remove the first row if it is empty\r\n    const data = info_for_table.requests;\r\n    if (isFirstRowEmpty(data)) {\r\n      return data.slice(1);\r\n    }\r\n    return data;\r\n  });\r\n\r\n  const [originalData] = useState(info_for_table.requests); // Store the original data\r\n  const [editableCell, setEditableCell] = useState(null);\r\n  const [hiddenColumns, setHiddenColumns] = useState([]);\r\n  const [isColumnsModified, setIsColumnsModified] = useState(false);\r\n  const [editedCellValues, setEditedCellValues] = useState({});\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: '№ п/п',\r\n        accessor: (row, index) => index + 1,\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'ср.б.',\r\n        accessor: (row) => `${row.student.average_score}`,\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'номер протокола',\r\n        accessor: (row) => `${row.workProtecton.protocol_number}`,\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'дата протокола',\r\n        accessor: (row) => `${row.workProtecton.date}`,\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'Фамилия, Имя, Отчество',\r\n        accessor: (row) => `${row.student.surname} ${row.student.name} ${row.student.patronymic}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Тема',\r\n        accessor: (row) => `${row.theme.name}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Руководитель',\r\n        accessor: (row) => `${row.teacher.surname} ${row.teacher.name} ${row.teacher.patronymic}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Консультант',\r\n        accessor: (row) => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Рецензент',\r\n        accessor: (row) => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'организация',\r\n        accessor: (row) => `${row.theme.company.name} ${row.theme.company.last_name_of_responsible} ${row.theme.company.first_name_of_responsible} ${row.theme.company.patronymic_name_of_responsible}\r\n         ${row.theme.company.job_title_of_resposible} ${row.theme.company.additional_information}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'номер зачетки',\r\n        accessor: (row) => `${row.student.record_book_number}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Телефон',\r\n        accessor: (row) => `${row.student.phone}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Email',\r\n        accessor: (row) => `${row.student.email}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'бюджет/платный',\r\n        accessor: (row) => `${row.student.basis_of_study}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'оценка на предзащите/ преддипломная практика',\r\n        accessor: (row) => `${row.preprotection_grade}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'оценка на защите',\r\n        accessor: (row) => `${row.workProtecton.final_grade}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'дата рождения',\r\n        accessor: (row) => `${row.student.date_of_birth}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'год окончания предыдущ образования',\r\n        accessor: (row) => `${row.student.year_of_prev_education_completion}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'форма предыдущего образования',\r\n        accessor: (row) => `${row.student.form_of_prev_education}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'год поступления',\r\n        accessor: (row) => `${row.student.year_of_admission}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'особые отметки',\r\n        accessor: (row) => `${row.student.special_marks}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'приказы',\r\n        columns: [\r\n          {\r\n            Header: 'допуск',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            isVisible: true\r\n          },\r\n          {\r\n            Header: 'тема',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            isVisible: true\r\n          },\r\n          {\r\n            Header: 'изменение темы',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            isVisible: true\r\n          },\r\n          {\r\n            Header: 'рецензент',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            isVisible: true\r\n          },\r\n          {\r\n            Header: 'отчисление',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            isVisible: true\r\n          },\r\n          {\r\n            Header: 'с какого числа отчисление',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            isVisible: true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        Header: 'отметки о выполнении',\r\n        columns: [\r\n          {\r\n            Header: 'долги',\r\n            accessor: (row) => `${row.student.number_of_debts}`,\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'справка о выполнении уч. плана',\r\n            accessor: (row) => `${row.student.certificate_of_curriculum_completion}`,\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'сдана зачетка',\r\n            accessor: (row) => `${row.student.record_book_submitted}`,\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'сдана пояснительная записка',\r\n            accessor: (row) => (row.explanatory_note_submitted ? 'да' : 'нет'),\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'красный диплом',\r\n            accessor: (row) => (row.student.diploma_with_honors ? 'да' : 'нет'),\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'согласие на публикацию',\r\n            accessor: (row) => (row.publication_agree ? 'да' : 'нет'),\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'отзыв',\r\n            accessor: (row) => `${row.teacher_review}`,\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'рецензия',\r\n            accessor: (row) => `${row.review}`,\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'Акт о внедрении',\r\n            accessor: (row) => (row.implementation_act ? 'да' : 'нет'),\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'отчет о плагиате',\r\n            accessor: (row) => (row.plagarism_report ? row.plagarism_report : 'нет'),\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'заявление на последипломный отпуск',\r\n            accessor: (row) => (row.student.application_for_postgraduate_leave ? row.student.application_for_postgraduate_leave : 'нет'),\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'рекомендован к поступлению',\r\n            accessor: (row) => `${row.student.recommended_for_admission}`,\r\n            Filter: Filter\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        Header: 'вид ВКР',\r\n        accessor: (row) => `${row.type_of_fqw}`,\r\n        Filter: Filter,\r\n        headerProps: { rowSpan: 2 },\r\n      },\r\n      {\r\n        Header: 'ВКР по заявке',\r\n        accessor: (row) => `${row.theme.fqw_by_application}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'ВКР на англ. языке',\r\n        accessor: (row) => (row.theme.fqw_in_english ? 'да' : 'нет'),\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Тип ВКР',\r\n        accessor: (row) => `${row.theme.fqw_type}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Язык выполнения ВКР',\r\n        accessor: (row) => `${row.theme.language_of_fqw}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Бюджет',\r\n        accessor: (row) => (row.student.budget ? 'да' : 'нет'),\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Тематика ВКР',\r\n        accessor: (row) => `${row.theme.topic_of_fqw}`,\r\n        Filter: Filter,\r\n      },\r\n    ],\r\n    [tableData]\r\n  );\r\n\r\n  const data = useMemo(() => tableData, [tableData]);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    setHiddenColumns: setTableHiddenColumns,\r\n    state: { hiddenColumns: tableHiddenColumns },\r\n  } = useTable({ columns, data }, useFilters);\r\n\r\n  useEffect(() => {\r\n    // Set initial hidden columns\r\n    setTableHiddenColumns(hiddenColumns);\r\n  }, [hiddenColumns, setTableHiddenColumns]);\r\n\r\n  useEffect(() => {\r\n    setIsColumnsModified(hiddenColumns.length !== 0);\r\n  }, [hiddenColumns]);\r\n\r\n  const toggleColumnVisibility = (columnId) => {\r\n    setHiddenColumns((prevHiddenColumns) =>\r\n      prevHiddenColumns.includes(columnId)\r\n        ? prevHiddenColumns.filter((id) => id !== columnId)\r\n        : [...prevHiddenColumns, columnId]\r\n    );\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    const filteredData = rows.map((row) => row.original);\r\n    const worksheet = XLSX.utils.json_to_sheet(filteredData);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n    const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    const blob = new Blob([excelBuffer], { type: 'application/octet-stream' });\r\n    saveAs(blob, 'table_data.xlsx');\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (e) => {\r\n      const data = new Uint8Array(e.target.result);\r\n      const workbook = XLSX.read(data, { type: 'array' });\r\n      const worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n      const jsonData = XLSX.utils.sheet_to_json(worksheet);\r\n      setTableData(jsonData);\r\n    };\r\n\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  const handleCellClick = (rowIndex, columnId) => {\r\n    if (editableCell && editableCell.rowIndex === rowIndex && editableCell.columnId === columnId) {\r\n      setEditableCell(null); // Close the cell if it's already open\r\n    } else {\r\n      setEditableCell({ rowIndex, columnId }); // Open the clicked cell\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, rowIndex, columnId) => {\r\n    const newValue = e.target.value;\r\n    setEditedCellValues((prevValues) => ({\r\n      ...prevValues,\r\n      [`${rowIndex}-${columnId}`]: newValue,\r\n    }));\r\n  };\r\n\r\n  const handleSaveChanges = () => {\r\n    const newData = [...tableData];\r\n    for (const [key, value] of Object.entries(editedCellValues)) {\r\n      const [rowIndex, columnId] = key.split('-').map(Number);\r\n      const column = columns[columnId];\r\n      newData[rowIndex][column.accessor] = value;\r\n    }\r\n    setTableData(newData);\r\n    setEditedCellValues({});\r\n    setEditableCell(null); // Close the currently edited cell\r\n  };\r\n\r\n  const handleCancelChanges = () => {\r\n    setEditedCellValues({});\r\n    setEditableCell(null); // Close the currently edited cell\r\n  };\r\n\r\n  const handleResetColumns = () => {\r\n    setHiddenColumns([]);\r\n  };\r\n\r\n  const renderCell = (cell, rowIndex, columnId) => {\r\n    const isEditableCell =\r\n      editableCell &&\r\n      editableCell.rowIndex === rowIndex &&\r\n      editableCell.columnId === columnId;\r\n\r\n    if (isEditableCell) {\r\n      return (\r\n        <input\r\n          type=\"text\"\r\n          value={editedCellValues[`${rowIndex}-${columnId}`] || cell.value}\r\n          onChange={(e) => handleInputChange(e, rowIndex, columnId)}\r\n          onBlur={handleSaveChanges}\r\n        />\r\n      );\r\n    }\r\n\r\n    return <span onClick={() => handleCellClick(rowIndex, columnId)}>{cell.value}</span>;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles['button-container']}>\r\n        <Button variant=\"primary\" onClick={handleDownload}>\r\n          Скачать таблицу\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={() => document.getElementById('file-upload').click()}>\r\n          Загрузить таблицу\r\n        </Button>\r\n        <input\r\n          type=\"file\"\r\n          id=\"file-upload\"\r\n          style={{ display: 'none' }}\r\n          onChange={handleUpload}\r\n        />\r\n        {isColumnsModified && (\r\n          <Button variant=\"warning\" onClick={handleResetColumns}>\r\n            Сбросить изменения\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <div className=\"table-wrapper\" style={{ overflowX: 'auto' }}>\r\n        <table {...getTableProps()} className={styles['table']}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column, index) => (\r\n                  <th {...column.getHeaderProps()}>\r\n                    <Row>\r\n                      <Col>{column.render('Header')}</Col>\r\n                      <Col>\r\n                        <Button\r\n                          variant=\"link\"\r\n                          onClick={() => toggleColumnVisibility(index)}\r\n                        >\r\n                          <img src={hide_cell} alt=\"Hide\" style={{ width: '16px' }} />\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, rowIndex) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell, columnIndex) => (\r\n                    <td {...cell.getCellProps()}>\r\n                      {renderCell(cell, rowIndex, columnIndex)}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SecretaryHugeTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}