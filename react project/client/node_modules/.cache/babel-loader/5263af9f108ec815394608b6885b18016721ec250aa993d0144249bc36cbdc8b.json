{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react project\\\\client\\\\src\\\\components\\\\Modals\\\\ModalViewGraphExists\\\\GenerateTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport petrovich from 'petrovich';\nimport RussianNouns from 'russian-nouns-js';\nimport { saveAs } from 'file-saver';\nimport PizZip from 'pizzip';\nimport Docxtemplater from 'docxtemplater';\nimport word from './3.docx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  message,\n  onClose\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"modal\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"close\",\n      onClick: onClose,\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n_c = Modal;\nconst generateTask = async ({\n  data,\n  request_data_task,\n  schedule_stud_prof\n}) => {\n  if (!request_data_task.student.first_name || !request_data_task.student.last_name || !request_data_task.student.patronymic) {\n    return {\n      error: 'ФИО неполное. Все поля ФИО должны быть заполнены.'\n    };\n  }\n  if (schedule_stud_prof.length === 0) {\n    return {\n      error: 'График отсутствует. График должен быть заполнен.'\n    };\n  }\n  console.log(request_data_task.student.first_name, request_data_task.student.patronymic, request_data_task.student.last_name);\n  console.log(request_data_task);\n  const person = {\n    first: request_data_task.student.first_name,\n    middle: request_data_task.student.patronymic,\n    last: request_data_task.student.last_name\n  };\n  const fio = petrovich(person, 'dative');\n  const rne = new RussianNouns.Engine();\n  function getInitials(firstName, patronymic) {\n    return `${firstName.charAt(0)}.${patronymic.charAt(0)}.`;\n  }\n  const np_s = getInitials(request_data_task.student.first_name, request_data_task.student.patronymic);\n  const np_t = getInitials(request_data_task.teacher.first_name, request_data_task.teacher.patronymic);\n  const year = new Date().getFullYear();\n  const declineWord = (word, gender) => rne.decline({\n    text: word.split(' ')[0],\n    gender\n  }, 'родительный');\n  const student = data.student_list.find(student => student.user_id === request_data_task.student.id);\n  const formatDate = dateString => {\n    const [year, month, day] = dateString.split('-');\n    return `${day}.${month}.${year}`;\n  };\n  try {\n    const response = await fetch(word);\n    if (!response.ok) throw new Error('Ошибка сети');\n    const arrayBuffer = await response.arrayBuffer();\n    const zip = new PizZip(arrayBuffer);\n    const doc = new Docxtemplater(zip);\n    const dataToRender = {\n      year: year,\n      dat_student_last_name: fio.last,\n      student_last_name: request_data_task.student.last_name,\n      student_first_name: fio.first,\n      student_patronymic: fio.middle,\n      group_name: student.group ? student.group.name : '',\n      speciality_code: student.group ? student.group.specialty.code : '',\n      speciality_name: student.group ? student.group.specialty.name : '',\n      profile_code: student.group ? student.group.specialty.field_of_study.code : '',\n      profile_name: student.group ? student.group.specialty.field_of_study.name : '',\n      theme_name: request_data_task.theme.name,\n      np_s: np_s,\n      np_t: np_t,\n      teacher_last_name: request_data_task.teacher.last_name,\n      job_title: '',\n      place_of_work: '',\n      schedule_stud_prof: schedule_stud_prof.map(stage => ({\n        stage_name: stage.stage_name,\n        start: formatDate(stage.start),\n        // Форматирование начальной даты\n        end: stage.end ? '-' + formatDate(stage.end) : '',\n        result: stage.result,\n        completion_mark: stage.completion_mark ? 'Выполнено' : 'не выполнено'\n      }))\n    };\n    doc.setData(dataToRender);\n    doc.render();\n    const output = doc.getZip().generate({\n      type: 'blob'\n    });\n    saveAs(output, `Задание на ВКР ${request_data_task.student.last_name}.docx`);\n  } catch (error) {\n    console.error('Ошибка загрузки файла:', error);\n  }\n};\nconst TaskGenerator = ({\n  data,\n  request_data_task,\n  schedule_stud_prof,\n  teacher_ei\n}) => {\n  _s();\n  const [modalMessage, setModalMessage] = useState('');\n  const handleGenerateTask = async () => {\n    const result = await generateTask({\n      data,\n      request_data_task,\n      schedule_stud_prof,\n      teacher_ei\n    });\n    if (result !== null && result !== void 0 && result.error) {\n      setModalMessage(result.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateTask,\n      children: \"Generate Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), modalMessage && /*#__PURE__*/_jsxDEV(Modal, {\n      message: modalMessage,\n      onClose: () => setModalMessage('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskGenerator, \"Qahunj8l8jdNS8knS647o5Rbg2M=\");\n_c2 = TaskGenerator;\nexport default generateTask;\nvar _c, _c2;\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"TaskGenerator\");","map":{"version":3,"names":["React","useState","petrovich","RussianNouns","saveAs","PizZip","Docxtemplater","word","jsxDEV","_jsxDEV","Modal","message","onClose","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","generateTask","data","request_data_task","schedule_stud_prof","student","first_name","last_name","patronymic","error","length","console","log","person","first","middle","last","fio","rne","Engine","getInitials","firstName","charAt","np_s","np_t","teacher","year","Date","getFullYear","declineWord","gender","decline","text","split","student_list","find","user_id","id","formatDate","dateString","month","day","response","fetch","ok","Error","arrayBuffer","zip","doc","dataToRender","dat_student_last_name","student_last_name","student_first_name","student_patronymic","group_name","group","name","speciality_code","specialty","code","speciality_name","profile_code","field_of_study","profile_name","theme_name","theme","teacher_last_name","job_title","place_of_work","map","stage","stage_name","start","end","result","completion_mark","setData","render","output","getZip","generate","type","TaskGenerator","teacher_ei","_s","modalMessage","setModalMessage","handleGenerateTask","_c2","$RefreshReg$"],"sources":["C:/study/react project/client/src/components/Modals/ModalViewGraphExists/GenerateTask.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport petrovich from 'petrovich';\r\nimport RussianNouns from 'russian-nouns-js';\r\nimport { saveAs } from 'file-saver';\r\nimport PizZip from 'pizzip';\r\nimport Docxtemplater from 'docxtemplater';\r\nimport word from './3.docx';\r\n\r\nconst Modal = ({ message, onClose }) => (\r\n  <div className=\"modal\">\r\n    <div className=\"modal-content\">\r\n      <span className=\"close\" onClick={onClose}>&times;</span>\r\n      <p>{message}</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst generateTask = async ({ data, request_data_task, schedule_stud_prof }) => {\r\n\r\n\r\n  if (!request_data_task.student.first_name || !request_data_task.student.last_name || !request_data_task.student.patronymic) {\r\n    return { error: 'ФИО неполное. Все поля ФИО должны быть заполнены.' };\r\n  }\r\n\r\n  if (schedule_stud_prof.length === 0) {\r\n    return { error: 'График отсутствует. График должен быть заполнен.' };\r\n  }\r\n\r\n  console.log(request_data_task.student.first_name, request_data_task.student.patronymic, request_data_task.student.last_name);\r\n  console.log(request_data_task);\r\n\r\n\r\n  const person = {\r\n    first: request_data_task.student.first_name,\r\n    middle: request_data_task.student.patronymic,\r\n    last: request_data_task.student.last_name,\r\n  };\r\n  const fio = petrovich(person, 'dative');\r\n  const rne = new RussianNouns.Engine();\r\n\r\n  function getInitials(firstName, patronymic) {\r\n    return `${firstName.charAt(0)}.${patronymic.charAt(0)}.`;\r\n  }\r\n\r\n  const np_s = getInitials(request_data_task.student.first_name, request_data_task.student.patronymic);\r\n  const np_t = getInitials(request_data_task.teacher.first_name, request_data_task.teacher.patronymic);\r\n  const year = new Date().getFullYear();\r\n  const declineWord = (word, gender) => rne.decline({ text: word.split(' ')[0], gender }, 'родительный');\r\n\r\n\r\n  const student = data.student_list.find(student => student.user_id === request_data_task.student.id);\r\n  const formatDate = (dateString) => {\r\n    const [year, month, day] = dateString.split('-');\r\n    return `${day}.${month}.${year}`;\r\n};\r\n\r\n  try {\r\n    const response = await fetch(word);\r\n    if (!response.ok) throw new Error('Ошибка сети');\r\n    const arrayBuffer = await response.arrayBuffer();\r\n    const zip = new PizZip(arrayBuffer);\r\n    const doc = new Docxtemplater(zip);\r\n\r\n    const dataToRender = {\r\n      year: year,\r\n      dat_student_last_name: fio.last,\r\n      student_last_name: request_data_task.student.last_name,\r\n      student_first_name: fio.first,\r\n      student_patronymic: fio.middle,\r\n      group_name: student.group ? student.group.name : '',\r\n      speciality_code:  student.group ? student.group.specialty.code : '',\r\n      speciality_name:  student.group ? student.group.specialty.name : '',\r\n      profile_code:  student.group ?  student.group.specialty.field_of_study.code : '',\r\n      profile_name: student.group ? student.group.specialty.field_of_study.name : '',\r\n      theme_name: request_data_task.theme.name,\r\n      np_s: np_s,\r\n      np_t: np_t,\r\n      teacher_last_name: request_data_task.teacher.last_name,\r\n      job_title:  '',\r\n      place_of_work:  '',\r\n      schedule_stud_prof: schedule_stud_prof.map(stage => ({\r\n        stage_name: stage.stage_name,\r\n        start: formatDate(stage.start), // Форматирование начальной даты\r\n        end: stage.end ? '-' + formatDate(stage.end) : '',\r\n        result: stage.result,\r\n        completion_mark: stage.completion_mark ? 'Выполнено' : 'не выполнено',\r\n      })),\r\n    };\r\n\r\n    doc.setData(dataToRender);\r\n    doc.render();\r\n\r\n    const output = doc.getZip().generate({ type: 'blob' });\r\n    saveAs(output, `Задание на ВКР ${request_data_task.student.last_name}.docx`);\r\n  } catch (error) {\r\n    console.error('Ошибка загрузки файла:', error);\r\n  }\r\n};\r\n\r\nconst TaskGenerator = ({ data, request_data_task, schedule_stud_prof, teacher_ei }) => {\r\n  const [modalMessage, setModalMessage] = useState('');\r\n\r\n  const handleGenerateTask = async () => {\r\n    const result = await generateTask({ data, request_data_task, schedule_stud_prof, teacher_ei });\r\n    if (result?.error) {\r\n      setModalMessage(result.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleGenerateTask}>Generate Task</button>\r\n      {modalMessage && <Modal message={modalMessage} onClose={() => setModalMessage('')} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default generateTask;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}