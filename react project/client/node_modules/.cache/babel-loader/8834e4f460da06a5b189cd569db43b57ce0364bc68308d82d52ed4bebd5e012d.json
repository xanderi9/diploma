{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\ProtectionSchedule\\\\ViewProtectionSchedulePersons.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewProtectionSchedulePersons({\n  protection_schedule,\n  students_list_for_schedule\n}) {\n  // Функция для форматирования даты\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const options = {\n      day: 'numeric',\n      month: 'numeric',\n      year: 'numeric'\n    };\n    return date.toLocaleDateString('ru-RU', options);\n  };\n\n  // Группировка расписания по дням и фамилиям\n  const groupedSchedule = protection_schedule.reduce((acc, item) => {\n    var _students_list_for_sc, _students_list_for_sc2;\n    const dateKey = formatDate(item.date);\n    if (!acc[dateKey]) {\n      acc[dateKey] = {};\n    }\n    const lastName = ((_students_list_for_sc = students_list_for_schedule.find(student => student.student.group.id === item.group.id)) === null || _students_list_for_sc === void 0 ? void 0 : (_students_list_for_sc2 = _students_list_for_sc.student) === null || _students_list_for_sc2 === void 0 ? void 0 : _students_list_for_sc2.last_name) || 'Additional Information';\n    if (!acc[dateKey][lastName]) {\n      acc[dateKey][lastName] = [];\n    }\n    acc[dateKey][lastName].push(item);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(groupedSchedule).map(([date, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), Object.entries(items).map(([lastName, groups]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: groups.map((group, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [group.group.name, \" - \", group.additional_information || group.venue_number]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this)]\n      }, lastName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this))]\n    }, date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_c = ViewProtectionSchedulePersons;\nexport default ViewProtectionSchedulePersons;\nvar _c;\n$RefreshReg$(_c, \"ViewProtectionSchedulePersons\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ViewProtectionSchedulePersons","protection_schedule","students_list_for_schedule","formatDate","dateString","date","Date","options","day","month","year","toLocaleDateString","groupedSchedule","reduce","acc","item","_students_list_for_sc","_students_list_for_sc2","dateKey","lastName","find","student","group","id","last_name","push","children","Object","entries","map","items","fileName","_jsxFileName","lineNumber","columnNumber","groups","index","name","additional_information","venue_number","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/ProtectionSchedule/ViewProtectionSchedulePersons.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction ViewProtectionSchedulePersons({ protection_schedule, students_list_for_schedule }) {\r\n    // Функция для форматирования даты\r\n    const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        const options = { day: 'numeric', month: 'numeric', year: 'numeric' };\r\n        return date.toLocaleDateString('ru-RU', options);\r\n    };\r\n\r\n    // Группировка расписания по дням и фамилиям\r\n    const groupedSchedule = protection_schedule.reduce((acc, item) => {\r\n        const dateKey = formatDate(item.date);\r\n        if (!acc[dateKey]) {\r\n            acc[dateKey] = {};\r\n        }\r\n        const lastName = students_list_for_schedule.find(student => student.student.group.id === item.group.id)?.student?.last_name || 'Additional Information';\r\n        if (!acc[dateKey][lastName]) {\r\n            acc[dateKey][lastName] = [];\r\n        }\r\n        acc[dateKey][lastName].push(item);\r\n        return acc;\r\n    }, {});\r\n\r\n    return (\r\n        <div>\r\n            {Object.entries(groupedSchedule).map(([date, items]) => (\r\n                <div key={date}>\r\n                    <h3>{date}</h3>\r\n                    {Object.entries(items).map(([lastName, groups]) => (\r\n                        <div key={lastName}>\r\n                            <h4>{lastName}</h4>\r\n                            <ul>\r\n                                {groups.map((group, index) => (\r\n                                    <li key={index}>\r\n                                        {group.group.name} - {group.additional_information || group.venue_number}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewProtectionSchedulePersons;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}