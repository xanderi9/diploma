{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\ProtectionSchedule\\\\ViewProtectionSchedulePersons.js\";\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewProtectionSchedulePersons = ({\n  protection_schedule,\n  students_list_for_schedule\n}) => {\n  const formatDate = date => {\n    const options = {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    };\n    return date.toLocaleDateString('ru-RU', options);\n  };\n  const getFullName = studentData => {\n    if (studentData && studentData.student) {\n      const {\n        last_name,\n        first_name,\n        patronymic\n      } = studentData.student;\n      return `${last_name} ${first_name} ${patronymic}`;\n    } else {\n      return 'Unknown';\n    }\n  };\n  const distributeStudentsByProtectionDays = schedule => {\n    const groupedSchedule = {};\n    schedule.forEach(item => {\n      const dateKey = formatDate(item.date);\n      if (!groupedSchedule[dateKey]) {\n        groupedSchedule[dateKey] = [];\n      }\n      groupedSchedule[dateKey].push(item);\n    });\n    return groupedSchedule;\n  };\n  const limitStudentsPerDay = schedule => {\n    const modifiedSchedule = {};\n    Object.entries(schedule).forEach(([date, items]) => {\n      const nextDay = new Date(date);\n      nextDay.setDate(nextDay.getDate() + 1);\n      const nextDayKey = formatDate(nextDay);\n      items.forEach(item => {\n        const groupName = item.group ? item.group.name : '';\n        const groupId = item.group ? item.group.id : '';\n        const students = students_list_for_schedule.filter(student => student.student.group.id === groupId);\n        students.forEach(student => {\n          const fullName = getFullName(student);\n          if (!modifiedSchedule[nextDayKey]) {\n            modifiedSchedule[nextDayKey] = {};\n          }\n          if (!modifiedSchedule[nextDayKey][groupName]) {\n            modifiedSchedule[nextDayKey][groupName] = [];\n          }\n          modifiedSchedule[nextDayKey][groupName].push({\n            fullName,\n            group: groupName,\n            date: nextDayKey\n          });\n        });\n      });\n    });\n    return modifiedSchedule;\n  };\n  const groupedSchedule = distributeStudentsByProtectionDays(protection_schedule);\n  const limitedSchedule = limitStudentsPerDay(groupedSchedule);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(limitedSchedule).map(([date, groups]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), Object.entries(groups).map(([group, students]) => /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0424\\u0418\\u041E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0414\\u0430\\u0442\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.group\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this)]\n      }, group, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this))]\n    }, date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_c = ViewProtectionSchedulePersons;\nexport default ViewProtectionSchedulePersons;\nvar _c;\n$RefreshReg$(_c, \"ViewProtectionSchedulePersons\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","ViewProtectionSchedulePersons","protection_schedule","students_list_for_schedule","formatDate","date","options","day","month","year","toLocaleDateString","getFullName","studentData","student","last_name","first_name","patronymic","distributeStudentsByProtectionDays","schedule","groupedSchedule","forEach","item","dateKey","push","limitStudentsPerDay","modifiedSchedule","Object","entries","items","nextDay","Date","setDate","getDate","nextDayKey","groupName","group","name","groupId","id","students","filter","fullName","limitedSchedule","children","map","groups","fileName","_jsxFileName","lineNumber","columnNumber","bordered","hover","index","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/ProtectionSchedule/ViewProtectionSchedulePersons.js"],"sourcesContent":["import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst ViewProtectionSchedulePersons = ({ protection_schedule, students_list_for_schedule }) => {\r\n    const formatDate = (date) => {\r\n        const options = { day: 'numeric', month: 'long', year: 'numeric' };\r\n        return date.toLocaleDateString('ru-RU', options);\r\n    };\r\n\r\n    const getFullName = (studentData) => {\r\n        if (studentData && studentData.student) {\r\n            const { last_name, first_name, patronymic } = studentData.student;\r\n            return `${last_name} ${first_name} ${patronymic}`;\r\n        } else {\r\n            return 'Unknown';\r\n        }\r\n    };\r\n\r\n    const distributeStudentsByProtectionDays = (schedule) => {\r\n        const groupedSchedule = {};\r\n\r\n        schedule.forEach((item) => {\r\n            const dateKey = formatDate(item.date);\r\n            if (!groupedSchedule[dateKey]) {\r\n                groupedSchedule[dateKey] = [];\r\n            }\r\n            groupedSchedule[dateKey].push(item);\r\n        });\r\n\r\n        return groupedSchedule;\r\n    };\r\n\r\n    const limitStudentsPerDay = (schedule) => {\r\n        const modifiedSchedule = {};\r\n\r\n        Object.entries(schedule).forEach(([date, items]) => {\r\n            const nextDay = new Date(date);\r\n            nextDay.setDate(nextDay.getDate() + 1);\r\n            const nextDayKey = formatDate(nextDay);\r\n\r\n            items.forEach((item) => {\r\n                const groupName = item.group ? item.group.name : '';\r\n                const groupId = item.group ? item.group.id : '';\r\n\r\n                const students = students_list_for_schedule.filter(student => student.student.group.id === groupId);\r\n                students.forEach(student => {\r\n                    const fullName = getFullName(student);\r\n                    if (!modifiedSchedule[nextDayKey]) {\r\n                        modifiedSchedule[nextDayKey] = {};\r\n                    }\r\n                    if (!modifiedSchedule[nextDayKey][groupName]) {\r\n                        modifiedSchedule[nextDayKey][groupName] = [];\r\n                    }\r\n                    modifiedSchedule[nextDayKey][groupName].push({ fullName, group: groupName, date: nextDayKey });\r\n                });\r\n            });\r\n        });\r\n\r\n        return modifiedSchedule;\r\n    };\r\n\r\n    const groupedSchedule = distributeStudentsByProtectionDays(protection_schedule);\r\n    const limitedSchedule = limitStudentsPerDay(groupedSchedule);\r\n\r\n    return (\r\n        <div>\r\n            {Object.entries(limitedSchedule).map(([date, groups]) => (\r\n                <div key={date}>\r\n                    <h3>{date}</h3>\r\n                    {Object.entries(groups).map(([group, students]) => (\r\n                        <Table bordered hover key={group}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ФИО</th>\r\n                                    <th>Группа</th>\r\n                                    <th>Дата</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {students.map((student, index) => (\r\n                                    <tr key={index}>\r\n                                        <td>{student.fullName}</td>\r\n                                        <td>{student.group}</td>\r\n                                        <td>{student.date}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewProtectionSchedulePersons;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}