{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\ProtectionSchedule\\\\ViewProtectionScheduleTable.jsx\";\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ViewProtectionScheduleTable({\n  protection_schedule\n}) {\n  // Helper function to convert date format\n  const formatDate = dateString => {\n    const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\n    const day = dateString.slice(0, 2);\n    const month = months[parseInt(dateString.slice(2, 4), 10) - 1];\n    const year = dateString.slice(4, 8);\n    return `${day} ${month} ${year}`;\n  };\n  const generateHeading = group => {\n    const {\n      name,\n      speciality\n    } = group;\n    const {\n      code: specialityCode,\n      name: specialityName,\n      field_of_study\n    } = speciality;\n    const {\n      code: fieldOfStudyCode,\n      name: fieldOfStudyName\n    } = field_of_study;\n    if (name.includes('Б')) {\n      return `Бакалавры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\n    } else if (name.includes('М')) {\n      return `Магистры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\n    } else {\n      return `Группа ${name}`;\n    }\n  };\n\n  // Group the schedule by date first\n  const groupedByDate = protection_schedule.reduce((acc, item) => {\n    const date = item.date;\n    if (!acc[date]) {\n      acc[date] = [];\n    }\n    acc[date].push(item);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mb-4 text-center\",\n      children: \"\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A \\u0437\\u0430\\u0449\\u0438\\u0442 \\u0412\\u041A\\u0420\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), Object.keys(groupedByDate).map((date, dateIdx) => {\n      const groupsForDate = groupedByDate[date];\n      const formattedDate = formatDate(date);\n\n      // Group the entries by group name within the same date\n      const groupedByGroupName = groupsForDate.reduce((acc, item) => {\n        const groupName = item.group.name;\n        if (!acc[groupName]) {\n          acc[groupName] = [];\n        }\n        acc[groupName].push(item);\n        return acc;\n      }, {});\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: formattedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), Object.keys(groupedByGroupName).map((groupName, groupIdx) => {\n          const group = groupedByGroupName[groupName][0].group;\n          const heading = generateHeading(group);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: heading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              bordered: true,\n              style: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u041F\\u041F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0414\\u0430\\u0442\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0412\\u0440\\u0435\\u043C\\u044F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0410\\u0443\\u0434\\u0438\\u0442\\u043E\\u0440\\u0438\\u044F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0423\\u0447. \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: groupedByGroupName[groupName].map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: groupIdx * groupedByGroupName[groupName].length + idx + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formattedDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"9:00\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.audience_number\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: groupName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 27\n                  }, this)]\n                }, item.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)]\n          }, `group-${groupName}-${groupIdx}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this);\n        })]\n      }, dateIdx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n}\n_c = ViewProtectionScheduleTable;\nexport default ViewProtectionScheduleTable;\nvar _c;\n$RefreshReg$(_c, \"ViewProtectionScheduleTable\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewProtectionScheduleTable","protection_schedule","formatDate","dateString","months","day","slice","month","parseInt","year","generateHeading","group","name","speciality","code","specialityCode","specialityName","field_of_study","fieldOfStudyCode","fieldOfStudyName","includes","groupedByDate","reduce","acc","item","date","push","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","dateIdx","groupsForDate","formattedDate","groupedByGroupName","groupName","style","marginBottom","groupIdx","heading","bordered","width","idx","length","audience_number","id","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/ProtectionSchedule/ViewProtectionScheduleTable.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nfunction ViewProtectionScheduleTable({ protection_schedule }) {\r\n  // Helper function to convert date format\r\n  const formatDate = (dateString) => {\r\n    const months = [\r\n      'января', 'февраля', 'марта', 'апреля', 'мая', 'июня',\r\n      'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'\r\n    ];\r\n    const day = dateString.slice(0, 2);\r\n    const month = months[parseInt(dateString.slice(2, 4), 10) - 1];\r\n    const year = dateString.slice(4, 8);\r\n    return `${day} ${month} ${year}`;\r\n  };\r\n\r\n  const generateHeading = (group) => {\r\n    const { name, speciality } = group;\r\n    const { code: specialityCode, name: specialityName, field_of_study } = speciality;\r\n    const { code: fieldOfStudyCode, name: fieldOfStudyName } = field_of_study;\r\n\r\n    if (name.includes('Б')) {\r\n      return `Бакалавры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\r\n    } else if (name.includes('М')) {\r\n      return `Магистры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\r\n    } else {\r\n      return `Группа ${name}`;\r\n    }\r\n  };\r\n\r\n  // Group the schedule by date first\r\n  const groupedByDate = protection_schedule.reduce((acc, item) => {\r\n    const date = item.date;\r\n    if (!acc[date]) {\r\n      acc[date] = [];\r\n    }\r\n    acc[date].push(item);\r\n    return acc;\r\n  }, {});\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"mb-4 text-center\">График защит ВКР</h4>\r\n      {Object.keys(groupedByDate).map((date, dateIdx) => {\r\n        const groupsForDate = groupedByDate[date];\r\n        const formattedDate = formatDate(date);\r\n\r\n        // Group the entries by group name within the same date\r\n        const groupedByGroupName = groupsForDate.reduce((acc, item) => {\r\n          const groupName = item.group.name;\r\n          if (!acc[groupName]) {\r\n            acc[groupName] = [];\r\n          }\r\n          acc[groupName].push(item);\r\n          return acc;\r\n        }, {});\r\n\r\n        return (\r\n          <div key={dateIdx} style={{ marginBottom: '20px' }}>\r\n            <h5>{formattedDate}</h5>\r\n            {Object.keys(groupedByGroupName).map((groupName, groupIdx) => {\r\n              const group = groupedByGroupName[groupName][0].group;\r\n              const heading = generateHeading(group);\r\n              return (\r\n                <div key={`group-${groupName}-${groupIdx}`}>\r\n                  <h6>{heading}</h6>\r\n                  <Table bordered style={{ width: '100%' }}>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>ПП</th>\r\n                        <th>Дата</th>\r\n                        <th>Время</th>\r\n                        <th>Аудитория</th>\r\n                        <th>Уч. группа</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {groupedByGroupName[groupName].map((item, idx) => (\r\n                        <tr key={item.id}>\r\n                          <td>{groupIdx * groupedByGroupName[groupName].length + idx + 1}</td>\r\n                          <td>{formattedDate}</td>\r\n                          <td>9:00</td>\r\n                          <td>{item.audience_number}</td>\r\n                          <td>{groupName}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewProtectionScheduleTable;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,2BAA2BA,CAAC;EAAEC;AAAoB,CAAC,EAAE;EAC5D;EACA,MAAMC,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,MAAM,GAAG,CACb,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EACrD,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAC9D;IACD,MAAMC,GAAG,GAAGF,UAAU,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAClC,MAAMC,KAAK,GAAGH,MAAM,CAACI,QAAQ,CAACL,UAAU,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IAC9D,MAAMG,IAAI,GAAGN,UAAU,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACnC,OAAQ,GAAED,GAAI,IAAGE,KAAM,IAAGE,IAAK,EAAC;EAClC,CAAC;EAED,MAAMC,eAAe,GAAIC,KAAK,IAAK;IACjC,MAAM;MAAEC,IAAI;MAAEC;IAAW,CAAC,GAAGF,KAAK;IAClC,MAAM;MAAEG,IAAI,EAAEC,cAAc;MAAEH,IAAI,EAAEI,cAAc;MAAEC;IAAe,CAAC,GAAGJ,UAAU;IACjF,MAAM;MAAEC,IAAI,EAAEI,gBAAgB;MAAEN,IAAI,EAAEO;IAAiB,CAAC,GAAGF,cAAc;IAEzE,IAAIL,IAAI,CAACQ,QAAQ,CAAC,GAAG,CAAC,EAAE;MACtB,OAAQ,8BAA6BL,cAAe,KAAIC,cAAe,kBAAiBE,gBAAiB,KAAIC,gBAAiB,GAAE;IAClI,CAAC,MAAM,IAAIP,IAAI,CAACQ,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC7B,OAAQ,6BAA4BL,cAAe,KAAIC,cAAe,kBAAiBE,gBAAiB,KAAIC,gBAAiB,GAAE;IACjI,CAAC,MAAM;MACL,OAAQ,UAASP,IAAK,EAAC;IACzB;EACF,CAAC;;EAED;EACA,MAAMS,aAAa,GAAGpB,mBAAmB,CAACqB,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IAC9D,MAAMC,IAAI,GAAGD,IAAI,CAACC,IAAI;IACtB,IAAI,CAACF,GAAG,CAACE,IAAI,CAAC,EAAE;MACdF,GAAG,CAACE,IAAI,CAAC,GAAG,EAAE;IAChB;IACAF,GAAG,CAACE,IAAI,CAAC,CAACC,IAAI,CAACF,IAAI,CAAC;IACpB,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,oBACE1B,OAAA,CAAAE,SAAA;IAAA4B,QAAA,gBACE9B,OAAA;MAAI+B,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrDC,MAAM,CAACC,IAAI,CAACb,aAAa,CAAC,CAACc,GAAG,CAAC,CAACV,IAAI,EAAEW,OAAO,KAAK;MACjD,MAAMC,aAAa,GAAGhB,aAAa,CAACI,IAAI,CAAC;MACzC,MAAMa,aAAa,GAAGpC,UAAU,CAACuB,IAAI,CAAC;;MAEtC;MACA,MAAMc,kBAAkB,GAAGF,aAAa,CAACf,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;QAC7D,MAAMgB,SAAS,GAAGhB,IAAI,CAACb,KAAK,CAACC,IAAI;QACjC,IAAI,CAACW,GAAG,CAACiB,SAAS,CAAC,EAAE;UACnBjB,GAAG,CAACiB,SAAS,CAAC,GAAG,EAAE;QACrB;QACAjB,GAAG,CAACiB,SAAS,CAAC,CAACd,IAAI,CAACF,IAAI,CAAC;QACzB,OAAOD,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;MAEN,oBACE1B,OAAA;QAAmB4C,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAf,QAAA,gBACjD9B,OAAA;UAAA8B,QAAA,EAAKW;QAAa;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACvBC,MAAM,CAACC,IAAI,CAACK,kBAAkB,CAAC,CAACJ,GAAG,CAAC,CAACK,SAAS,EAAEG,QAAQ,KAAK;UAC5D,MAAMhC,KAAK,GAAG4B,kBAAkB,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC7B,KAAK;UACpD,MAAMiC,OAAO,GAAGlC,eAAe,CAACC,KAAK,CAAC;UACtC,oBACEd,OAAA;YAAA8B,QAAA,gBACE9B,OAAA;cAAA8B,QAAA,EAAKiB;YAAO;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAClBnC,OAAA,CAACF,KAAK;cAACkD,QAAQ;cAACJ,KAAK,EAAE;gBAAEK,KAAK,EAAE;cAAO,CAAE;cAAAnB,QAAA,gBACvC9B,OAAA;gBAAA8B,QAAA,eACE9B,OAAA;kBAAA8B,QAAA,gBACE9B,OAAA;oBAAA8B,QAAA,EAAI;kBAAE;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACXnC,OAAA;oBAAA8B,QAAA,EAAI;kBAAI;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbnC,OAAA;oBAAA8B,QAAA,EAAI;kBAAK;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACdnC,OAAA;oBAAA8B,QAAA,EAAI;kBAAS;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAClBnC,OAAA;oBAAA8B,QAAA,EAAI;kBAAU;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACRnC,OAAA;gBAAA8B,QAAA,EACGY,kBAAkB,CAACC,SAAS,CAAC,CAACL,GAAG,CAAC,CAACX,IAAI,EAAEuB,GAAG,kBAC3ClD,OAAA;kBAAA8B,QAAA,gBACE9B,OAAA;oBAAA8B,QAAA,EAAKgB,QAAQ,GAAGJ,kBAAkB,CAACC,SAAS,CAAC,CAACQ,MAAM,GAAGD,GAAG,GAAG;kBAAC;oBAAAlB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACpEnC,OAAA;oBAAA8B,QAAA,EAAKW;kBAAa;oBAAAT,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACxBnC,OAAA;oBAAA8B,QAAA,EAAI;kBAAI;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbnC,OAAA;oBAAA8B,QAAA,EAAKH,IAAI,CAACyB;kBAAe;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAC/BnC,OAAA;oBAAA8B,QAAA,EAAKa;kBAAS;oBAAAX,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA,GALbR,IAAI,CAAC0B,EAAE;kBAAArB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAMZ,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA,GAvBC,SAAQQ,SAAU,IAAGG,QAAS,EAAC;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAwBrC,CAAC;QAEV,CAAC,CAAC;MAAA,GAhCMI,OAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiCZ,CAAC;IAEV,CAAC,CAAC;EAAA,eACF,CAAC;AAEP;AAACmB,EAAA,GA7FQnD,2BAA2B;AA+FpC,eAAeA,2BAA2B;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}