{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\ProtectionSchedule\\\\ViewProtectionSchedulePersons.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewProtectionSchedulePersons({\n  protection_schedule,\n  students_list_for_schedule\n}) {\n  // Функция для форматирования даты\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const options = {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    };\n    return date.toLocaleDateString('ru-RU', options);\n  };\n\n  // Функция для получения ФИО студента\n  const getFullName = studentData => {\n    if (studentData && studentData.student) {\n      const {\n        last_name,\n        first_name,\n        patronymic\n      } = studentData.student;\n      return `${last_name} ${first_name} ${patronymic}`;\n    } else {\n      return 'Unknown';\n    }\n  };\n\n  // Группировка расписания по дням и ФИО\n  const groupedSchedule = protection_schedule.reduce((acc, item) => {\n    const dateKey = formatDate(item.date);\n    const student = students_list_for_schedule.find(student => {\n      var _student$student, _student$student$grou, _item$group;\n      return ((_student$student = student.student) === null || _student$student === void 0 ? void 0 : (_student$student$grou = _student$student.group) === null || _student$student$grou === void 0 ? void 0 : _student$student$grou.id) === ((_item$group = item.group) === null || _item$group === void 0 ? void 0 : _item$group.id);\n    });\n    const fullName = getFullName(student);\n    if (!acc[fullName]) {\n      acc[fullName] = [];\n    }\n    acc[fullName].push(dateKey);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0424\\u0418\\u041E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0414\\u0430\\u0442\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(groupedSchedule).map(([fullName, dates]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: dates.map((date, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: date\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, fullName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_c = ViewProtectionSchedulePersons;\nexport default ViewProtectionSchedulePersons;\nvar _c;\n$RefreshReg$(_c, \"ViewProtectionSchedulePersons\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ViewProtectionSchedulePersons","protection_schedule","students_list_for_schedule","formatDate","dateString","date","Date","options","day","month","year","toLocaleDateString","getFullName","studentData","student","last_name","first_name","patronymic","groupedSchedule","reduce","acc","item","dateKey","find","_student$student","_student$student$grou","_item$group","group","id","fullName","push","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","dates","index","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/ProtectionSchedule/ViewProtectionSchedulePersons.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction ViewProtectionSchedulePersons({ protection_schedule, students_list_for_schedule }) {\r\n    // Функция для форматирования даты\r\n    const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        const options = { day: 'numeric', month: 'long', year: 'numeric' };\r\n        return date.toLocaleDateString('ru-RU', options);\r\n    };\r\n\r\n    // Функция для получения ФИО студента\r\n    const getFullName = (studentData) => {\r\n        if (studentData && studentData.student) {\r\n            const { last_name, first_name, patronymic } = studentData.student;\r\n            return `${last_name} ${first_name} ${patronymic}`;\r\n        } else {\r\n            return 'Unknown';\r\n        }\r\n    };\r\n\r\n    // Группировка расписания по дням и ФИО\r\n    const groupedSchedule = protection_schedule.reduce((acc, item) => {\r\n        const dateKey = formatDate(item.date);\r\n        const student = students_list_for_schedule.find(student => student.student?.group?.id === item.group?.id);\r\n        const fullName = getFullName(student);\r\n        if (!acc[fullName]) {\r\n            acc[fullName] = [];\r\n        }\r\n        acc[fullName].push(dateKey);\r\n        return acc;\r\n    }, {});\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ФИО</th>\r\n                        <th>Дата</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.entries(groupedSchedule).map(([fullName, dates]) => (\r\n                        <tr key={fullName}>\r\n                            <td>{fullName}</td>\r\n                            <td>\r\n                                <ul>\r\n                                    {dates.map((date, index) => (\r\n                                        <li key={index}>{date}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewProtectionSchedulePersons;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}