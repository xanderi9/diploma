{"ast":null,"code":"import petrovich from 'petrovich';\nimport { saveAs } from 'file-saver';\nimport PizZip from 'pizzip';\nimport Docxtemplater from 'docxtemplater';\nimport JSZip from 'jszip';\nimport word from './protocol_kvalif.docx';\nimport RussianNouns from 'russian-nouns-js';\nconst GenerateProtocolsKvalif = async ({\n  composition_of_sec,\n  selectedGroup,\n  groupData,\n  data\n}) => {\n  const chairman = composition_of_sec.find(comp => comp.chairman_of_SEC === true);\n  const members_list = composition_of_sec.filter(sec => sec.chairman_of_SEC === false);\n  const getInitials = (firstName, patronymic) => {\n    return `${firstName.charAt(0)}.${patronymic.charAt(0)}.`;\n  };\n  const np = getInitials(chairman.user.first_name, chairman.user.patronymic);\n  const rne = new RussianNouns.Engine();\n  const declineWord = (word, gender) => rne.decline({\n    text: word.split(' ')[0],\n    gender\n  }, 'родительный').text;\n  try {\n    const response = await fetch(word);\n    if (!response.ok) throw new Error('Ошибка сети');\n    const arrayBuffer = await response.arrayBuffer();\n    const zip = new JSZip();\n    for (const item of groupData) {\n      const {\n        request,\n        work_protection\n      } = item;\n      const student = request.student;\n      const teacher = request.teacher;\n      const theme = request.theme;\n      const [hours_start, min_start] = work_protection.time.split(':');\n      const full_name_student = {\n        last: student.user.last_name,\n        first: student.user.first_name,\n        middle: student.user.patronymic\n      };\n      let fullnameStudent = petrovich(full_name_student, 'accusative');\n      let fullnameStudentGen = petrovich(full_name_student, 'genitive');\n      let fullnameStudentDat = petrovich(full_name_student, 'dative');\n      fullnameStudent = `${fullnameStudent.last} ${fullnameStudent.first} ${fullnameStudent.middle}`;\n      fullnameStudentGen = `${fullnameStudentGen.last} ${fullnameStudentGen.first} ${fullnameStudentGen.middle}`;\n      fullnameStudentDat = `${fullnameStudentDat.last} ${fullnameStudentDat.first} ${fullnameStudentDat.middle}`;\n      const startTime = new Date();\n      startTime.setHours(hours_start);\n      startTime.setMinutes(min_start);\n      startTime.setMinutes(startTime.getMinutes() + 20);\n      const hours_end = startTime.getHours();\n      const min_end = startTime.getMinutes();\n      const dataToRender = {\n        protocol_number: work_protection.protocol_number,\n        group_protection_date: new Date(work_protection.date).toLocaleDateString('ru-RU'),\n        chairman_last_name: chairman.user.last_name,\n        chairman_np: np,\n        chairman_degree: chairman.employee_information.academic_degree,\n        chairman_job_title: chairman.employee_information.job_title,\n        members_list: members_list.map(member => ({\n          members_last_name: member.user.last_name,\n          members_np: getInitials(member.user.first_name, member.user.patronymic),\n          members_degree: member.employee_information.academic_degree || '',\n          members_job_title: member.employee_information.job_title,\n          members_place_of_work: member.employee_information.place_of_work ? member.employee_information.place_of_work.replace(member.employee_information.place_of_work.split(' ')[0], declineWord(member.employee_information.place_of_work, 'женский')) : ''\n        })),\n        student_fullname: fullnameStudent,\n        student_fullname_gen: fullnameStudentGen,\n        student_fullname_dative: fullnameStudentDat,\n        specialityCode: student.group.speciality.code,\n        specialtityProgram: student.group.speciality.name,\n        theme: request.theme_str,\n        teacher_last_name: teacher.user.last_name,\n        teacher_np: getInitials(teacher.user.first_name, teacher.user.patronymic),\n        teacher_degree: teacher.employee_information.academic_degree,\n        teacher_job_title: teacher.employee_information.job_title,\n        student_last_name: student.user.last_name,\n        student_np: getInitials(student.user.first_name, student.user.patronymic),\n        secretary_last_name: data.user.last_name,\n        secretary_np: getInitials(data.user.first_name, data.user.patronymic),\n        duration: 20,\n        hours_start: hours_start,\n        min_start: min_start,\n        hours_end: hours_end,\n        min_end: min_end\n      };\n      const docZip = new PizZip(arrayBuffer);\n      const doc = new Docxtemplater(docZip);\n      doc.setData(dataToRender);\n      doc.render();\n      const output = doc.getZip().generate({\n        type: 'blob'\n      });\n      zip.file(`Протокол_${student.user.last_name}_${student.user.first_name}.docx`, output);\n    }\n    zip.generateAsync({\n      type: 'blob'\n    }).then(content => {\n      saveAs(content, `Протоколы_${selectedGroup}.zip`);\n    });\n  } catch (error) {\n    console.error('Ошибка загрузки файла:', error);\n  }\n};\n_c = GenerateProtocolsKvalif;\nexport default GenerateProtocolsKvalif;\nvar _c;\n$RefreshReg$(_c, \"GenerateProtocolsKvalif\");","map":{"version":3,"names":["petrovich","saveAs","PizZip","Docxtemplater","JSZip","word","RussianNouns","GenerateProtocolsKvalif","composition_of_sec","selectedGroup","groupData","data","chairman","find","comp","chairman_of_SEC","members_list","filter","sec","getInitials","firstName","patronymic","charAt","np","user","first_name","rne","Engine","declineWord","gender","decline","text","split","response","fetch","ok","Error","arrayBuffer","zip","item","request","work_protection","student","teacher","theme","hours_start","min_start","time","full_name_student","last","last_name","first","middle","fullnameStudent","fullnameStudentGen","fullnameStudentDat","startTime","Date","setHours","setMinutes","getMinutes","hours_end","getHours","min_end","dataToRender","protocol_number","group_protection_date","date","toLocaleDateString","chairman_last_name","chairman_np","chairman_degree","employee_information","academic_degree","chairman_job_title","job_title","map","member","members_last_name","members_np","members_degree","members_job_title","members_place_of_work","place_of_work","replace","student_fullname","student_fullname_gen","student_fullname_dative","specialityCode","group","speciality","code","specialtityProgram","name","theme_str","teacher_last_name","teacher_np","teacher_degree","teacher_job_title","student_last_name","student_np","secretary_last_name","secretary_np","duration","docZip","doc","setData","render","output","getZip","generate","type","file","generateAsync","then","content","error","console","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/Forms/GenerateProtocols/GenerateProtocolsKvalif.js"],"sourcesContent":["import petrovich from 'petrovich';\r\nimport { saveAs } from 'file-saver';\r\nimport PizZip from 'pizzip';\r\nimport Docxtemplater from 'docxtemplater';\r\nimport JSZip from 'jszip';\r\nimport word from './protocol_kvalif.docx';\r\nimport RussianNouns from 'russian-nouns-js';\r\n\r\nconst GenerateProtocolsKvalif = async ({ \r\n    composition_of_sec, \r\n    selectedGroup,\r\n    groupData,\r\n    data\r\n}) => {\r\n    const chairman = composition_of_sec.find(comp => comp.chairman_of_SEC === true);\r\n    const members_list = composition_of_sec.filter(sec => sec.chairman_of_SEC === false);\r\n\r\n    const getInitials = (firstName, patronymic) => {\r\n        return `${firstName.charAt(0)}.${patronymic.charAt(0)}.`;\r\n    };\r\n\r\n    const np = getInitials(chairman.user.first_name, chairman.user.patronymic);\r\n\r\n    const rne = new RussianNouns.Engine();\r\n    const declineWord = (word, gender) => rne.decline({ text: word.split(' ')[0], gender }, 'родительный').text;\r\n\r\n    try {\r\n        const response = await fetch(word);\r\n        if (!response.ok) throw new Error('Ошибка сети');\r\n        const arrayBuffer = await response.arrayBuffer();\r\n\r\n        const zip = new JSZip();\r\n\r\n        for (const item of groupData) {\r\n            const { request, work_protection } = item;\r\n            const student = request.student;\r\n            const teacher = request.teacher;\r\n            const theme = request.theme;\r\n            const [hours_start, min_start] = work_protection.time.split(':');\r\n            const full_name_student = {\r\n                last: student.user.last_name,\r\n                first: student.user.first_name,\r\n                middle: student.user.patronymic,\r\n            };\r\n            let fullnameStudent = petrovich(full_name_student, 'accusative');\r\n            let fullnameStudentGen = petrovich(full_name_student, 'genitive');\r\n            let fullnameStudentDat = petrovich(full_name_student, 'dative');\r\n            fullnameStudent = `${fullnameStudent.last} ${fullnameStudent.first} ${fullnameStudent.middle}`;\r\n            fullnameStudentGen = `${fullnameStudentGen.last} ${fullnameStudentGen.first} ${fullnameStudentGen.middle}`;\r\n            fullnameStudentDat = `${fullnameStudentDat.last} ${fullnameStudentDat.first} ${fullnameStudentDat.middle}`;\r\n\r\n            const startTime = new Date();\r\n            startTime.setHours(hours_start);\r\n            startTime.setMinutes(min_start);\r\n            startTime.setMinutes(startTime.getMinutes() + 20);\r\n\r\n            const hours_end = startTime.getHours();\r\n            const min_end = startTime.getMinutes();\r\n\r\n            const dataToRender = {\r\n                protocol_number: work_protection.protocol_number,\r\n                group_protection_date: new Date(work_protection.date).toLocaleDateString('ru-RU'),\r\n                chairman_last_name: chairman.user.last_name,\r\n                chairman_np: np,\r\n                chairman_degree: chairman.employee_information.academic_degree,\r\n                chairman_job_title: chairman.employee_information.job_title,\r\n                members_list: members_list.map(member => ({\r\n                    members_last_name: member.user.last_name,\r\n                    members_np: getInitials(member.user.first_name, member.user.patronymic),\r\n                    members_degree: member.employee_information.academic_degree || '',\r\n                    members_job_title: member.employee_information.job_title,\r\n                    members_place_of_work: member.employee_information.place_of_work ? member.employee_information.place_of_work.replace(member.employee_information.place_of_work.split(' ')[0], declineWord(member.employee_information.place_of_work, 'женский')) : '',\r\n                })),\r\n                student_fullname: fullnameStudent,\r\n                student_fullname_gen: fullnameStudentGen,\r\n                student_fullname_dative: fullnameStudentDat,\r\n                specialityCode: student.group.speciality.code,\r\n                specialtityProgram: student.group.speciality.name,\r\n                theme: request.theme_str,\r\n                teacher_last_name: teacher.user.last_name,\r\n                teacher_np: getInitials(teacher.user.first_name, teacher.user.patronymic),\r\n                teacher_degree: teacher.employee_information.academic_degree,\r\n                teacher_job_title: teacher.employee_information.job_title,\r\n                student_last_name: student.user.last_name,\r\n                student_np: getInitials(student.user.first_name, student.user.patronymic),\r\n                secretary_last_name: data.user.last_name,\r\n                secretary_np: getInitials(data.user.first_name, data.user.patronymic),\r\n                duration: 20, \r\n                hours_start: hours_start,\r\n                min_start: min_start,\r\n                hours_end: hours_end,\r\n                min_end: min_end\r\n            };\r\n\r\n            const docZip = new PizZip(arrayBuffer);\r\n            const doc = new Docxtemplater(docZip);\r\n\r\n            doc.setData(dataToRender);\r\n            doc.render();\r\n\r\n            const output = doc.getZip().generate({ type: 'blob' });\r\n            zip.file(`Протокол_${student.user.last_name}_${student.user.first_name}.docx`, output);\r\n        }\r\n\r\n        zip.generateAsync({ type: 'blob' }).then((content) => {\r\n            saveAs(content, `Протоколы_${selectedGroup}.zip`);\r\n        });\r\n    } catch (error) {\r\n        console.error('Ошибка загрузки файла:', error);\r\n    }\r\n};\r\n\r\nexport default GenerateProtocolsKvalif;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}