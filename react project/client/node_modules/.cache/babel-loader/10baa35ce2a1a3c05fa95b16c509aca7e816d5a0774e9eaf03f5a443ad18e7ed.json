{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\Forms\\\\CreateScheduleProtectionForm\\\\CreateScheduleProtectionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\nimport { Document, Packer, Paragraph, TextRun, Table, TableRow, TableCell, HeadingLevel, AlignmentType, PageOrientation, WidthType } from 'docx';\nimport { saveAs } from 'file-saver';\nimport styles_base from '../FormsBase.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateScheduleProtectionForm = ({\n  groups_for_schedule,\n  students_list_for_schedule\n}) => {\n  _s();\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [dateStart, setDateStart] = useState('');\n  const [audienceNumber, setAudienceNumber] = useState('');\n  useEffect(() => {}, [groups_for_schedule]);\n  const toggleAll = event => {\n    const checkboxes = document.querySelectorAll('.nested-list input[type=\"checkbox\"]');\n    const isSelected = event.target.classList.contains('selected');\n    checkboxes.forEach(checkbox => {\n      checkbox.checked = !isSelected;\n    });\n    event.target.classList.toggle('selected');\n    updateSelectedItems();\n  };\n  const toggleSubList = (listId, event) => {\n    const list = document.getElementById(listId);\n    const toggleBtn = event.target;\n    if (list.style.display === 'none') {\n      list.style.display = 'block';\n      toggleBtn.textContent = toggleBtn.textContent.replace('[+]', '[-]');\n    } else {\n      list.style.display = 'none';\n      toggleBtn.textContent = toggleBtn.textContent.replace('[-]', '[+]');\n    }\n  };\n  const updateSelectedItems = () => {\n    const checkboxes = document.querySelectorAll('.nested-list input[type=\"checkbox\"]:checked');\n    const selected = [];\n    checkboxes.forEach(checkbox => {\n      const label = checkbox.nextElementSibling.textContent;\n      const groupName = label.split(' (')[0]; // Extract only the group name without the student count\n      selected.push(groupName);\n    });\n    setSelectedItems(selected);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    generateDocument();\n  };\n  if (!groups_for_schedule) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const options = {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    };\n    return date.toLocaleDateString('ru-RU', options);\n  };\n  const addWeekdays = (date, days) => {\n    const newDate = new Date(date);\n    let addedDays = 0;\n    while (addedDays < days) {\n      newDate.setDate(newDate.getDate() + 1);\n\n      // Пропускаем выходные дни (суббота и воскресенье)\n      if (newDate.getDay() !== 0 && newDate.getDay() !== 6) {\n        addedDays++;\n      }\n    }\n    return newDate;\n  };\n  const getStudentCount = groupId => {\n    return students_list_for_schedule.filter(student => student.group === groupId).length;\n  };\n\n  // Сортировка бакалавров по названию группы\n  const bachelors = groups_for_schedule.filter(group => group.name.includes('б')).sort((a, b) => a.name.localeCompare(b.name));\n\n  // Сортировка магистров по названию группы\n  const masters = groups_for_schedule.filter(group => group.name.includes('м')).sort((a, b) => a.name.localeCompare(b.name));\n  const createTableRow = (number, date, time, audience, group) => {\n    return new TableRow({\n      children: [createTableCell(number, true), createTableCell(date, true), createTableCell(time, true), createTableCell(audience, true), createTableCell(group, true)]\n    });\n  };\n  const createTableCell = (text, isBold = false) => {\n    return new TableCell({\n      children: [new Paragraph({\n        text: text,\n        run: {\n          bold: isBold\n        }\n      })],\n      margins: {\n        top: 100,\n        bottom: 100,\n        left: 100,\n        right: 100\n      }\n    });\n  };\n  const generateDocument = () => {\n    const startDate = new Date(dateStart);\n    const doc = new Document({\n      creator: \"YourAppName\",\n      title: \"Schedule Protection\",\n      description: \"Document with the schedule protection details\",\n      sections: [],\n      styles: {\n        paragraphStyles: [{\n          id: \"default\",\n          name: \"Default\",\n          basedOn: \"Normal\",\n          next: \"Normal\",\n          quickFormat: true,\n          run: {\n            font: \"Times New Roman\",\n            size: '12pt',\n            color: '000000'\n          }\n        }]\n      }\n    });\n    const documentTitle = new Paragraph({\n      text: \"Расписание защит кафедры СИИ ИКИТ СФУ\",\n      heading: HeadingLevel.HEADING_1,\n      alignment: AlignmentType.CENTER,\n      spacing: {\n        before: 240,\n        after: 240\n      },\n      style: 'default'\n    });\n    const sectionProperties = {\n      width: 15840,\n      height: 10000,\n      margins: {\n        top: 1440,\n        right: 1440,\n        bottom: 1440,\n        left: 1440\n      }\n    };\n    const combinedElements = [];\n    combinedElements.push(documentTitle);\n    let currentDate = addWeekdays(startDate, 0);\n    let groupsToCombine = [];\n    let totalStudentCount = 0;\n    selectedItems.forEach((groupName, index) => {\n      const group = groups_for_schedule.find(group => group.name === groupName);\n      if (!group || !group.specialty || !group.specialty.field_of_study) {\n        console.warn(`Skipping group due to missing data: ${groupName}`);\n        return;\n      }\n      let text;\n      if (groupName.includes('б')) {\n        text = `Бакалавры по специальности ${group.specialty.code} \"${group.specialty.name}\" по специализированной магистерской программе ${group.specialty.field_of_study.code} \"${group.specialty.field_of_study.name}\"`;\n      } else if (groupName.includes('м')) {\n        text = `Магистры по специальности ${group.specialty.code} \"${group.specialty.name}\" по специализированной магистерской программе ${group.specialty.field_of_study.code} \"${group.specialty.field_of_study.name}\"`;\n      } else {\n        text = `Группа ${groupName}`;\n      }\n      const paragraphBeforeTable = new Paragraph({\n        text: text,\n        heading: HeadingLevel.HEADING_2,\n        alignment: AlignmentType.LEFT,\n        spacing: {\n          before: 240,\n          after: 240\n        },\n        style: 'default'\n      });\n      combinedElements.push(paragraphBeforeTable);\n      groupsToCombine.push(group);\n      totalStudentCount += getStudentCount(group.id);\n      const isLastGroup = index === selectedItems.length - 1;\n      const nextGroup = selectedItems[index + 1] ? groups_for_schedule.find(group => group.name === selectedItems[index + 1]) : null;\n      if (isLastGroup || nextGroup && totalStudentCount + getStudentCount(nextGroup.id) > 12) {\n        const tableRows = [];\n        let rowCounter = 1;\n        const rowsCount = Math.ceil(totalStudentCount / 12);\n        for (let i = 0; i < rowsCount; i++) {\n          currentDate = addWeekdays(currentDate, 1);\n          const formattedDate = formatDate(currentDate);\n          tableRows.push(createTableRow(rowCounter++, formattedDate, '9:00', audienceNumber, groupsToCombine.map(group => group.name).join(\", \")));\n        }\n        const table = new Table({\n          width: {\n            size: 100,\n            type: WidthType.PERCENTAGE\n          },\n          rows: [new TableRow({\n            children: [createTableCell(\"№\", true), createTableCell(\"Дата\", true), createTableCell(\"Время\", true), createTableCell(\"Аудитория\", true), createTableCell(\"Уч. группа\", true)]\n          }), ...tableRows]\n        });\n        combinedElements.push(table);\n        totalStudentCount = 0;\n        groupsToCombine = [];\n        combinedElements.push(new Paragraph({\n          text: \"\",\n          spacing: {\n            before: 30,\n            after: 30\n          }\n        }));\n      }\n    });\n\n    // Add reserve day table\n    const reserveDayDate = addWeekdays(currentDate, 1);\n    const reserveDayFormattedDate = formatDate(reserveDayDate);\n    const reserveDayTable = new Table({\n      width: {\n        size: 100,\n        type: WidthType.PERCENTAGE\n      },\n      rows: [new TableRow({\n        children: [createTableCell(\"№\", true), createTableCell(\"Дата\", true), createTableCell(\"Время\", true), createTableCell(\"Аудитория\", true), createTableCell(\"Уч. группа\", true)]\n      }), createTableRow(1, reserveDayFormattedDate, '9:00', audienceNumber, 'Резервный день для участников комиссионной пересдачи (для всех групп) - на торжественное вручение дипломов не попадают')]\n    });\n    combinedElements.push(reserveDayTable);\n    const section = {\n      properties: sectionProperties,\n      children: combinedElements\n    };\n    doc.addSection(section);\n    Packer.toBlob(doc).then(blob => {\n      saveAs(blob, \"schedule.docx\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 7,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-4 text-center\",\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0433\\u0440\\u0430\\u0444\\u0438\\u043A\\u0430 \\u0437\\u0430\\u0449\\u0438\\u0442 \\u0412\\u041A\\u0420\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"px-4 py-2 m-2\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043D\\u0443\\u0436\\u043D\\u044B\\u0445 \\u0432\\u044B\\u043F\\u0443\\u0441\\u043A\\u043D\\u0438\\u043A\\u043E\\u0432 \\u0438\\u0437 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"top-level-item\",\n              onClick: toggleAll,\n              children: [\"\\u0412\\u0441\\u0435 \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"toggle-btn\",\n                children: \"[+]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"nested-list\",\n              id: \"all\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"top-level-item\",\n                onClick: e => toggleSubList('bakalavry', e),\n                children: [\"\\u0411\\u0430\\u043A\\u0430\\u043B\\u0430\\u0432\\u0440\\u044B \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"toggle-btn\",\n                  children: \"[+]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"nested-list\",\n                id: \"bakalavry\",\n                children: bachelors.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"checkbox\",\n                    id: group.id,\n                    label: `${group.name} (${getStudentCount(group.id)})`,\n                    onClick: updateSelectedItems\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 45\n                  }, this)\n                }, group.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"top-level-item\",\n                onClick: e => toggleSubList('magistranty', e),\n                children: [\"\\u041C\\u0430\\u0433\\u0438\\u0441\\u0442\\u0440\\u044B \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"toggle-btn\",\n                  children: \"[+]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"nested-list\",\n                id: \"magistranty\",\n                children: masters.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"checkbox\",\n                    id: group.id,\n                    label: `${group.name} (${getStudentCount(group.id)})`,\n                    onClick: updateSelectedItems\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 45\n                  }, this)\n                }, group.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"selected-items\",\n            children: [\"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u044B: \", selectedItems.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u0437\\u0430\\u0449\\u0438\\u0442\\u044B \\u0412\\u041A\\u0420:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            value: dateStart,\n            onChange: e => setDateStart(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0430\\u0443\\u0434\\u0438\\u0442\\u043E\\u0440\\u0438\\u044E:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: audienceNumber,\n            onChange: e => setAudienceNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: styles_base.button,\n          children: \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: styles_base.vertical_line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043D\\u0443\\u0436\\u043D\\u0443\\u044E \\u0433\\u0440\\u0443\\u043F\\u043F\\u0443 \\u043B\\u0438\\u0431\\u043E \\u0432\\u0441\\u0435\\u0445 \\u0432\\u044B\\u043F\\u0443\\u0441\\u043A\\u043D\\u0438\\u043A\\u043E\\u0432 \\u0441\\u0440\\u0430\\u0437\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u0414\\u0430\\u043B\\u0435\\u0435 \\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043B\\u0430\\u043D\\u0438\\u0440\\u0443\\u0435\\u043C\\u044B\\u0435 \\u0434\\u0430\\u0442\\u044B \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u0438 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u0438\\u044F \\u0437\\u0430\\u0449\\u0438\\u0442\\u044B \\u0412\\u041A\\u0420\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u043C \\u0448\\u0430\\u0433\\u043E\\u043C \\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u043E\\u0433\\u043E \\u0438\\u043D\\u0442\\u0435\\u0440\\u0432\\u0430\\u043B\\u0430, \\u0440\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u043D\\u043D\\u043E\\u0433\\u043E \\u043D\\u0430 \\u043E\\u0434\\u043D\\u043E \\u0432\\u044B\\u0441\\u0442\\u0443\\u043F\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0432\\u044B\\u043F\\u0443\\u0441\\u043A\\u043D\\u0438\\u043A\\u0430.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u041D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 \\u201C\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\\u201D.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u0414\\u0430\\u043B\\u0435\\u0435 \\u0432\\u044B \\u0441\\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u043D\\u044B\\u0439 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A \\u043A\\u0430\\u043A \\u0447\\u0435\\u0440\\u043D\\u043E\\u0432\\u0438\\u043A, \\u043E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C (\\u0442\\u043E\\u0433\\u0434\\u0430 \\u0435\\u0433\\u043E \\u0443\\u0432\\u0438\\u0434\\u044F\\u0442 \\u0432\\u0441\\u0435 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0438 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u044B) \\u0438\\u043B\\u0438 \\u044D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0432 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442 word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateScheduleProtectionForm, \"aFH3SuJy//lCwh39iCdErwVjeOU=\");\n_c = CreateScheduleProtectionForm;\nexport default CreateScheduleProtectionForm;\nvar _c;\n$RefreshReg$(_c, \"CreateScheduleProtectionForm\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Form","Button","Card","Document","Packer","Paragraph","TextRun","Table","TableRow","TableCell","HeadingLevel","AlignmentType","PageOrientation","WidthType","saveAs","styles_base","jsxDEV","_jsxDEV","CreateScheduleProtectionForm","groups_for_schedule","students_list_for_schedule","_s","selectedItems","setSelectedItems","dateStart","setDateStart","audienceNumber","setAudienceNumber","toggleAll","event","checkboxes","document","querySelectorAll","isSelected","target","classList","contains","forEach","checkbox","checked","toggle","updateSelectedItems","toggleSubList","listId","list","getElementById","toggleBtn","style","display","textContent","replace","selected","label","nextElementSibling","groupName","split","push","handleSubmit","preventDefault","generateDocument","children","fileName","_jsxFileName","lineNumber","columnNumber","formatDate","dateString","date","Date","options","day","month","year","toLocaleDateString","addWeekdays","days","newDate","addedDays","setDate","getDate","getDay","getStudentCount","groupId","filter","student","group","length","bachelors","name","includes","sort","a","b","localeCompare","masters","createTableRow","number","time","audience","createTableCell","text","isBold","run","bold","margins","top","bottom","left","right","startDate","doc","creator","title","description","sections","styles","paragraphStyles","id","basedOn","next","quickFormat","font","size","color","documentTitle","heading","HEADING_1","alignment","CENTER","spacing","before","after","sectionProperties","width","height","combinedElements","currentDate","groupsToCombine","totalStudentCount","index","find","specialty","field_of_study","console","warn","code","paragraphBeforeTable","HEADING_2","LEFT","isLastGroup","nextGroup","tableRows","rowCounter","rowsCount","Math","ceil","i","formattedDate","map","join","table","type","PERCENTAGE","rows","reserveDayDate","reserveDayFormattedDate","reserveDayTable","section","properties","addSection","toBlob","then","blob","className","md","onSubmit","Group","Label","onClick","e","Check","Control","value","onChange","button","vertical_line","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/Forms/CreateScheduleProtectionForm/CreateScheduleProtectionForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\r\nimport { Document, Packer, Paragraph, TextRun, Table, TableRow, TableCell, HeadingLevel, AlignmentType, PageOrientation, WidthType } from 'docx';\r\nimport { saveAs } from 'file-saver';\r\nimport styles_base from '../FormsBase.module.css'\r\n\r\nconst CreateScheduleProtectionForm = ({ groups_for_schedule, students_list_for_schedule }) => {\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n    const [dateStart, setDateStart] = useState('');\r\n    const [audienceNumber, setAudienceNumber] = useState('');\r\n\r\n    useEffect(() => {\r\n    }, [groups_for_schedule]);\r\n\r\n    const toggleAll = (event) => {\r\n        const checkboxes = document.querySelectorAll('.nested-list input[type=\"checkbox\"]');\r\n        const isSelected = event.target.classList.contains('selected');\r\n        checkboxes.forEach((checkbox) => {\r\n            checkbox.checked = !isSelected;\r\n        });\r\n        event.target.classList.toggle('selected');\r\n        updateSelectedItems();\r\n    };\r\n\r\n    const toggleSubList = (listId, event) => {\r\n        const list = document.getElementById(listId);\r\n        const toggleBtn = event.target;\r\n        if (list.style.display === 'none') {\r\n            list.style.display = 'block';\r\n            toggleBtn.textContent = toggleBtn.textContent.replace('[+]', '[-]');\r\n        } else {\r\n            list.style.display = 'none';\r\n            toggleBtn.textContent = toggleBtn.textContent.replace('[-]', '[+]');\r\n        }\r\n    };\r\n\r\n    const updateSelectedItems = () => {\r\n        const checkboxes = document.querySelectorAll('.nested-list input[type=\"checkbox\"]:checked');\r\n        const selected = [];\r\n        checkboxes.forEach((checkbox) => {\r\n            const label = checkbox.nextElementSibling.textContent;\r\n            const groupName = label.split(' (')[0]; // Extract only the group name without the student count\r\n            selected.push(groupName);\r\n        });\r\n        setSelectedItems(selected);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        generateDocument();\r\n    };\r\n\r\n    if (!groups_for_schedule) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        const options = { day: 'numeric', month: 'long', year: 'numeric' };\r\n        return date.toLocaleDateString('ru-RU', options);\r\n    };\r\n\r\n    const addWeekdays = (date, days) => {\r\n        const newDate = new Date(date);\r\n        let addedDays = 0;\r\n    \r\n        while (addedDays < days) {\r\n            newDate.setDate(newDate.getDate() + 1);\r\n    \r\n            // Пропускаем выходные дни (суббота и воскресенье)\r\n            if (newDate.getDay() !== 0 && newDate.getDay() !== 6) {\r\n                addedDays++;\r\n            }\r\n        }\r\n    \r\n        return newDate;\r\n    };\r\n    \r\n    \r\n    \r\n\r\n    const getStudentCount = (groupId) => {\r\n        return students_list_for_schedule.filter(student => student.group === groupId).length;\r\n    };\r\n\r\n    // Сортировка бакалавров по названию группы\r\n    const bachelors = groups_for_schedule\r\n        .filter(group => group.name.includes('б'))\r\n        .sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n    // Сортировка магистров по названию группы\r\n    const masters = groups_for_schedule\r\n        .filter(group => group.name.includes('м'))\r\n        .sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n    const createTableRow = (number, date, time, audience, group) => {\r\n        return new TableRow({\r\n            children: [\r\n                createTableCell(number, true),\r\n                createTableCell(date, true),\r\n                createTableCell(time, true),\r\n                createTableCell(audience, true),\r\n                createTableCell(group, true),\r\n            ],\r\n        });\r\n    };\r\n\r\n    const createTableCell = (text, isBold = false) => {\r\n        return new TableCell({\r\n            children: [\r\n                new Paragraph({\r\n                    text: text,\r\n                    run: {\r\n                        bold: isBold,\r\n                    },\r\n                }),\r\n            ],\r\n            margins: {\r\n                top: 100,\r\n                bottom: 100,\r\n                left: 100,\r\n                right: 100,\r\n            },\r\n        });\r\n    };\r\n\r\n    const generateDocument = () => {\r\n        const startDate = new Date(dateStart);\r\n        const doc = new Document({\r\n            creator: \"YourAppName\",\r\n            title: \"Schedule Protection\",\r\n            description: \"Document with the schedule protection details\",\r\n            sections: [],\r\n            styles: {\r\n                paragraphStyles: [\r\n                    {\r\n                        id: \"default\",\r\n                        name: \"Default\",\r\n                        basedOn: \"Normal\",\r\n                        next: \"Normal\",\r\n                        quickFormat: true,\r\n                        run: {\r\n                            font: \"Times New Roman\",\r\n                            size: '12pt',\r\n                            color: '000000'\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        });\r\n\r\n        const documentTitle = new Paragraph({\r\n            text: \"Расписание защит кафедры СИИ ИКИТ СФУ\",\r\n            heading: HeadingLevel.HEADING_1,\r\n            alignment: AlignmentType.CENTER,\r\n            spacing: {\r\n                before: 240,\r\n                after: 240,\r\n            },\r\n            style: 'default'\r\n        });\r\n\r\n        const sectionProperties = {\r\n            width: 15840,\r\n            height: 10000,\r\n            margins: {\r\n                top: 1440,\r\n                right: 1440,\r\n                bottom: 1440,\r\n                left: 1440,\r\n            },\r\n        };\r\n\r\n        const combinedElements = [];\r\n        combinedElements.push(documentTitle);\r\n\r\n        let currentDate = addWeekdays(startDate, 0);\r\n        let groupsToCombine = [];\r\n        let totalStudentCount = 0;\r\n\r\n        selectedItems.forEach((groupName, index) => {\r\n            const group = groups_for_schedule.find(group => group.name === groupName);\r\n\r\n            if (!group || !group.specialty || !group.specialty.field_of_study) {\r\n                console.warn(`Skipping group due to missing data: ${groupName}`);\r\n                return;\r\n            }\r\n\r\n            let text;\r\n            if (groupName.includes('б')) {\r\n                text = `Бакалавры по специальности ${group.specialty.code} \"${group.specialty.name}\" по специализированной магистерской программе ${group.specialty.field_of_study.code} \"${group.specialty.field_of_study.name}\"`;\r\n            } else if (groupName.includes('м')) {\r\n                text = `Магистры по специальности ${group.specialty.code} \"${group.specialty.name}\" по специализированной магистерской программе ${group.specialty.field_of_study.code} \"${group.specialty.field_of_study.name}\"`;\r\n            } else {\r\n                text = `Группа ${groupName}`;\r\n            }\r\n\r\n            const paragraphBeforeTable = new Paragraph({\r\n                text: text,\r\n                heading: HeadingLevel.HEADING_2,\r\n                alignment: AlignmentType.LEFT,\r\n                spacing: {\r\n                    before: 240,\r\n                    after: 240,\r\n                },\r\n                style: 'default'\r\n            });\r\n\r\n            combinedElements.push(paragraphBeforeTable);\r\n\r\n            groupsToCombine.push(group);\r\n            totalStudentCount += getStudentCount(group.id);\r\n\r\n            const isLastGroup = index === selectedItems.length - 1;\r\n            const nextGroup = selectedItems[index + 1] ? groups_for_schedule.find(group => group.name === selectedItems[index + 1]) : null;\r\n\r\n            if (isLastGroup || (nextGroup && totalStudentCount + getStudentCount(nextGroup.id) > 12)) {\r\n                const tableRows = [];\r\n                let rowCounter = 1;\r\n                const rowsCount = Math.ceil(totalStudentCount / 12);\r\n                for (let i = 0; i < rowsCount; i++) {\r\n                    currentDate = addWeekdays(currentDate, 1);\r\n                    const formattedDate = formatDate(currentDate);\r\n                    tableRows.push(createTableRow(rowCounter++, formattedDate, '9:00', audienceNumber, groupsToCombine.map(group => group.name).join(\", \")));\r\n                }\r\n\r\n                const table = new Table({\r\n                    width: {\r\n                        size: 100,\r\n                        type: WidthType.PERCENTAGE,\r\n                    },\r\n                    rows: [\r\n                        new TableRow({\r\n                            children: [\r\n                                createTableCell(\"№\", true),\r\n                                createTableCell(\"Дата\", true),\r\n                                createTableCell(\"Время\", true),\r\n                                createTableCell(\"Аудитория\", true),                            \r\n                                createTableCell(\"Уч. группа\", true),\r\n                            ],\r\n                        }),\r\n                        ...tableRows,\r\n                    ],\r\n                });\r\n\r\n                combinedElements.push(table);\r\n\r\n                totalStudentCount = 0;\r\n                groupsToCombine = [];\r\n                combinedElements.push(new Paragraph({\r\n                    text: \"\",\r\n                    spacing: {\r\n                        before: 30,\r\n                        after: 30,\r\n                    },\r\n                }));\r\n            }\r\n        });\r\n\r\n        // Add reserve day table\r\n        const reserveDayDate = addWeekdays(currentDate, 1);\r\n        const reserveDayFormattedDate = formatDate(reserveDayDate);\r\n\r\n        const reserveDayTable = new Table({\r\n            width: {\r\n                size: 100,\r\n                type: WidthType.PERCENTAGE,\r\n            },\r\n            rows: [\r\n                new TableRow({\r\n                    children: [\r\n                        createTableCell(\"№\", true),\r\n                        createTableCell(\"Дата\", true),\r\n                        createTableCell(\"Время\", true),\r\n                        createTableCell(\"Аудитория\", true),                            \r\n                        createTableCell(\"Уч. группа\", true),\r\n                    ],\r\n                }),\r\n                createTableRow(1, reserveDayFormattedDate, '9:00', audienceNumber, 'Резервный день для участников комиссионной пересдачи (для всех групп) - на торжественное вручение дипломов не попадают'),\r\n            ],\r\n        });\r\n\r\n        combinedElements.push(reserveDayTable);\r\n\r\n        const section = {\r\n            properties: sectionProperties,\r\n            children: combinedElements,\r\n        };\r\n\r\n        doc.addSection(section);\r\n\r\n        Packer.toBlob(doc).then(blob => {\r\n            saveAs(blob, \"schedule.docx\");\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Row className=\"justify-content-center\">\r\n            <Col md={7}>\r\n                <h4 className=\"mb-4 text-center\">Создание графика защит ВКР</h4>\r\n                <Form className=\"px-4 py-2 m-2\" onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Выберите нужных выпускников из списка:</Form.Label>\r\n                        <ul>\r\n                            <li className=\"top-level-item\" onClick={toggleAll}>\r\n                                Все <span className=\"toggle-btn\">[+]</span>\r\n                            </li>\r\n                            <ul className=\"nested-list\" id=\"all\">\r\n                                <li className=\"top-level-item\" onClick={(e) => toggleSubList('bakalavry', e)}>\r\n                                    Бакалавры <span className=\"toggle-btn\">[+]</span>\r\n                                </li>\r\n                                <ul className=\"nested-list\" id=\"bakalavry\">\r\n                                    {bachelors.map(group => (\r\n                                        <li key={group.id}>\r\n                                            <Form.Check\r\n                                                type=\"checkbox\"\r\n                                                id={group.id}\r\n                                                label={`${group.name} (${getStudentCount(group.id)})`}\r\n                                                onClick={updateSelectedItems}\r\n                                            />\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                                <li className=\"top-level-item\" onClick={(e) => toggleSubList('magistranty', e)}>\r\n                                    Магистры <span className=\"toggle-btn\">[+]</span>\r\n                                </li>\r\n                                <ul className=\"nested-list\" id=\"magistranty\">\r\n                                    {masters.map(group => (\r\n                                        <li key={group.id}>\r\n                                            <Form.Check\r\n                                                type=\"checkbox\"\r\n                                                id={group.id}\r\n                                                label={`${group.name} (${getStudentCount(group.id)})`}\r\n                                                onClick={updateSelectedItems}\r\n                                            />\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </ul>\r\n                        </ul>\r\n                        <div id=\"selected-items\">\r\n                            Выбранные элементы: {selectedItems.join(', ')}\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Введите дату начала защиты ВКР:</Form.Label>\r\n                        <Form.Control type=\"date\" value={dateStart} onChange={(e) => setDateStart(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Введите аудиторию:</Form.Label>\r\n                        <Form.Control type=\"text\" value={audienceNumber} onChange={(e) => setAudienceNumber(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" className={styles_base.button}>\r\n                        Рассчитать\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <hr className={styles_base.vertical_line}/>\r\n            <Col md={4} className=\"mt-5\">\r\n                <ol>\r\n                    <li>Выберите нужную группу либо всех выпускников сразу</li>\r\n                    <li>Далее введите планируемые даты начала и завершения защиты ВКР</li>\r\n                    <li>Следующим шагом введите длительность временного интервала, рассчитанного на одно выступление выпускника.</li>\r\n                    <li>Нажмите “Рассчитать”.</li>\r\n                    <li>\r\n                        Далее вы сможете сохранить полученный список как черновик, опубликовать (тогда его увидят все пользователи системы) или экспортировать в формат word\r\n                    </li>\r\n                </ol>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CreateScheduleProtectionForm;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}