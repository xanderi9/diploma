{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\ProtectionSchedule\\\\ViewProtectionScheduleTable.jsx\";\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ViewProtectionScheduleTable({\n  protection_schedule\n}) {\n  // Helper function to convert date format\n  const formatDate = dateString => {\n    const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\n    const day = dateString.slice(0, 2);\n    const month = months[parseInt(dateString.slice(2, 4), 10) - 1];\n    const year = dateString.slice(4, 8);\n    return `${day} ${month} ${year}`;\n  };\n  const generateHeading = group => {\n    const {\n      name,\n      speciality\n    } = group;\n    const {\n      code: specialityCode,\n      name: specialityName,\n      field_of_study\n    } = speciality;\n    const {\n      code: fieldOfStudyCode,\n      name: fieldOfStudyName\n    } = field_of_study;\n    if (name.includes('Б')) {\n      return `Бакалавры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\n    } else if (name.includes('М')) {\n      return `Магистры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\n    } else {\n      return `Группа ${name}`;\n    }\n  };\n\n  // Group by dates first, then by group names\n  const groupedByDate = protection_schedule.reduce((acc, item) => {\n    const date = item.date;\n    if (!acc[date]) {\n      acc[date] = [];\n    }\n    acc[date].push(item);\n    return acc;\n  }, {});\n  const combinedData = {};\n  Object.keys(groupedByDate).forEach(date => {\n    groupedByDate[date].forEach(item => {\n      const groupName = item.group.name;\n      const combinedKey = groupName;\n      if (!combinedData[combinedKey]) {\n        combinedData[combinedKey] = {\n          dates: new Set(),\n          items: []\n        };\n      }\n      combinedData[combinedKey].dates.add(date);\n      combinedData[combinedKey].items.push(item);\n    });\n  });\n  const mergedData = {};\n  Object.keys(combinedData).forEach(groupName => {\n    combinedData[groupName].dates.forEach(date => {\n      if (!mergedData[date]) {\n        mergedData[date] = {\n          headings: new Set(),\n          items: []\n        };\n      }\n      mergedData[date].headings.add(generateHeading(combinedData[groupName].items[0].group));\n      mergedData[date].items.push(...combinedData[groupName].items.filter(item => item.date === date));\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mb-4 text-center\",\n      children: \"\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A \\u0437\\u0430\\u0449\\u0438\\u0442 \\u0412\\u041A\\u0420\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), Object.keys(mergedData).map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: Array.from(mergedData[date].headings).join(\"; \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u041F\\u041F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0414\\u0430\\u0442\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0412\\u0440\\u0435\\u043C\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0410\\u0443\\u0434\\u0438\\u0442\\u043E\\u0440\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0423\\u0447. \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: mergedData[date].items.map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: idx + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(item.date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"9:00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.audience_number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.group.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_c = ViewProtectionScheduleTable;\nexport default ViewProtectionScheduleTable;\nvar _c;\n$RefreshReg$(_c, \"ViewProtectionScheduleTable\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewProtectionScheduleTable","protection_schedule","formatDate","dateString","months","day","slice","month","parseInt","year","generateHeading","group","name","speciality","code","specialityCode","specialityName","field_of_study","fieldOfStudyCode","fieldOfStudyName","includes","groupedByDate","reduce","acc","item","date","push","combinedData","Object","keys","forEach","groupName","combinedKey","dates","Set","items","add","mergedData","headings","filter","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","marginBottom","Array","from","join","bordered","width","idx","audience_number","id","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/ProtectionSchedule/ViewProtectionScheduleTable.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nfunction ViewProtectionScheduleTable({ protection_schedule }) {\r\n  // Helper function to convert date format\r\n  const formatDate = (dateString) => {\r\n    const months = [\r\n      'января', 'февраля', 'марта', 'апреля', 'мая', 'июня',\r\n      'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'\r\n    ];\r\n    const day = dateString.slice(0, 2);\r\n    const month = months[parseInt(dateString.slice(2, 4), 10) - 1];\r\n    const year = dateString.slice(4, 8);\r\n    return `${day} ${month} ${year}`;\r\n  };\r\n\r\n  const generateHeading = (group) => {\r\n    const { name, speciality } = group;\r\n    const { code: specialityCode, name: specialityName, field_of_study } = speciality;\r\n    const { code: fieldOfStudyCode, name: fieldOfStudyName } = field_of_study;\r\n\r\n    if (name.includes('Б')) {\r\n      return `Бакалавры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\r\n    } else if (name.includes('М')) {\r\n      return `Магистры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\r\n    } else {\r\n      return `Группа ${name}`;\r\n    }\r\n  };\r\n\r\n  // Group by dates first, then by group names\r\n  const groupedByDate = protection_schedule.reduce((acc, item) => {\r\n    const date = item.date;\r\n    if (!acc[date]) {\r\n      acc[date] = [];\r\n    }\r\n    acc[date].push(item);\r\n    return acc;\r\n  }, {});\r\n\r\n  const combinedData = {};\r\n  Object.keys(groupedByDate).forEach((date) => {\r\n    groupedByDate[date].forEach((item) => {\r\n      const groupName = item.group.name;\r\n      const combinedKey = groupName;\r\n\r\n      if (!combinedData[combinedKey]) {\r\n        combinedData[combinedKey] = {\r\n          dates: new Set(),\r\n          items: []\r\n        };\r\n      }\r\n\r\n      combinedData[combinedKey].dates.add(date);\r\n      combinedData[combinedKey].items.push(item);\r\n    });\r\n  });\r\n\r\n  const mergedData = {};\r\n  Object.keys(combinedData).forEach((groupName) => {\r\n    combinedData[groupName].dates.forEach((date) => {\r\n      if (!mergedData[date]) {\r\n        mergedData[date] = {\r\n          headings: new Set(),\r\n          items: []\r\n        };\r\n      }\r\n      mergedData[date].headings.add(generateHeading(combinedData[groupName].items[0].group));\r\n      mergedData[date].items.push(...combinedData[groupName].items.filter(item => item.date === date));\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"mb-4 text-center\">График защит ВКР</h4>\r\n      {Object.keys(mergedData).map((date, index) => (\r\n        <div key={index} style={{ marginBottom: '20px' }}>\r\n          <h6>{Array.from(mergedData[date].headings).join(\"; \")}</h6>\r\n          <Table bordered style={{ width: '100%' }}>\r\n            <thead>\r\n              <tr>\r\n                <th>ПП</th>\r\n                <th>Дата</th>\r\n                <th>Время</th>\r\n                <th>Аудитория</th>\r\n                <th>Уч. группа</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {mergedData[date].items.map((item, idx) => (\r\n                <tr key={item.id}>\r\n                  <td>{idx + 1}</td>\r\n                  <td>{formatDate(item.date)}</td>\r\n                  <td>9:00</td>\r\n                  <td>{item.audience_number}</td>\r\n                  <td>{item.group.name}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewProtectionScheduleTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}