{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react project\\\\client\\\\src\\\\components\\\\Tables\\\\SecretaryTableData\\\\SecretaryHugeTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useTable, useFilters } from 'react-table';\nimport * as XLSX from 'xlsx';\nimport { Button } from 'react-bootstrap';\nimport styles from '../../../container.module.css';\nimport Filter from '../Filter/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SecretaryHugeTable({\n  info_for_table\n}) {\n  _s();\n  const [tableData, setTableData] = useState(info_for_table.requests);\n  const [editableCell, setEditableCell] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const emptyRenderer = () => /*#__PURE__*/React.createElement(React.Fragment, null, \"\\xA0\");\n  const columns = React.useMemo(() => [{\n    Header: '№ п/п',\n    accessor: (row, index) => index + 1,\n    headerProps: {\n      rowSpan: 2\n    },\n    Filter: Filter,\n    id: 'number'\n  },\n  // (оставьте остальные столбцы без изменений, просто добавьте уникальный id для каждого)\n  {\n    Header: 'Фамилия, Имя, Отчество',\n    accessor: row => `${row.student.surname} ${row.student.name} ${row.student.patronymic}`,\n    Filter: Filter,\n    id: 'studentFullName'\n  }, {\n    Header: 'Тема диплома',\n    accessor: 'theme.name',\n    Filter: Filter,\n    id: 'themeName'\n  }, {\n    Header: 'Руководитель диплома',\n    accessor: row => `${row.teacher.surname} ${row.teacher.name} ${row.teacher.patronymic}`,\n    Filter: Filter,\n    id: 'teacherFullName'\n  }, {\n    Header: 'Консультант',\n    accessor: row => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\n    Filter: Filter,\n    id: 'consultantFullName'\n  }, {\n    Header: 'Рецензент',\n    accessor: row => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\n    Filter: Filter,\n    id: 'reviewerFullName'\n  }, {\n    Header: 'организация',\n    accessor: row => `${row.theme.organization.name} ${row.theme.organization.last_name_of_responsible} ${row.theme.organization.first_name_of_responsible} ${row.theme.organization.patronymic_name_of_responsible}\n         ${row.theme.organization.job_title_of_resposible} ${row.theme.organization.additional_information}`,\n    Filter: Filter,\n    id: 'organization'\n  }, {\n    Header: 'Телефон',\n    accessor: row => `${row.student.phone}`,\n    Filter: Filter,\n    id: 'phone'\n  }, {\n    Header: 'Email',\n    accessor: row => `${row.student.email}`,\n    Filter: Filter,\n    id: 'email'\n  }, {\n    Header: 'бюджет/платный',\n    accessor: row => `${row.student.basis_of_study}`,\n    Filter: Filter,\n    id: 'basisOfStudy'\n  }, {\n    Header: 'оценка на предзащите/ преддипломная практика',\n    accessor: row => `${row.preprotection_grade}`,\n    Filter: Filter,\n    id: 'preprotectionGrade'\n  }, {\n    Header: 'оценка на защите',\n    accessor: row => `${row.workProtecton.final_grade}`,\n    Filter: Filter,\n    id: 'finalGrade'\n  }, {\n    Header: 'дата рождения',\n    accessor: row => `${row.student.date_of_birth}`,\n    Filter: Filter,\n    id: 'dateOfBirth'\n  }, {\n    Header: 'год окончания предыдущ образования',\n    accessor: row => `${row.student.year_of_prev_education_completion}`,\n    Filter: Filter,\n    id: 'yearOfPrevEducationCompletion'\n  }, {\n    Header: 'форма предыдущего образования',\n    accessor: row => `${row.student.form_of_prev_education}`,\n    Filter: Filter,\n    id: 'formOfPrevEducation'\n  }, {\n    Header: 'год поступления',\n    accessor: row => `${row.student.year_of_admission}`,\n    Filter: Filter,\n    id: 'yearOfAdmission'\n  }, {\n    Header: 'особые отметки',\n    accessor: row => `${row.student.special_marks}`,\n    Filter: Filter,\n    id: 'specialMarks'\n  }, {\n    Header: 'вид ВКР',\n    accessor: row => `${row.type_of_fqw}`,\n    Filter: Filter,\n    id: 'typeOfFqw'\n  }, {\n    Header: 'ВКР по заявке',\n    accessor: row => `${row.theme.fqw_by_application}`,\n    Filter: Filter,\n    id: 'fqwByApplication'\n  }, {\n    Header: 'ВКР на англ. языке',\n    accessor: row => row.fqw_in_english ? 'да' : 'нет',\n    Filter: Filter,\n    id: 'fqwInEnglish'\n  }, {\n    Header: 'ВКР рекомендовано',\n    accessor: row => `${row.fqw_recommended}`,\n    Filter: Filter,\n    id: 'fqwRecommended'\n  }, {\n    Header: 'наличие спец. условий',\n    accessor: row => row.special_conditions ? 'да' : 'нет',\n    Filter: Filter,\n    id: 'specialConditions'\n  }, {\n    Header: 'приказы',\n    columns: [{\n      Header: 'допуск',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      id: 'permission'\n    }, {\n      Header: 'тема',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      id: 'theme'\n    }, {\n      Header: 'изменение темы',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      id: 'themeChange'\n    }, {\n      Header: 'рецензент',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      id: 'reviewer'\n    }, {\n      Header: 'отчисление',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      id: 'expulsion'\n    }, {\n      Header: 'с какого числа отчисление',\n      accessor: row => `${row.workProtecton.final_grade}`,\n      Filter: Filter,\n      id: 'expulsionDate'\n    }]\n  }, {\n    Header: 'отметки о выполнении',\n    columns: [{\n      Header: 'долги',\n      accessor: row => `${row.student.number_of_debts}`,\n      Filter: Filter,\n      id: 'debts'\n    }, {\n      Header: 'справка о выполнении уч. плана',\n      accessor: row => `${row.student.certificate_of_curriculum_completion}`,\n      Filter: Filter,\n      id: 'curriculumCompletion'\n    }, {\n      Header: 'сдана зачетка',\n      accessor: row => `${row.student.record_book_submitted}`,\n      Filter: Filter,\n      id: 'recordBookSubmitted'\n    }, {\n      Header: 'сдана пояснительная записка',\n      accessor: row => row.explanatory_note_submitted ? 'да' : 'нет',\n      Filter: Filter,\n      id: 'explanatoryNoteSubmitted'\n    }, {\n      Header: 'красный диплом',\n      accessor: row => row.student.diploma_with_honors ? 'да' : 'нет',\n      Filter: Filter,\n      id: 'diplomaWithHonors'\n    }, {\n      Header: 'согласие на публикацию',\n      accessor: row => row.publication_agree ? 'да' : 'нет',\n      Filter: Filter,\n      id: 'publicationAgree'\n    }, {\n      Header: 'отзыв',\n      accessor: row => `${row.teacher_review}`,\n      Filter: Filter,\n      id: 'teacherReview'\n    }, {\n      Header: 'рецензия',\n      accessor: row => `${row.review}`,\n      Filter: Filter,\n      id: 'review'\n    }, {\n      Header: 'Акт о внедрении',\n      accessor: row => row.implementation_act ? 'да' : 'нет',\n      Filter: Filter,\n      id: 'implementationAct'\n    }, {\n      Header: 'отчет о плагиате',\n      accessor: row => row.plagarism_report ? row.plagarism_report : 'нет',\n      Filter: Filter,\n      id: 'plagiarismReport'\n    }, {\n      Header: 'заявление на последипломный отпуск',\n      accessor: row => row.student.application_for_postgraduate_vacation ? 'да' : 'нет',\n      Filter: Filter,\n      id: 'postgraduateVacationApplication'\n    }, {\n      Header: 'сведения о трудоустройстве',\n      accessor: row => row.student.employment_information ? 'да' : 'нет',\n      Filter: Filter,\n      id: 'employmentInformation'\n    }, {\n      Header: 'планируется ли продолжение обучения в ВУЗе',\n      accessor: row => row.student.plans_to_continue_education ? 'да' : 'нет',\n      Filter: Filter,\n      id: 'continueEducation'\n    }, {\n      Header: 'рекомендован к поступлению',\n      accessor: row => `${row.student.recommended_for_admission}`,\n      Filter: Filter,\n      id: 'recommendedForAdmission'\n    }]\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter\n  } = useTable({\n    columns,\n    data: tableData,\n    defaultColumn: {\n      Cell: emptyRenderer\n    }\n  }, useFilters);\n  const handleDoubleClick = (rowIndex, columnId) => {\n    setEditableCell({\n      rowIndex,\n      columnId\n    });\n  };\n  const toggleColumnVisibility = columnId => {\n    if (hiddenColumns.includes(columnId)) {\n      setHiddenColumns(hiddenColumns.filter(id => id !== columnId));\n    } else {\n      setHiddenColumns([...hiddenColumns, columnId]);\n    }\n  };\n  const handleCellChange = (e, rowIndex, columnId) => {\n    const {\n      value\n    } = e.target;\n    const updatedData = tableData.map((row, index) => {\n      if (index === rowIndex) {\n        return {\n          ...row,\n          [columnId]: value\n        };\n      }\n      return row;\n    });\n    setTableData(updatedData);\n  };\n  const exportToExcel = () => {\n    const visibleColumns = headerGroups[0].headers.filter(column => !hiddenColumns.includes(column.id));\n    const headers = visibleColumns.map(column => column.Header);\n    const data = rows.map(row => visibleColumns.map(column => {\n      const cell = row.cells.find(cell => cell.column.id === column.id);\n      return cell ? cell.value : '';\n    }));\n    const wb = XLSX.utils.book_new();\n    const ws = XLSX.utils.aoa_to_sheet([headers, ...data]);\n    XLSX.utils.book_append_sheet(wb, ws, 'Data');\n    XLSX.writeFile(wb, 'Data.xlsx');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mb-4 text-center\",\n      children: \"\\u0422\\u0430\\u0431\\u043B\\u0438\\u0446\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: exportToExcel,\n      className: \"mb-4\",\n      children: \"Export to Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      id: \"dataTable\",\n      className: styles.huge_table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            className: hiddenColumns.includes(column.id) ? styles.hidden : '',\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [column.render('Header'), column.canFilter && /*#__PURE__*/_jsxDEV(Filter, {\n                column: column\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleColumnVisibility(column.id),\n                children: hiddenColumns.includes(column.id) ? 'Показать' : 'Скрыть'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              const {\n                column\n              } = cell;\n              const isEditable = editableCell && editableCell.rowIndex === i && editableCell.columnId === column.id;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                onDoubleClick: () => handleDoubleClick(i, column.id),\n                children: isEditable ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: cell.value,\n                  onChange: e => handleCellChange(e, i, column.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 25\n                }, this) : cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 5\n  }, this);\n}\n_s(SecretaryHugeTable, \"nIMoRnI8fKkcVhenB+NDtfsxThY=\", false, function () {\n  return [useTable];\n});\n_c = SecretaryHugeTable;\nexport default SecretaryHugeTable;\nvar _c;\n$RefreshReg$(_c, \"SecretaryHugeTable\");","map":{"version":3,"names":["React","useState","useTable","useFilters","XLSX","Button","styles","Filter","jsxDEV","_jsxDEV","SecretaryHugeTable","info_for_table","_s","tableData","setTableData","requests","editableCell","setEditableCell","hiddenColumns","setHiddenColumns","emptyRenderer","createElement","Fragment","columns","useMemo","Header","accessor","row","index","headerProps","rowSpan","id","student","surname","name","patronymic","teacher","consultant","theme","organization","last_name_of_responsible","first_name_of_responsible","patronymic_name_of_responsible","job_title_of_resposible","additional_information","phone","email","basis_of_study","preprotection_grade","workProtecton","final_grade","date_of_birth","year_of_prev_education_completion","form_of_prev_education","year_of_admission","special_marks","type_of_fqw","fqw_by_application","fqw_in_english","fqw_recommended","special_conditions","number_of_debts","certificate_of_curriculum_completion","record_book_submitted","explanatory_note_submitted","diploma_with_honors","publication_agree","teacher_review","review","implementation_act","plagarism_report","application_for_postgraduate_vacation","employment_information","plans_to_continue_education","recommended_for_admission","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","data","defaultColumn","Cell","handleDoubleClick","rowIndex","columnId","toggleColumnVisibility","includes","filter","handleCellChange","e","value","target","updatedData","map","exportToExcel","visibleColumns","headers","column","cell","cells","find","wb","utils","book_new","ws","aoa_to_sheet","book_append_sheet","writeFile","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","huge_table","headerGroup","getHeaderGroupProps","getHeaderProps","hidden","render","canFilter","i","getRowProps","isEditable","getCellProps","onDoubleClick","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/react project/client/src/components/Tables/SecretaryTableData/SecretaryHugeTable.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useTable, useFilters } from 'react-table';\r\nimport * as XLSX from 'xlsx';\r\nimport { Button } from 'react-bootstrap';\r\nimport styles from '../../../container.module.css';\r\nimport Filter from '../Filter/Filter';\r\n\r\nfunction SecretaryHugeTable({ info_for_table }) {\r\n  const [tableData, setTableData] = useState(info_for_table.requests);\r\n  const [editableCell, setEditableCell] = useState(null);\r\n  const [hiddenColumns, setHiddenColumns] = useState([]);\r\n\r\n  const emptyRenderer = () => React.createElement(React.Fragment, null, \"\\xA0\");\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: '№ п/п',\r\n        accessor: (row, index) => index + 1,\r\n        headerProps: { rowSpan: 2 },\r\n        Filter: Filter,\r\n        id: 'number'\r\n      },\r\n      // (оставьте остальные столбцы без изменений, просто добавьте уникальный id для каждого)\r\n      {\r\n        Header: 'Фамилия, Имя, Отчество',\r\n        accessor: (row) => `${row.student.surname} ${row.student.name} ${row.student.patronymic}`,\r\n        Filter: Filter,\r\n        id: 'studentFullName'\r\n      },\r\n      {\r\n        Header: 'Тема диплома',\r\n        accessor: 'theme.name',\r\n        Filter: Filter,\r\n        id: 'themeName'\r\n      },\r\n      {\r\n        Header: 'Руководитель диплома',\r\n        accessor: (row) => `${row.teacher.surname} ${row.teacher.name} ${row.teacher.patronymic}`,\r\n        Filter: Filter,\r\n        id: 'teacherFullName'\r\n      },\r\n      {\r\n        Header: 'Консультант',\r\n        accessor: (row) => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\r\n        Filter: Filter,\r\n        id: 'consultantFullName'\r\n      },\r\n      {\r\n        Header: 'Рецензент',\r\n        accessor: (row) => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\r\n        Filter: Filter,\r\n        id: 'reviewerFullName'\r\n      },\r\n      {\r\n        Header: 'организация',\r\n        accessor: (row) => `${row.theme.organization.name} ${row.theme.organization.last_name_of_responsible} ${row.theme.organization.first_name_of_responsible} ${row.theme.organization.patronymic_name_of_responsible}\r\n         ${row.theme.organization.job_title_of_resposible} ${row.theme.organization.additional_information}`,\r\n        Filter: Filter,\r\n        id: 'organization'\r\n      },\r\n      {\r\n        Header: 'Телефон',\r\n        accessor: (row) => `${row.student.phone}`,\r\n        Filter: Filter,\r\n        id: 'phone'\r\n      },\r\n      {\r\n        Header: 'Email',\r\n        accessor: (row) => `${row.student.email}`,\r\n        Filter: Filter,\r\n        id: 'email'\r\n      },\r\n      {\r\n        Header: 'бюджет/платный',\r\n        accessor: (row) => `${row.student.basis_of_study}`,\r\n        Filter: Filter,\r\n        id: 'basisOfStudy'\r\n      },\r\n      {\r\n        Header: 'оценка на предзащите/ преддипломная практика',\r\n        accessor: (row) => `${row.preprotection_grade}`,\r\n        Filter: Filter,\r\n        id: 'preprotectionGrade'\r\n      },\r\n      {\r\n        Header: 'оценка на защите',\r\n        accessor: (row) => `${row.workProtecton.final_grade}`,\r\n        Filter: Filter,\r\n        id: 'finalGrade'\r\n      },\r\n      {\r\n        Header: 'дата рождения',\r\n        accessor: (row) => `${row.student.date_of_birth}`,\r\n        Filter: Filter,\r\n        id: 'dateOfBirth'\r\n      },\r\n      {\r\n        Header: 'год окончания предыдущ образования',\r\n        accessor: (row) => `${row.student.year_of_prev_education_completion}`,\r\n        Filter: Filter,\r\n        id: 'yearOfPrevEducationCompletion'\r\n      },\r\n      {\r\n        Header: 'форма предыдущего образования',\r\n        accessor: (row) => `${row.student.form_of_prev_education}`,\r\n        Filter: Filter,\r\n        id: 'formOfPrevEducation'\r\n      },\r\n      {\r\n        Header: 'год поступления',\r\n        accessor: (row) => `${row.student.year_of_admission}`,\r\n        Filter: Filter,\r\n        id: 'yearOfAdmission'\r\n      },\r\n      {\r\n        Header: 'особые отметки',\r\n        accessor: (row) => `${row.student.special_marks}`,\r\n        Filter: Filter,\r\n        id: 'specialMarks'\r\n      },\r\n      {\r\n        Header: 'вид ВКР',\r\n        accessor: (row) => `${row.type_of_fqw}`,\r\n        Filter: Filter,\r\n        id: 'typeOfFqw'\r\n      },\r\n      {\r\n        Header: 'ВКР по заявке',\r\n        accessor: (row) => `${row.theme.fqw_by_application}`,\r\n        Filter: Filter,\r\n        id: 'fqwByApplication'\r\n      },\r\n      {\r\n        Header: 'ВКР на англ. языке',\r\n        accessor: (row) => (row.fqw_in_english ? 'да' : 'нет'),\r\n        Filter: Filter,\r\n        id: 'fqwInEnglish'\r\n      },\r\n      {\r\n        Header: 'ВКР рекомендовано',\r\n        accessor: (row) => `${row.fqw_recommended}`,\r\n        Filter: Filter,\r\n        id: 'fqwRecommended'\r\n      },\r\n      {\r\n        Header: 'наличие спец. условий',\r\n        accessor: (row) => (row.special_conditions ? 'да' : 'нет'),\r\n        Filter: Filter,\r\n        id: 'specialConditions'\r\n      },\r\n      {\r\n        Header: 'приказы',\r\n        columns: [\r\n          {\r\n            Header: 'допуск',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            id: 'permission'\r\n          },\r\n          {\r\n            Header: 'тема',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            id: 'theme'\r\n          },\r\n          {\r\n            Header: 'изменение темы',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            id: 'themeChange'\r\n          },\r\n          {\r\n            Header: 'рецензент',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            id: 'reviewer'\r\n          },\r\n          {\r\n            Header: 'отчисление',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            id: 'expulsion'\r\n          },\r\n          {\r\n            Header: 'с какого числа отчисление',\r\n            accessor: (row) => `${row.workProtecton.final_grade}`,\r\n            Filter: Filter,\r\n            id: 'expulsionDate'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        Header: 'отметки о выполнении',\r\n        columns: [\r\n          {\r\n            Header: 'долги',\r\n            accessor: (row) => `${row.student.number_of_debts}`,\r\n            Filter: Filter,\r\n            id: 'debts'\r\n          },\r\n          {\r\n            Header: 'справка о выполнении уч. плана',\r\n            accessor: (row) => `${row.student.certificate_of_curriculum_completion}`,\r\n            Filter: Filter,\r\n            id: 'curriculumCompletion'\r\n          },\r\n          {\r\n            Header: 'сдана зачетка',\r\n            accessor: (row) => `${row.student.record_book_submitted}`,\r\n            Filter: Filter,\r\n            id: 'recordBookSubmitted'\r\n          },\r\n          {\r\n            Header: 'сдана пояснительная записка',\r\n            accessor: (row) => (row.explanatory_note_submitted ? 'да' : 'нет'),\r\n            Filter: Filter,\r\n            id: 'explanatoryNoteSubmitted'\r\n          },\r\n          {\r\n            Header: 'красный диплом',\r\n            accessor: (row) => (row.student.diploma_with_honors ? 'да' : 'нет'),\r\n            Filter: Filter,\r\n            id: 'diplomaWithHonors'\r\n          },\r\n          {\r\n            Header: 'согласие на публикацию',\r\n            accessor: (row) => (row.publication_agree ? 'да' : 'нет'),\r\n            Filter: Filter,\r\n            id: 'publicationAgree'\r\n          },\r\n          {\r\n            Header: 'отзыв',\r\n            accessor: (row) => `${row.teacher_review}`,\r\n            Filter: Filter,\r\n            id: 'teacherReview'\r\n          },\r\n          {\r\n            Header: 'рецензия',\r\n            accessor: (row) => `${row.review}`,\r\n            Filter: Filter,\r\n            id: 'review'\r\n          },\r\n          {\r\n            Header: 'Акт о внедрении',\r\n            accessor: (row) => (row.implementation_act ? 'да' : 'нет'),\r\n            Filter: Filter,\r\n            id: 'implementationAct'\r\n          },\r\n          {\r\n            Header: 'отчет о плагиате',\r\n            accessor: (row) => (row.plagarism_report ? row.plagarism_report : 'нет'),\r\n            Filter: Filter,\r\n            id: 'plagiarismReport'\r\n          },\r\n          {\r\n            Header: 'заявление на последипломный отпуск',\r\n            accessor: (row) => (row.student.application_for_postgraduate_vacation ? 'да' : 'нет'),\r\n            Filter: Filter,\r\n            id: 'postgraduateVacationApplication'\r\n          },\r\n          {\r\n            Header: 'сведения о трудоустройстве',\r\n            accessor: (row) => (row.student.employment_information ? 'да' : 'нет'),\r\n            Filter: Filter,\r\n            id: 'employmentInformation'\r\n          },\r\n          {\r\n            Header: 'планируется ли продолжение обучения в ВУЗе',\r\n            accessor: (row) => (row.student.plans_to_continue_education ? 'да' : 'нет'),\r\n            Filter: Filter,\r\n            id: 'continueEducation'\r\n          },\r\n          {\r\n            Header: 'рекомендован к поступлению',\r\n            accessor: (row) => `${row.student.recommended_for_admission}`,\r\n            Filter: Filter,\r\n            id: 'recommendedForAdmission'\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data: tableData,\r\n      defaultColumn: { Cell: emptyRenderer }\r\n    },\r\n    useFilters\r\n  );\r\n\r\n  const handleDoubleClick = (rowIndex, columnId) => {\r\n    setEditableCell({ rowIndex, columnId });\r\n  };\r\n\r\n  const toggleColumnVisibility = (columnId) => {\r\n    if (hiddenColumns.includes(columnId)) {\r\n      setHiddenColumns(hiddenColumns.filter(id => id !== columnId));\r\n    } else {\r\n      setHiddenColumns([...hiddenColumns, columnId]);\r\n    }\r\n  };\r\n\r\n  const handleCellChange = (e, rowIndex, columnId) => {\r\n    const { value } = e.target;\r\n    const updatedData = tableData.map((row, index) => {\r\n      if (index === rowIndex) {\r\n        return {\r\n          ...row,\r\n          [columnId]: value\r\n        };\r\n      }\r\n      return row;\r\n    });\r\n\r\n    setTableData(updatedData);\r\n  };\r\n\r\n  const exportToExcel = () => {\r\n    const visibleColumns = headerGroups[0].headers.filter(column => !hiddenColumns.includes(column.id));\r\n    const headers = visibleColumns.map(column => column.Header);\r\n    const data = rows.map(row =>\r\n      visibleColumns.map(column => {\r\n        const cell = row.cells.find(cell => cell.column.id === column.id);\r\n        return cell ? cell.value : '';\r\n      })\r\n    );\r\n\r\n    const wb = XLSX.utils.book_new();\r\n    const ws = XLSX.utils.aoa_to_sheet([headers, ...data]);\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Data');\r\n    XLSX.writeFile(wb, 'Data.xlsx');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4 className=\"mb-4 text-center\">Таблица данных</h4>\r\n      <Button onClick={exportToExcel} className=\"mb-4\">Export to Excel</Button>\r\n\r\n      <table {...getTableProps()} id=\"dataTable\" className={styles.huge_table}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th\r\n                  {...column.getHeaderProps()}\r\n                  className={hiddenColumns.includes(column.id) ? styles.hidden : ''}\r\n                >\r\n                  <div>\r\n                    {column.render('Header')}\r\n                    {column.canFilter && (\r\n                      <Filter column={column} />\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    <button onClick={() => toggleColumnVisibility(column.id)}>\r\n                      {hiddenColumns.includes(column.id) ? 'Показать' : 'Скрыть'}\r\n                    </button>\r\n                  </div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  const { column } = cell;\r\n                  const isEditable = editableCell && editableCell.rowIndex === i && editableCell.columnId === column.id;\r\n\r\n                  return (\r\n                    <td\r\n                      {...cell.getCellProps()}\r\n                      onDoubleClick={() => handleDoubleClick(i, column.id)}\r\n                    >\r\n                      {isEditable ? (\r\n                        <input\r\n                          type=\"text\"\r\n                          value={cell.value}\r\n                          onChange={e => handleCellChange(e, i, column.id)}\r\n                        />\r\n                      ) : (\r\n                        cell.render('Cell')\r\n                      )}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SecretaryHugeTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}