{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\Tables\\\\SecretaryTableData\\\\SecretaryHugeTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { useTable, useFilters } from 'react-table';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport styles from '../../../container.module.css';\nimport Filter from '../Filter/Filter';\nimport hide_cell from '../../../img/hide_cell.png';\nimport BlockInfo from '../../BlockInfo/BlockInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SecretaryHugeTable({\n  info_for_table\n}) {\n  _s();\n  const isFirstRowEmpty = data => {\n    return data.length > 0 && Object.values(data[0]).every(cell => cell === null || cell === '');\n  };\n  const [tableData, setTableData] = useState(() => {\n    // Remove the first row if it is empty\n    const data = info_for_table.requests;\n    if (isFirstRowEmpty(data)) {\n      return data.slice(1);\n    }\n    return data;\n  });\n  const [tableModified, setTableModified] = useState(false);\n  const [originalData] = useState(info_for_table.requests); // Store the original data\n  const [editableCell, setEditableCell] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [isColumnsModified, setIsColumnsModified] = useState(false);\n  const [editedCellValues, setEditedCellValues] = useState({});\n  const [isFiltered, setIsFiltered] = useState(false);\n  const columns = React.useMemo(() => [\n  // Define your columns here\n  // Example:\n  {\n    Header: 'Column 1',\n    accessor: 'column1',\n    Filter: Filter\n  }, {\n    Header: 'Column 2',\n    accessor: 'column2',\n    Filter: Filter\n  }\n  // Add more columns as needed\n  ], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    allColumns,\n    toggleHideColumn\n  } = useTable({\n    columns,\n    data: tableData\n  }, useFilters // Use the useFilters plugin hook\n  );\n  const handleClick = cell => {\n    if (editableCell && editableCell.rowIndex === cell.row.index && editableCell.columnId === cell.column.id) {\n      // If the clicked cell is already in edit mode, do nothing\n      return;\n    }\n    setEditableCell({\n      rowIndex: cell.row.index,\n      columnId: cell.column.id\n    });\n  };\n  const handleCellChange = (e, rowIndex, columnId) => {\n    const {\n      value\n    } = e.target;\n    setEditedCellValues(prevState => ({\n      ...prevState,\n      [`${rowIndex}-${columnId}`]: value\n    }));\n  };\n  const handleBlur = (rowIndex, columnId) => {\n    const editedValue = editedCellValues[`${rowIndex}-${columnId}`];\n    const updatedData = tableData.map((row, index) => {\n      if (index === rowIndex) {\n        return {\n          ...row,\n          [columnId]: editedValue !== undefined ? editedValue : row[columnId]\n        };\n      }\n      return row;\n    });\n    setTableData(updatedData);\n    setEditedCellValues({});\n    setEditableCell(null);\n    setTableModified(true);\n  };\n  const handleKeyDown = (e, rowIndex, columnId) => {\n    if (e.key === 'Enter') {\n      handleBlur(rowIndex, columnId);\n    }\n  };\n  useEffect(() => {\n    window.dispatchEvent(new Event('resize')); // Trigger resize event to adjust table layout\n  }, [tableData]);\n  const toggleColumnVisibility = columnId => {\n    const newHiddenColumns = hiddenColumns.includes(columnId) ? hiddenColumns.filter(id => id !== columnId) : [...hiddenColumns, columnId];\n    setHiddenColumns(newHiddenColumns);\n    toggleHideColumn(columnId);\n  };\n  useEffect(() => {\n    // Apply hidden columns when component mounts\n    setHiddenColumns([]);\n  }, []);\n  const exportToExcel = () => {\n    const tableClone = document.getElementById('dataTable').cloneNode(true);\n    const hiddenCells = tableClone.querySelectorAll(`.${styles.hidden}`);\n    hiddenCells.forEach(cell => cell.remove());\n    const ws = XLSX.utils.table_to_sheet(tableClone);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Data');\n    XLSX.writeFile(wb, 'Data.xlsx');\n  };\n  const resetTable = () => {\n    if (tableModified || hiddenColumns.length > 0 || isColumnsModified || isFiltered) {\n      setTableData(originalData);\n      setHiddenColumns([]);\n      setEditableCell(null);\n      setIsColumnsModified(false);\n      setEditedCellValues({});\n      hiddenColumns.forEach(columnId => {\n        toggleHideColumn(columnId);\n      });\n      setTableModified(false);\n      setIsFiltered(false);\n    }\n  };\n  const showOnlyColumnsByIndex = columnIndexesToShow => {\n    if (isColumnsModified) return;\n    const newHiddenColumns = allColumns.map((column, index) => columnIndexesToShow.includes(index) ? '' : column.id).filter(columnId => columnId !== '');\n    setHiddenColumns(newHiddenColumns);\n    newHiddenColumns.forEach(columnId => {\n      toggleHideColumn(columnId);\n    });\n    setIsColumnsModified(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mb-4 text-center\",\n      children: \"\\u0422\\u0430\\u0431\\u043B\\u0438\\u0446\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlockInfo, {\n      children: \"\\u0412\\u044B \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0444\\u0438\\u043B\\u044C\\u0442\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435, \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u044F \\u043A\\u043D\\u043E\\u043F\\u043A\\u0443-\\u0444\\u0438\\u043B\\u044C\\u0442\\u0440 \\u0432 \\u043D\\u0443\\u0436\\u043D\\u043E\\u0439 \\u044F\\u0447\\u0435\\u0439\\u043A\\u0435, \\u0430 \\u0442\\u0430\\u043A\\u0436\\u0435 \\u0441\\u043A\\u0440\\u044B\\u0432\\u0430\\u0442\\u044C \\u0441\\u0442\\u043E\\u043B\\u0431\\u0446\\u044B, \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u044F \\u043A\\u043D\\u043E\\u043F\\u043A\\u0443-\\u043A\\u0440\\u0435\\u0441\\u0442\\u0438\\u043A. \\u0413\\u043E\\u0442\\u043E\\u0432\\u044B\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043C\\u043E\\u0433\\u0443\\u0442 \\u0431\\u044B\\u0442\\u044C \\u044D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B \\u0432 \\u044D\\u043A\\u0441\\u0435\\u043B\\u044C. \\u0414\\u043B\\u044F \\u0443\\u0434\\u043E\\u0431\\u0441\\u0442\\u0432\\u0430 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u0431\\u044B\\u043B\\u0438 \\u0441\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u0435\\u043D\\u044B \\u0433\\u043E\\u0442\\u043E\\u0432\\u044B\\u0435 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0438. \\u0414\\u043B\\u044F \\u0442\\u043E\\u0433\\u043E \\u0447\\u0442\\u043E\\u0431\\u044B \\u0441\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A, \\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u043E \\u043D\\u0430\\u0436\\u0430\\u0442\\u044C \\u043D\\u0430 \\\"\\u0421\\u0431\\u0440\\u043E\\u0441\\\" \\u0438 \\u0432\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u044B\\u0439 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-3 ml-5\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"none\",\n          onClick: exportToExcel,\n          className: styles.export_button,\n          children: \"Export to Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"none\",\n          onClick: resetTable,\n          className: styles.reset_button,\n          children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), tableModified && /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: saveChanges,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"\\u0424\\u043E\\u0440\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0441\\u043F\\u0438\\u0441\\u043A\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"my-3 ml-5\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => showOnlyColumnsByIndex([0, 4, 9, 10, 11, 12, 13, 16, 17, 18, 19, 43]),\n          className: styles.button1,\n          children: \"\\u0412\\u043D\\u0443\\u0442\\u0440\\u0435\\u043D\\u043D\\u0438\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => showOnlyColumnsByIndex([0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15]),\n          className: styles.button1,\n          children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043D\\u0430 \\u0437\\u0430\\u0449\\u0438\\u0442\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => showOnlyColumnsByIndex([0, 4, 20, 39, 40, 41, 42]),\n          className: styles.button1,\n          children: \"\\u041E\\u0442\\u0447\\u0435\\u0442 \\u043F\\u0440\\u0435\\u0434\\u0441\\u0435\\u0434\\u0430\\u0442\\u0435\\u043B\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => showOnlyColumnsByIndex([0, 4, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]),\n          className: styles.button1,\n          children: \"\\u041A\\u043E\\u043D\\u0442\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => showOnlyColumnsByIndex([0, 4, 21, 22, 23, 24, 25, 26]),\n          className: styles.button1,\n          children: \"\\u041F\\u0440\\u0438\\u043A\\u0430\\u0437\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      id: \"dataTable\",\n      className: `${styles.huge_table} mb-3`,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            style: {\n              display: hiddenColumns.includes(column.id) ? 'none' : '',\n              position: 'relative',\n              paddingRight: '25px'\n            },\n            children: [column.render('Header'), column.canFilter && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                right: '0',\n                bottom: '0',\n                marginRight: '-15px',\n                marginBottom: '-9px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Filter, {\n                column: column\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 21\n            }, this), column.canFilter && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                right: '0',\n                top: '0',\n                marginRight: '-15px',\n                marginTop: '-10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"none\",\n                onClick: () => toggleColumnVisibility(column.id),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: hide_cell,\n                  width: 25,\n                  height: 25,\n                  alt: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map((row, rowIndex) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              className: `${styles.data_cell} ${hiddenColumns.includes(cell.column.id) ? styles.hidden : ''}`,\n              style: {\n                display: hiddenColumns.includes(cell.column.id) ? 'none' : '',\n                width: cell.column.width // Keep the cell width consistent\n              },\n              onClick: () => handleClick(cell),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                contentEditable: editableCell && editableCell.rowIndex === rowIndex && editableCell.columnId === cell.column.id,\n                onInput: e => handleCellChange(e, rowIndex, cell.column.id),\n                onKeyDown: e => handleKeyDown(e, rowIndex, cell.column.id),\n                onBlur: () => handleBlur(rowIndex, cell.column.id),\n                suppressContentEditableWarning: true,\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(SecretaryHugeTable, \"G8HeskfX5q9LohOuHvLmOq6KlAw=\", false, function () {\n  return [useTable];\n});\n_c = SecretaryHugeTable;\nexport default SecretaryHugeTable;\nvar _c;\n$RefreshReg$(_c, \"SecretaryHugeTable\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","useTable","useFilters","XLSX","saveAs","Button","Row","Col","styles","Filter","hide_cell","BlockInfo","jsxDEV","_jsxDEV","SecretaryHugeTable","info_for_table","_s","isFirstRowEmpty","data","length","Object","values","every","cell","tableData","setTableData","requests","slice","tableModified","setTableModified","originalData","editableCell","setEditableCell","hiddenColumns","setHiddenColumns","isColumnsModified","setIsColumnsModified","editedCellValues","setEditedCellValues","isFiltered","setIsFiltered","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","allColumns","toggleHideColumn","handleClick","rowIndex","row","index","columnId","column","id","handleCellChange","e","value","target","prevState","handleBlur","editedValue","updatedData","map","undefined","handleKeyDown","key","window","dispatchEvent","Event","toggleColumnVisibility","newHiddenColumns","includes","filter","exportToExcel","tableClone","document","getElementById","cloneNode","hiddenCells","querySelectorAll","hidden","forEach","remove","ws","utils","table_to_sheet","wb","book_new","book_append_sheet","writeFile","resetTable","showOnlyColumnsByIndex","columnIndexesToShow","children","className","fileName","_jsxFileName","lineNumber","columnNumber","md","variant","onClick","export_button","reset_button","saveChanges","button1","huge_table","headerGroup","getHeaderGroupProps","headers","getHeaderProps","style","display","position","paddingRight","render","canFilter","right","bottom","marginRight","marginBottom","top","marginTop","src","width","height","alt","getRowProps","cells","getCellProps","data_cell","contentEditable","onInput","onKeyDown","onBlur","suppressContentEditableWarning","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/Tables/SecretaryTableData/SecretaryHugeTable.js"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useTable, useFilters } from 'react-table';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport styles from '../../../container.module.css';\r\nimport Filter from '../Filter/Filter';\r\nimport hide_cell from '../../../img/hide_cell.png';\r\nimport BlockInfo from '../../BlockInfo/BlockInfo';\r\n\r\nfunction SecretaryHugeTable({ info_for_table }) {\r\n  const isFirstRowEmpty = (data) => {\r\n    return data.length > 0 && Object.values(data[0]).every((cell) => cell === null || cell === '');\r\n  };\r\n\r\n  const [tableData, setTableData] = useState(() => {\r\n    // Remove the first row if it is empty\r\n    const data = info_for_table.requests;\r\n    if (isFirstRowEmpty(data)) {\r\n      return data.slice(1);\r\n    }\r\n    return data;\r\n  });\r\n\r\n  const [tableModified, setTableModified] = useState(false);\r\n  const [originalData] = useState(info_for_table.requests); // Store the original data\r\n  const [editableCell, setEditableCell] = useState(null);\r\n  const [hiddenColumns, setHiddenColumns] = useState([]);\r\n  const [isColumnsModified, setIsColumnsModified] = useState(false);\r\n  const [editedCellValues, setEditedCellValues] = useState({});\r\n  const [isFiltered, setIsFiltered] = useState(false);\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      // Define your columns here\r\n      // Example:\r\n      {\r\n        Header: 'Column 1',\r\n        accessor: 'column1',\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Column 2',\r\n        accessor: 'column2',\r\n        Filter: Filter,\r\n      },\r\n      // Add more columns as needed\r\n    ],\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    allColumns,\r\n    toggleHideColumn,\r\n  } = useTable(\r\n    { columns, data: tableData },\r\n    useFilters // Use the useFilters plugin hook\r\n  );\r\n\r\n  const handleClick = (cell) => {\r\n    if (editableCell && editableCell.rowIndex === cell.row.index && editableCell.columnId === cell.column.id) {\r\n      // If the clicked cell is already in edit mode, do nothing\r\n      return;\r\n    }\r\n    setEditableCell({\r\n      rowIndex: cell.row.index,\r\n      columnId: cell.column.id,\r\n    });\r\n  };\r\n\r\n  const handleCellChange = (e, rowIndex, columnId) => {\r\n    const { value } = e.target;\r\n    setEditedCellValues((prevState) => ({\r\n      ...prevState,\r\n      [`${rowIndex}-${columnId}`]: value,\r\n    }));\r\n  };\r\n\r\n  const handleBlur = (rowIndex, columnId) => {\r\n    const editedValue = editedCellValues[`${rowIndex}-${columnId}`];\r\n    const updatedData = tableData.map((row, index) => {\r\n      if (index === rowIndex) {\r\n        return {\r\n          ...row,\r\n          [columnId]: editedValue !== undefined ? editedValue : row[columnId],\r\n        };\r\n      }\r\n      return row;\r\n    });\r\n    setTableData(updatedData);\r\n    setEditedCellValues({});\r\n    setEditableCell(null);\r\n    setTableModified(true);\r\n  };\r\n\r\n  const handleKeyDown = (e, rowIndex, columnId) => {\r\n    if (e.key === 'Enter') {\r\n      handleBlur(rowIndex, columnId);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.dispatchEvent(new Event('resize')); // Trigger resize event to adjust table layout\r\n  }, [tableData]);\r\n\r\n  const toggleColumnVisibility = (columnId) => {\r\n    const newHiddenColumns = hiddenColumns.includes(columnId)\r\n      ? hiddenColumns.filter((id) => id !== columnId)\r\n      : [...hiddenColumns, columnId];\r\n    setHiddenColumns(newHiddenColumns);\r\n    toggleHideColumn(columnId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Apply hidden columns when component mounts\r\n    setHiddenColumns([]);\r\n  }, []);\r\n\r\n  const exportToExcel = () => {\r\n    const tableClone = document.getElementById('dataTable').cloneNode(true);\r\n    const hiddenCells = tableClone.querySelectorAll(`.${styles.hidden}`);\r\n    hiddenCells.forEach((cell) => cell.remove());\r\n\r\n    const ws = XLSX.utils.table_to_sheet(tableClone);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Data');\r\n    XLSX.writeFile(wb, 'Data.xlsx');\r\n  };\r\n\r\n  const resetTable = () => {\r\n    if (tableModified || hiddenColumns.length > 0 || isColumnsModified || isFiltered) {\r\n      setTableData(originalData);\r\n      setHiddenColumns([]);\r\n      setEditableCell(null);\r\n      setIsColumnsModified(false);\r\n      setEditedCellValues({});\r\n      hiddenColumns.forEach((columnId) => {\r\n        toggleHideColumn(columnId);\r\n      });\r\n      setTableModified(false);\r\n      setIsFiltered(false);\r\n    }\r\n  };\r\n\r\n  const showOnlyColumnsByIndex = (columnIndexesToShow) => {\r\n    if (isColumnsModified) return;\r\n\r\n    const newHiddenColumns = allColumns.map((column, index) =>\r\n      columnIndexesToShow.includes(index) ? '' : column.id\r\n    ).filter(columnId => columnId !== '');\r\n    setHiddenColumns(newHiddenColumns);\r\n    newHiddenColumns.forEach((columnId) => {\r\n      toggleHideColumn(columnId);\r\n    });\r\n    setIsColumnsModified(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4 className=\"mb-4 text-center\">Таблица данных</h4>\r\n\r\n      <BlockInfo>\r\n        Вы можете фильтровать данные, используя кнопку-фильтр в нужной ячейке,\r\n        а также скрывать столбцы, используя кнопку-крестик. Готовые данные могут быть экспортированы в эксель.\r\n        Для удобства использования были составлены готовые списки. Для того чтобы сменить список, необходимо нажать на \"Сброс\" и выбрать необходимый список.\r\n      </BlockInfo>\r\n      <Row className='mb-3 ml-5'>\r\n        <Col md={3}>\r\n          <Button variant='none' onClick={exportToExcel} className={styles.export_button}>\r\n            Export to Excel\r\n          </Button>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Button variant='none' onClick={resetTable} className={styles.reset_button}>\r\n            Сброс\r\n          </Button>\r\n        </Col>\r\n        {tableModified && (\r\n          <Col md={3}>\r\n            <Button variant=\"primary\" onClick={saveChanges}>\r\n              Сохранить изменения\r\n            </Button>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n\r\n      <h5 >Формирование списков</h5>\r\n      <Row className='my-3 ml-5'>\r\n        <Col>\r\n      <Button onClick={() => showOnlyColumnsByIndex([0, 4, 9, 10, 11, 12, 13, 16, 17, 18, 19, 43])} className={styles.button1}>\r\n       Внутренние данные\r\n      </Button>\r\n      </Col>\r\n      <Col>\r\n      <Button onClick={() => showOnlyColumnsByIndex([0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, ])}  className={styles.button1}>\r\n       Список на защиту\r\n      </Button>\r\n      </Col>\r\n      <Col>\r\n      <Button onClick={() => showOnlyColumnsByIndex([0, 4, 20, 39, 40, 41, 42])}  className={styles.button1}>\r\n       Отчет председателя\r\n      </Button>\r\n      </Col>\r\n      <Col>\r\n      <Button onClick={() => showOnlyColumnsByIndex([0, 4, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38])}  className={styles.button1}>\r\n       Контроль\r\n      </Button>\r\n      </Col>\r\n      <Col>\r\n      <Button onClick={() => showOnlyColumnsByIndex([0, 4, 21, 22, 23, 24, 25, 26])}  className={styles.button1}>\r\n       Приказы\r\n      </Button>\r\n      </Col>\r\n      </Row>\r\n\r\n      <table {...getTableProps()} id=\"dataTable\" className={`${styles.huge_table} mb-3`}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th\r\n                  {...column.getHeaderProps()}\r\n                  style={{\r\n                    display: hiddenColumns.includes(column.id) ? 'none' : '',\r\n                    position: 'relative',\r\n                    paddingRight: '25px',\r\n                  }}\r\n                >\r\n                  {column.render('Header')}\r\n                  {column.canFilter && (\r\n                    <div\r\n                      style={{\r\n                        position: 'absolute',\r\n                        right: '0',\r\n                        bottom: '0',\r\n                        marginRight: '-15px',\r\n                        marginBottom: '-9px'\r\n                      }}\r\n                    >\r\n                      <Filter column={column} />\r\n                    </div>\r\n                  )}\r\n                  {column.canFilter && (\r\n                    <div\r\n                      style={{\r\n                        position: 'absolute',\r\n                        right: '0',\r\n                        top: '0',\r\n                        marginRight: '-15px',\r\n                        marginTop: '-10px'\r\n                      }}\r\n                    >\r\n                      <Button variant=\"none\" onClick={() => toggleColumnVisibility(column.id)}>\r\n                        <img src={hide_cell} width={25} height={25} alt=\"Скрыть\" />\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, rowIndex) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => (\r\n                  <td\r\n                    {...cell.getCellProps()}\r\n                    className={`${styles.data_cell} ${hiddenColumns.includes(cell.column.id) ? styles.hidden : ''}`}\r\n                    style={{ \r\n                      display: hiddenColumns.includes(cell.column.id) ? 'none' : '',\r\n                      width: cell.column.width // Keep the cell width consistent\r\n                    }}\r\n                    onClick={() => handleClick(cell)}\r\n                  >\r\n                    <div\r\n                      contentEditable={editableCell && editableCell.rowIndex === rowIndex && editableCell.columnId === cell.column.id}\r\n                      onInput={(e) => handleCellChange(e, rowIndex, cell.column.id)}\r\n                      onKeyDown={(e) => handleKeyDown(e, rowIndex, cell.column.id)}\r\n                      onBlur={() => handleBlur(rowIndex, cell.column.id)}\r\n                      suppressContentEditableWarning\r\n                    >\r\n                      {cell.render('Cell')}\r\n                    </div>\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SecretaryHugeTable;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}