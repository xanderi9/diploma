{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\ProtectionSchedule\\\\ViewProtectionSchedulePersons.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewProtectionSchedulePersons({\n  protection_schedule,\n  students_list_for_schedule\n}) {\n  // Функция для форматирования даты\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const options = {\n      day: 'numeric',\n      month: 'numeric',\n      year: 'numeric'\n    };\n    return date.toLocaleDateString('ru-RU', options);\n  };\n  const getFullName = studentData => {\n    if (studentData && studentData.student) {\n      const {\n        last_name,\n        first_name,\n        patronymic\n      } = studentData.student;\n      return `${last_name} ${first_name} ${patronymic}`;\n    } else {\n      return 'Unknown';\n    }\n  };\n\n  // Функция для получения группы по ID\n  const getGroupNameById = groupId => {\n    var _group$group;\n    const group = protection_schedule.find(item => {\n      var _item$group;\n      return ((_item$group = item.group) === null || _item$group === void 0 ? void 0 : _item$group.id) === groupId;\n    });\n    return group ? (_group$group = group.group) === null || _group$group === void 0 ? void 0 : _group$group.name : '';\n  };\n\n  // Группировка расписания по дням и группам\n  const groupedSchedule = protection_schedule.reduce((acc, item) => {\n    var _item$group2;\n    const dateKey = formatDate(item.date);\n    if (!acc[dateKey]) {\n      acc[dateKey] = {};\n    }\n    const groupName = getGroupNameById((_item$group2 = item.group) === null || _item$group2 === void 0 ? void 0 : _item$group2.id);\n    if (!acc[dateKey][groupName]) {\n      acc[dateKey][groupName] = [];\n    }\n    const students = students_list_for_schedule.filter(student => {\n      var _student$student, _student$student$grou, _item$group3;\n      return ((_student$student = student.student) === null || _student$student === void 0 ? void 0 : (_student$student$grou = _student$student.group) === null || _student$student$grou === void 0 ? void 0 : _student$student$grou.id) === ((_item$group3 = item.group) === null || _item$group3 === void 0 ? void 0 : _item$group3.id);\n    });\n    students.forEach(student => {\n      const fullName = getFullName(student);\n      acc[dateKey][groupName].push({\n        fullName,\n        group: groupName,\n        date: formatDate(item.date)\n      });\n    });\n    return acc;\n  }, {});\n\n  // Функция для ограничения студентов до 12 человек в день для каждой группы\n  const limitStudents = schedule => {\n    Object.keys(schedule).forEach(date => {\n      Object.keys(schedule[date]).forEach(group => {\n        const students = schedule[date][group];\n        if (students.length > 12) {\n          schedule[date][group] = students.slice(0, 12);\n        }\n      });\n    });\n    return schedule;\n  };\n\n  // Ограничиваем количество студентов до 12 человек в день для каждой группы\n  const limitedSchedule = limitStudents(groupedSchedule);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(limitedSchedule).map(([date, groups]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0424\\u0418\\u041E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0414\\u0430\\u0442\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(groups).map(([group, students]) => students.map((student, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.group\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 37\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_c = ViewProtectionSchedulePersons;\nexport default ViewProtectionSchedulePersons;\nvar _c;\n$RefreshReg$(_c, \"ViewProtectionSchedulePersons\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ViewProtectionSchedulePersons","protection_schedule","students_list_for_schedule","formatDate","dateString","date","Date","options","day","month","year","toLocaleDateString","getFullName","studentData","student","last_name","first_name","patronymic","getGroupNameById","groupId","_group$group","group","find","item","_item$group","id","name","groupedSchedule","reduce","acc","_item$group2","dateKey","groupName","students","filter","_student$student","_student$student$grou","_item$group3","forEach","fullName","push","limitStudents","schedule","Object","keys","length","slice","limitedSchedule","children","entries","map","groups","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/ProtectionSchedule/ViewProtectionSchedulePersons.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction ViewProtectionSchedulePersons({ protection_schedule, students_list_for_schedule }) {\r\n    // Функция для форматирования даты\r\n    const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        const options = { day: 'numeric', month: 'numeric', year: 'numeric' };\r\n        return date.toLocaleDateString('ru-RU', options);\r\n    };\r\n\r\n    const getFullName = (studentData) => {\r\n        if (studentData && studentData.student) {\r\n            const { last_name, first_name, patronymic } = studentData.student;\r\n            return `${last_name} ${first_name} ${patronymic}`;\r\n        } else {\r\n            return 'Unknown';\r\n        }\r\n    };\r\n    \r\n\r\n    // Функция для получения группы по ID\r\n    const getGroupNameById = (groupId) => {\r\n        const group = protection_schedule.find(item => item.group?.id === groupId);\r\n        return group ? group.group?.name : '';\r\n    };\r\n\r\n    // Группировка расписания по дням и группам\r\n    const groupedSchedule = protection_schedule.reduce((acc, item) => {\r\n        const dateKey = formatDate(item.date);\r\n        if (!acc[dateKey]) {\r\n            acc[dateKey] = {};\r\n        }\r\n        const groupName = getGroupNameById(item.group?.id);\r\n        if (!acc[dateKey][groupName]) {\r\n            acc[dateKey][groupName] = [];\r\n        }\r\n        const students = students_list_for_schedule.filter(student => student.student?.group?.id === item.group?.id);\r\n        students.forEach(student => {\r\n            const fullName = getFullName(student);\r\n            acc[dateKey][groupName].push({ fullName, group: groupName, date: formatDate(item.date) });\r\n        });\r\n        return acc;\r\n    }, {});\r\n\r\n    // Функция для ограничения студентов до 12 человек в день для каждой группы\r\n    const limitStudents = (schedule) => {\r\n        Object.keys(schedule).forEach(date => {\r\n            Object.keys(schedule[date]).forEach(group => {\r\n                const students = schedule[date][group];\r\n                if (students.length > 12) {\r\n                    schedule[date][group] = students.slice(0, 12);\r\n                }\r\n            });\r\n        });\r\n        return schedule;\r\n    };\r\n\r\n    // Ограничиваем количество студентов до 12 человек в день для каждой группы\r\n    const limitedSchedule = limitStudents(groupedSchedule);\r\n\r\n    return (\r\n        <div>\r\n            {Object.entries(limitedSchedule).map(([date, groups]) => (\r\n                <div key={date}>\r\n                    <h3>{date}</h3>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ФИО</th>\r\n                                <th>Группа</th>\r\n                                <th>Дата</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Object.entries(groups).map(([group, students]) => (\r\n                                students.map((student, index) => (\r\n                                    <tr key={index}>\r\n                                        <td>{student.fullName}</td>\r\n                                        <td>{student.group}</td>\r\n                                        <td>{student.date}</td>\r\n                                    </tr>\r\n                                ))\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewProtectionSchedulePersons;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,6BAA6BA,CAAC;EAAEC,mBAAmB;EAAEC;AAA2B,CAAC,EAAE;EACxF;EACA,MAAMC,UAAU,GAAIC,UAAU,IAAK;IAC/B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,MAAMG,OAAO,GAAG;MAAEC,GAAG,EAAE,SAAS;MAAEC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAU,CAAC;IACrE,OAAOL,IAAI,CAACM,kBAAkB,CAAC,OAAO,EAAEJ,OAAO,CAAC;EACpD,CAAC;EAED,MAAMK,WAAW,GAAIC,WAAW,IAAK;IACjC,IAAIA,WAAW,IAAIA,WAAW,CAACC,OAAO,EAAE;MACpC,MAAM;QAAEC,SAAS;QAAEC,UAAU;QAAEC;MAAW,CAAC,GAAGJ,WAAW,CAACC,OAAO;MACjE,OAAQ,GAAEC,SAAU,IAAGC,UAAW,IAAGC,UAAW,EAAC;IACrD,CAAC,MAAM;MACH,OAAO,SAAS;IACpB;EACJ,CAAC;;EAGD;EACA,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;IAAA,IAAAC,YAAA;IAClC,MAAMC,KAAK,GAAGpB,mBAAmB,CAACqB,IAAI,CAACC,IAAI;MAAA,IAAAC,WAAA;MAAA,OAAI,EAAAA,WAAA,GAAAD,IAAI,CAACF,KAAK,cAAAG,WAAA,uBAAVA,WAAA,CAAYC,EAAE,MAAKN,OAAO;IAAA,EAAC;IAC1E,OAAOE,KAAK,IAAAD,YAAA,GAAGC,KAAK,CAACA,KAAK,cAAAD,YAAA,uBAAXA,YAAA,CAAaM,IAAI,GAAG,EAAE;EACzC,CAAC;;EAED;EACA,MAAMC,eAAe,GAAG1B,mBAAmB,CAAC2B,MAAM,CAAC,CAACC,GAAG,EAAEN,IAAI,KAAK;IAAA,IAAAO,YAAA;IAC9D,MAAMC,OAAO,GAAG5B,UAAU,CAACoB,IAAI,CAAClB,IAAI,CAAC;IACrC,IAAI,CAACwB,GAAG,CAACE,OAAO,CAAC,EAAE;MACfF,GAAG,CAACE,OAAO,CAAC,GAAG,CAAC,CAAC;IACrB;IACA,MAAMC,SAAS,GAAGd,gBAAgB,EAAAY,YAAA,GAACP,IAAI,CAACF,KAAK,cAAAS,YAAA,uBAAVA,YAAA,CAAYL,EAAE,CAAC;IAClD,IAAI,CAACI,GAAG,CAACE,OAAO,CAAC,CAACC,SAAS,CAAC,EAAE;MAC1BH,GAAG,CAACE,OAAO,CAAC,CAACC,SAAS,CAAC,GAAG,EAAE;IAChC;IACA,MAAMC,QAAQ,GAAG/B,0BAA0B,CAACgC,MAAM,CAACpB,OAAO;MAAA,IAAAqB,gBAAA,EAAAC,qBAAA,EAAAC,YAAA;MAAA,OAAI,EAAAF,gBAAA,GAAArB,OAAO,CAACA,OAAO,cAAAqB,gBAAA,wBAAAC,qBAAA,GAAfD,gBAAA,CAAiBd,KAAK,cAAAe,qBAAA,uBAAtBA,qBAAA,CAAwBX,EAAE,QAAAY,YAAA,GAAKd,IAAI,CAACF,KAAK,cAAAgB,YAAA,uBAAVA,YAAA,CAAYZ,EAAE;IAAA,EAAC;IAC5GQ,QAAQ,CAACK,OAAO,CAACxB,OAAO,IAAI;MACxB,MAAMyB,QAAQ,GAAG3B,WAAW,CAACE,OAAO,CAAC;MACrCe,GAAG,CAACE,OAAO,CAAC,CAACC,SAAS,CAAC,CAACQ,IAAI,CAAC;QAAED,QAAQ;QAAElB,KAAK,EAAEW,SAAS;QAAE3B,IAAI,EAAEF,UAAU,CAACoB,IAAI,CAAClB,IAAI;MAAE,CAAC,CAAC;IAC7F,CAAC,CAAC;IACF,OAAOwB,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEN;EACA,MAAMY,aAAa,GAAIC,QAAQ,IAAK;IAChCC,MAAM,CAACC,IAAI,CAACF,QAAQ,CAAC,CAACJ,OAAO,CAACjC,IAAI,IAAI;MAClCsC,MAAM,CAACC,IAAI,CAACF,QAAQ,CAACrC,IAAI,CAAC,CAAC,CAACiC,OAAO,CAACjB,KAAK,IAAI;QACzC,MAAMY,QAAQ,GAAGS,QAAQ,CAACrC,IAAI,CAAC,CAACgB,KAAK,CAAC;QACtC,IAAIY,QAAQ,CAACY,MAAM,GAAG,EAAE,EAAE;UACtBH,QAAQ,CAACrC,IAAI,CAAC,CAACgB,KAAK,CAAC,GAAGY,QAAQ,CAACa,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;QACjD;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAOJ,QAAQ;EACnB,CAAC;;EAED;EACA,MAAMK,eAAe,GAAGN,aAAa,CAACd,eAAe,CAAC;EAEtD,oBACI5B,OAAA;IAAAiD,QAAA,EACKL,MAAM,CAACM,OAAO,CAACF,eAAe,CAAC,CAACG,GAAG,CAAC,CAAC,CAAC7C,IAAI,EAAE8C,MAAM,CAAC,kBAChDpD,OAAA;MAAAiD,QAAA,gBACIjD,OAAA;QAAAiD,QAAA,EAAK3C;MAAI;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACfxD,OAAA;QAAAiD,QAAA,gBACIjD,OAAA;UAAAiD,QAAA,eACIjD,OAAA;YAAAiD,QAAA,gBACIjD,OAAA;cAAAiD,QAAA,EAAI;YAAG;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACZxD,OAAA;cAAAiD,QAAA,EAAI;YAAM;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACfxD,OAAA;cAAAiD,QAAA,EAAI;YAAI;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACRxD,OAAA;UAAAiD,QAAA,EACKL,MAAM,CAACM,OAAO,CAACE,MAAM,CAAC,CAACD,GAAG,CAAC,CAAC,CAAC7B,KAAK,EAAEY,QAAQ,CAAC,KAC1CA,QAAQ,CAACiB,GAAG,CAAC,CAACpC,OAAO,EAAE0C,KAAK,kBACxBzD,OAAA;YAAAiD,QAAA,gBACIjD,OAAA;cAAAiD,QAAA,EAAKlC,OAAO,CAACyB;YAAQ;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3BxD,OAAA;cAAAiD,QAAA,EAAKlC,OAAO,CAACO;YAAK;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxBxD,OAAA;cAAAiD,QAAA,EAAKlC,OAAO,CAACT;YAAI;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAHlBC,KAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIV,CACP,CACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA,GArBFlD,IAAI;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAsBT,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACE,EAAA,GAvFQzD,6BAA6B;AAyFtC,eAAeA,6BAA6B;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}