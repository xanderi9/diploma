{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\ProtectionSchedule\\\\ViewProtectionScheduleTable.jsx\";\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ViewProtectionScheduleTable({\n  protection_schedule\n}) {\n  // Helper function to convert date format\n  const formatDate = dateString => {\n    const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\n    const day = dateString.slice(0, 2);\n    const month = months[parseInt(dateString.slice(2, 4), 10) - 1];\n    const year = dateString.slice(4, 8);\n    return `${day} ${month} ${year}`;\n  };\n  const generateHeading = group => {\n    const {\n      name,\n      speciality\n    } = group;\n    const {\n      code: specialityCode,\n      name: specialityName,\n      field_of_study\n    } = speciality;\n    const {\n      code: fieldOfStudyCode,\n      name: fieldOfStudyName\n    } = field_of_study;\n    if (name.includes('Б')) {\n      return `Бакалавры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\n    } else if (name.includes('М')) {\n      return `Магистры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\n    } else {\n      return `Группа ${name}`;\n    }\n  };\n\n  // Group the schedule by group name first\n  const groupedByGroupName = protection_schedule.reduce((acc, item) => {\n    const groupName = item.group.name;\n    if (!acc[groupName]) {\n      acc[groupName] = [];\n    }\n    acc[groupName].push(item);\n    return acc;\n  }, {});\n\n  // Merge the schedule items for each group\n  const mergedSchedule = Object.keys(groupedByGroupName).reduce((acc, groupName) => {\n    const groupSchedule = groupedByGroupName[groupName];\n    const dates = groupSchedule.map(item => item.date).sort();\n    dates.forEach(date => {\n      if (!acc[date]) {\n        acc[date] = {};\n      }\n      if (!acc[date][groupName]) {\n        acc[date][groupName] = [];\n      }\n      const itemsForDate = groupSchedule.filter(item => item.date === date);\n      acc[date][groupName] = acc[date][groupName].concat(itemsForDate);\n    });\n    return acc;\n  }, {});\n  const tableRows = [];\n  Object.keys(mergedSchedule).forEach(date => {\n    const formattedDate = formatDate(date);\n    Object.keys(mergedSchedule[date]).forEach(groupName => {\n      const groupItems = mergedSchedule[date][groupName];\n      const group = groupItems[0].group;\n      const heading = generateHeading(group);\n      tableRows.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: \"5\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: heading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, `${date}-${groupName}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this));\n      groupItems.forEach((item, index) => {\n        tableRows.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formattedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"9:00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.audience_number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: groupName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this));\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mb-4 text-center\",\n      children: \"\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A \\u0437\\u0430\\u0449\\u0438\\u0442 \\u0412\\u041A\\u0420\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041F\\u041F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0414\\u0430\\u0442\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0412\\u0440\\u0435\\u043C\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0410\\u0443\\u0434\\u0438\\u0442\\u043E\\u0440\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0423\\u0447. \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = ViewProtectionScheduleTable;\nexport default ViewProtectionScheduleTable;\nvar _c;\n$RefreshReg$(_c, \"ViewProtectionScheduleTable\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewProtectionScheduleTable","protection_schedule","formatDate","dateString","months","day","slice","month","parseInt","year","generateHeading","group","name","speciality","code","specialityCode","specialityName","field_of_study","fieldOfStudyCode","fieldOfStudyName","includes","groupedByGroupName","reduce","acc","item","groupName","push","mergedSchedule","Object","keys","groupSchedule","dates","map","date","sort","forEach","itemsForDate","filter","concat","tableRows","formattedDate","groupItems","heading","children","colSpan","fileName","_jsxFileName","lineNumber","columnNumber","index","audience_number","id","className","bordered","style","width","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/ProtectionSchedule/ViewProtectionScheduleTable.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nfunction ViewProtectionScheduleTable({ protection_schedule }) {\r\n  // Helper function to convert date format\r\n  const formatDate = (dateString) => {\r\n    const months = [\r\n      'января', 'февраля', 'марта', 'апреля', 'мая', 'июня',\r\n      'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'\r\n    ];\r\n    const day = dateString.slice(0, 2);\r\n    const month = months[parseInt(dateString.slice(2, 4), 10) - 1];\r\n    const year = dateString.slice(4, 8);\r\n    return `${day} ${month} ${year}`;\r\n  };\r\n\r\n  const generateHeading = (group) => {\r\n    const { name, speciality } = group;\r\n    const { code: specialityCode, name: specialityName, field_of_study } = speciality;\r\n    const { code: fieldOfStudyCode, name: fieldOfStudyName } = field_of_study;\r\n\r\n    if (name.includes('Б')) {\r\n      return `Бакалавры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\r\n    } else if (name.includes('М')) {\r\n      return `Магистры по специальности ${specialityCode} \"${specialityName}\" по программе ${fieldOfStudyCode} \"${fieldOfStudyName}\"`;\r\n    } else {\r\n      return `Группа ${name}`;\r\n    }\r\n  };\r\n\r\n  // Group the schedule by group name first\r\n  const groupedByGroupName = protection_schedule.reduce((acc, item) => {\r\n    const groupName = item.group.name;\r\n    if (!acc[groupName]) {\r\n      acc[groupName] = [];\r\n    }\r\n    acc[groupName].push(item);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Merge the schedule items for each group\r\n  const mergedSchedule = Object.keys(groupedByGroupName).reduce((acc, groupName) => {\r\n    const groupSchedule = groupedByGroupName[groupName];\r\n    const dates = groupSchedule.map(item => item.date).sort();\r\n    dates.forEach(date => {\r\n      if (!acc[date]) {\r\n        acc[date] = {};\r\n      }\r\n      if (!acc[date][groupName]) {\r\n        acc[date][groupName] = [];\r\n      }\r\n      const itemsForDate = groupSchedule.filter(item => item.date === date);\r\n      acc[date][groupName] = acc[date][groupName].concat(itemsForDate);\r\n    });\r\n    return acc;\r\n  }, {});\r\n\r\n  const tableRows = [];\r\n  Object.keys(mergedSchedule).forEach(date => {\r\n    const formattedDate = formatDate(date);\r\n    Object.keys(mergedSchedule[date]).forEach(groupName => {\r\n      const groupItems = mergedSchedule[date][groupName];\r\n      const group = groupItems[0].group;\r\n      const heading = generateHeading(group);\r\n      tableRows.push(\r\n        <tr key={`${date}-${groupName}`}>\r\n          <td colSpan=\"5\"><h6>{heading}</h6></td>\r\n        </tr>\r\n      );\r\n      groupItems.forEach((item, index) => {\r\n        tableRows.push(\r\n          <tr key={item.id}>\r\n            <td>{index + 1}</td>\r\n            <td>{formattedDate}</td>\r\n            <td>9:00</td>\r\n            <td>{item.audience_number}</td>\r\n            <td>{groupName}</td>\r\n          </tr>\r\n        );\r\n      });\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"mb-4 text-center\">График защит ВКР</h4>\r\n      <Table bordered style={{ width: '100%' }}>\r\n        <thead>\r\n          <tr>\r\n            <th>ПП</th>\r\n            <th>Дата</th>\r\n            <th>Время</th>\r\n            <th>Аудитория</th>\r\n            <th>Уч. группа</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableRows}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewProtectionScheduleTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}