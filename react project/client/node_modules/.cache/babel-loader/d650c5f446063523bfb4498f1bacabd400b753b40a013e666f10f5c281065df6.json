{"ast":null,"code":"import petrovich from 'petrovich';\nimport { saveAs } from 'file-saver';\nimport PizZip from 'pizzip';\nimport Docxtemplater from 'docxtemplater';\nimport JSZip from 'jszip';\nimport word from './protocol.docx';\nimport RussianNouns from 'russian-nouns-js';\nconst generateProtocolsFunction = async ({\n  composition_of_sec,\n  selectedGroup,\n  groupData,\n  requests,\n  group_list,\n  ei\n}) => {\n  console.log(requests);\n  console.log(groupData);\n  console.log(selectedGroup);\n  console.log('еи итог', ei);\n  const chairman = composition_of_sec.member_of_SEC.find(comp => comp.chairman_of_SEC === true);\n  const chairman_ei = composition_of_sec.employee_information.find(comp => comp.user_id === chairman.member_of_SEC.id);\n  const members_list = composition_of_sec.member_of_SEC.filter(sec => sec.chairman_of_SEC === false).map(member => {\n    const member_ei = composition_of_sec.employee_information.find(comp => comp.user_id === member.member_of_SEC.id);\n    const gender = member.member_of_SEC.gender === 'male' ? 'masculine' : 'feminine';\n    const placeOfWorkGenitive = member_ei.place_of_work ? declineWord(member_ei.place_of_work, gender) : '';\n    return {\n      ...member,\n      employee_information: {\n        ...member_ei,\n        place_of_work: placeOfWorkGenitive\n      }\n    };\n  });\n  const group = group_list.find(gr => gr.name === selectedGroup);\n  const rne = new RussianNouns.Engine();\n\n  // Function to decline the first word to the genitive case\n  const declineWord = (word, gender) => {\n    const firstWord = word.split(' ')[0];\n    const declinedFirstWord = rne.decline({\n      text: firstWord,\n      gender\n    }, 'родительный').text;\n    return word.replace(firstWord, declinedFirstWord);\n  };\n  // Функция для получения инициалов (Фамилия И.О.)\n  const getInitials = (firstName, patronymic) => {\n    return `${firstName.charAt(0)}. ${patronymic.charAt(0)}.`;\n  };\n\n  // Функция для форматирования даты\n  const formatDate = inputDate => {\n    const date = new Date(inputDate);\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    return `${day < 10 ? '0' + day : day}.${month < 10 ? '0' + month : month}.${year}`;\n  };\n  try {\n    // Загружаем шаблон документа\n    const response = await fetch(word); // Путь к вашему файлу шаблона\n    if (!response.ok) throw new Error('Ошибка сети');\n    const arrayBuffer = await response.arrayBuffer();\n\n    // Создаем инстанцию JSZip\n    const zip = new JSZip();\n\n    // Проходимся по каждому элементу groupData (предполагаем, что это массив)\n    for (const item of groupData) {\n      const student = item.user;\n      const full_name_student = {\n        last: student.last_name,\n        first: student.first_name,\n        middle: student.patronymic\n      };\n      let fullnameStudent = petrovich(full_name_student, 'accusative');\n      let fullnameStudentGen = petrovich(full_name_student, 'genitive');\n      let fullnameStudentDat = petrovich(full_name_student, 'dative');\n      fullnameStudent = `${fullnameStudent.last} ${fullnameStudent.first} ${fullnameStudent.middle}`;\n      fullnameStudentGen = `${fullnameStudentGen.last} ${fullnameStudentGen.first} ${fullnameStudentGen.middle}`;\n      fullnameStudentDat = `${fullnameStudentDat.last} ${fullnameStudentDat.first} ${fullnameStudentDat.middle}`;\n      const request = requests.request_list.find(req => req.student.username === student.username);\n      console.log(request);\n      if (!request) {\n        console.warn(`Для студента ${student.last_name} ${student.first_name} не найдена принятая заявка.`);\n        continue; // Пропускаем студента без принятой заявки\n      }\n      const personalProtection = requests.personal_work_protection_list.find(pp => pp.request === request.id);\n      console.log('защита персона', personalProtection);\n      if (!personalProtection) {\n        console.warn(`Для студента ${student.last_name} ${student.first_name} не найдена персональная защита.`);\n        continue; // Пропускаем студента без персональной защиты\n      }\n      const generalProtection = requests.general_work_protection_list.find(gp => gp.id === personalProtection.work_protection);\n      if (!generalProtection) {\n        console.warn(`Для студента ${student.last_name} ${student.first_name} не найдена общая защита.`);\n        continue; // Пропускаем студента без общей защиты\n      }\n      const teacher = request.teacher;\n      console.log('тичер', teacher);\n      const teacher_ei = ei.find(e => e.user_id === teacher.id);\n      console.log(teacher);\n      const theme = request.theme;\n\n      // Вычисляем время начала и окончания защиты\n      const [hours_start, min_start] = personalProtection.personal_time.split(':');\n      const startTime = new Date();\n      startTime.setHours(hours_start);\n      startTime.setMinutes(min_start);\n      startTime.setMinutes(startTime.getMinutes() + 20);\n      const hours_end = startTime.getHours();\n      const min_end = startTime.getMinutes();\n\n      // Формируем объект с данными для подстановки в шаблон\n      const dataToRender = {\n        protocol_number: personalProtection.protocol_number,\n        group_protection_date: new Date(generalProtection.date).toLocaleDateString('ru-RU'),\n        hours_start: hours_start,\n        min_start: min_start,\n        hours_end: hours_end,\n        min_end: min_end,\n        chairman_last_name: chairman.member_of_SEC.last_name,\n        chairman_np: getInitials(chairman.member_of_SEC.first_name, chairman.member_of_SEC.patronymic),\n        chairman_degree: chairman_ei.academic_degree,\n        chairman_job_title: chairman_ei.job_title,\n        members_list: members_list.map(member => ({\n          members_last_name: member.member_of_SEC.last_name,\n          members_np: getInitials(member.member_of_SEC.first_name, member.member_of_SEC.patronymic),\n          members_degree: member.employee_information.academic_degree ? member.employee_information.academic_degree : '',\n          members_job_title: member.employee_information.job_title,\n          members_place_of_work: member.employee_information.place_of_work ? member.employee_information.place_of_work : ''\n        })),\n        student_fullname: fullnameStudent,\n        specialityCode: group.specialty.code,\n        specialtityProgram: group.specialty.name,\n        theme: theme ? theme.name : '',\n        teacher_last_name: teacher.last_name,\n        teacher_np: getInitials(teacher.first_name, teacher.patronymic),\n        teacher_degree: teacher_ei.academic_degree,\n        teacher_job_title: teacher_ei.job_title,\n        reviewer_last_name: theme && theme.reviewer ? theme.reviewer.user.last_name : '',\n        reviewer_np: theme && theme.reviewer ? getInitials(theme.reviewer.user.first_name, theme.reviewer.user.patronymic) : '',\n        reviewer_degree: theme && theme.reviewer ? theme.reviewer.employee_information.academic_degree : '',\n        reviewer_job_title: theme && theme.reviewer ? theme.reviewer.employee_information.job_title : '',\n        student_last_name: student.last_name,\n        student_np: getInitials(student.first_name, student.patronymic),\n        secretary_last_name: localStorage.getItem('last_name'),\n        secretary_np: getInitials(localStorage.getItem('first_name'), localStorage.getItem('patronymic')),\n        duration: 20\n      };\n\n      // Создаем новую инстанцию Docxtemplater для каждого студента\n      const docZip = new PizZip(arrayBuffer);\n      const doc = new Docxtemplater(docZip);\n      doc.setData(dataToRender);\n      doc.render();\n\n      // Генерируем файл и добавляем его в архив\n      const output = doc.getZip().generate({\n        type: 'blob'\n      });\n      zip.file(`Протокол_${student.last_name}_${student.first_name}.docx`, output);\n    }\n\n    // Генерируем архив и сохраняем его\n    zip.generateAsync({\n      type: 'blob'\n    }).then(content => {\n      saveAs(content, `Протоколы_${selectedGroup}.zip`);\n    });\n  } catch (error) {\n    console.error('Ошибка загрузки файла:', error);\n  }\n};\nexport default generateProtocolsFunction;","map":{"version":3,"names":["petrovich","saveAs","PizZip","Docxtemplater","JSZip","word","RussianNouns","generateProtocolsFunction","composition_of_sec","selectedGroup","groupData","requests","group_list","ei","console","log","chairman","member_of_SEC","find","comp","chairman_of_SEC","chairman_ei","employee_information","user_id","id","members_list","filter","sec","map","member","member_ei","gender","placeOfWorkGenitive","place_of_work","declineWord","group","gr","name","rne","Engine","firstWord","split","declinedFirstWord","decline","text","replace","getInitials","firstName","patronymic","charAt","formatDate","inputDate","date","Date","day","getDate","month","getMonth","year","getFullYear","response","fetch","ok","Error","arrayBuffer","zip","item","student","user","full_name_student","last","last_name","first","first_name","middle","fullnameStudent","fullnameStudentGen","fullnameStudentDat","request","request_list","req","username","warn","personalProtection","personal_work_protection_list","pp","generalProtection","general_work_protection_list","gp","work_protection","teacher","teacher_ei","e","theme","hours_start","min_start","personal_time","startTime","setHours","setMinutes","getMinutes","hours_end","getHours","min_end","dataToRender","protocol_number","group_protection_date","toLocaleDateString","chairman_last_name","chairman_np","chairman_degree","academic_degree","chairman_job_title","job_title","members_last_name","members_np","members_degree","members_job_title","members_place_of_work","student_fullname","specialityCode","specialty","code","specialtityProgram","teacher_last_name","teacher_np","teacher_degree","teacher_job_title","reviewer_last_name","reviewer","reviewer_np","reviewer_degree","reviewer_job_title","student_last_name","student_np","secretary_last_name","localStorage","getItem","secretary_np","duration","docZip","doc","setData","render","output","getZip","generate","type","file","generateAsync","then","content","error"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/Forms/GenerateProtocols/GenerateProtocolFunction.js"],"sourcesContent":["import petrovich from 'petrovich';\r\nimport { saveAs } from 'file-saver';\r\nimport PizZip from 'pizzip';\r\nimport Docxtemplater from 'docxtemplater';\r\nimport JSZip from 'jszip';\r\nimport word from './protocol.docx';\r\nimport RussianNouns from 'russian-nouns-js';\r\n\r\nconst generateProtocolsFunction = async ({ \r\n    composition_of_sec, \r\n    selectedGroup,\r\n    groupData,\r\n\r\n    requests,\r\n    group_list, \r\n    ei\r\n}) => {\r\n    console.log(requests)\r\n    console.log(groupData)\r\n    console.log(selectedGroup)\r\n    console.log('еи итог', ei)\r\n\r\n    const chairman = composition_of_sec.member_of_SEC.find(comp => comp.chairman_of_SEC === true);\r\n    const chairman_ei = composition_of_sec.employee_information.find(comp => comp.user_id === chairman.member_of_SEC.id);\r\n    const members_list = composition_of_sec.member_of_SEC.filter(sec => sec.chairman_of_SEC === false).map(member => {\r\n        const member_ei = composition_of_sec.employee_information.find(comp => comp.user_id === member.member_of_SEC.id);\r\n        const gender = member.member_of_SEC.gender === 'male' ? 'masculine' : 'feminine';\r\n        const placeOfWorkGenitive = member_ei.place_of_work ? declineWord(member_ei.place_of_work, gender) : '';\r\n        return {\r\n            ...member,\r\n            employee_information: {\r\n                ...member_ei,\r\n                place_of_work: placeOfWorkGenitive\r\n            }\r\n        };\r\n    });\r\n    \r\n    const group = group_list.find(gr => gr.name === selectedGroup);\r\n    const rne = new RussianNouns.Engine();\r\n\r\n    // Function to decline the first word to the genitive case\r\n    const declineWord = (word, gender) => {\r\n        const firstWord = word.split(' ')[0];\r\n        const declinedFirstWord = rne.decline({ text: firstWord, gender }, 'родительный').text;\r\n        return word.replace(firstWord, declinedFirstWord);\r\n    };\r\n    // Функция для получения инициалов (Фамилия И.О.)\r\n    const getInitials = (firstName, patronymic) => {\r\n        return `${firstName.charAt(0)}. ${patronymic.charAt(0)}.`;\r\n    };\r\n\r\n    // Функция для форматирования даты\r\n    const formatDate = (inputDate) => {\r\n        const date = new Date(inputDate);\r\n        const day = date.getDate();\r\n        const month = date.getMonth() + 1;\r\n        const year = date.getFullYear();\r\n        return `${day < 10 ? '0' + day : day}.${month < 10 ? '0' + month : month}.${year}`;\r\n    };\r\n\r\n    try {\r\n        // Загружаем шаблон документа\r\n        const response = await fetch(word); // Путь к вашему файлу шаблона\r\n        if (!response.ok) throw new Error('Ошибка сети');\r\n        const arrayBuffer = await response.arrayBuffer();\r\n\r\n        // Создаем инстанцию JSZip\r\n        const zip = new JSZip();\r\n\r\n        // Проходимся по каждому элементу groupData (предполагаем, что это массив)\r\n        for (const item of groupData) {\r\n            const student = item.user;\r\n\r\n            const full_name_student = {\r\n                last: student.last_name,\r\n                first: student.first_name,\r\n                middle: student.patronymic,\r\n              };\r\n              let fullnameStudent = petrovich(full_name_student, 'accusative');\r\n              let fullnameStudentGen = petrovich(full_name_student, 'genitive');\r\n              let fullnameStudentDat = petrovich(full_name_student, 'dative');\r\n              fullnameStudent = `${fullnameStudent.last} ${fullnameStudent.first} ${fullnameStudent.middle}`;\r\n              fullnameStudentGen =`${fullnameStudentGen.last} ${fullnameStudentGen.first} ${fullnameStudentGen.middle}`;\r\n              fullnameStudentDat =`${fullnameStudentDat.last} ${fullnameStudentDat.first} ${fullnameStudentDat.middle}`;\r\n\r\n            const request = requests.request_list.find(req => req.student.username === student.username);\r\n            console.log(request);\r\n            if (!request) {\r\n                console.warn(`Для студента ${student.last_name} ${student.first_name} не найдена принятая заявка.`);\r\n                continue; // Пропускаем студента без принятой заявки\r\n            }\r\n\r\n            const personalProtection = requests.personal_work_protection_list.find(pp => pp.request === request.id);\r\n            console.log('защита персона', personalProtection);\r\n            if (!personalProtection) {\r\n                console.warn(`Для студента ${student.last_name} ${student.first_name} не найдена персональная защита.`);\r\n                continue; // Пропускаем студента без персональной защиты\r\n            }\r\n\r\n            const generalProtection = requests.general_work_protection_list.find(gp => gp.id === personalProtection.work_protection);\r\n\r\n            if (!generalProtection) {\r\n                console.warn(`Для студента ${student.last_name} ${student.first_name} не найдена общая защита.`);\r\n                continue; // Пропускаем студента без общей защиты\r\n            }\r\n\r\n            const teacher = request.teacher;\r\n            console.log('тичер', teacher);\r\n            const teacher_ei = ei.find(e => e.user_id === teacher.id);\r\n           \r\n            console.log(teacher);\r\n            const theme = request.theme;\r\n\r\n            // Вычисляем время начала и окончания защиты\r\n            const [hours_start, min_start] = personalProtection.personal_time.split(':');\r\n            const startTime = new Date();\r\n            startTime.setHours(hours_start);\r\n            startTime.setMinutes(min_start);\r\n            startTime.setMinutes(startTime.getMinutes() + 20);\r\n\r\n            const hours_end = startTime.getHours();\r\n            const min_end = startTime.getMinutes();\r\n\r\n            // Формируем объект с данными для подстановки в шаблон\r\n            const dataToRender = {\r\n                protocol_number: personalProtection.protocol_number,\r\n                group_protection_date: new Date(generalProtection.date).toLocaleDateString('ru-RU'),\r\n                hours_start: hours_start,\r\n                min_start: min_start,\r\n                hours_end: hours_end,\r\n                min_end: min_end,\r\n                chairman_last_name: chairman.member_of_SEC.last_name,\r\n                chairman_np: getInitials(chairman.member_of_SEC.first_name, chairman.member_of_SEC.patronymic),\r\n                chairman_degree: chairman_ei.academic_degree,\r\n                chairman_job_title: chairman_ei.job_title,\r\n                members_list: members_list.map(member => ({\r\n                    members_last_name: member.member_of_SEC.last_name,\r\n                    members_np: getInitials(member.member_of_SEC.first_name, member.member_of_SEC.patronymic),\r\n                    members_degree: member.employee_information.academic_degree? member.employee_information.academic_degree: '',\r\n                    members_job_title: member.employee_information.job_title,\r\n                    members_place_of_work: member.employee_information.place_of_work ? member.employee_information.place_of_work : '',\r\n                })),\r\n                student_fullname: fullnameStudent,\r\n                specialityCode: group.specialty.code,\r\n                specialtityProgram: group.specialty.name,\r\n                theme: theme ? theme.name : '',\r\n                teacher_last_name: teacher.last_name,\r\n                teacher_np: getInitials(teacher.first_name, teacher.patronymic),\r\n                teacher_degree: teacher_ei.academic_degree,\r\n                teacher_job_title: teacher_ei.job_title,\r\n                reviewer_last_name: theme && theme.reviewer ? theme.reviewer.user.last_name : '',\r\n                reviewer_np: theme && theme.reviewer ? getInitials(theme.reviewer.user.first_name, theme.reviewer.user.patronymic) : '',\r\n                reviewer_degree: theme && theme.reviewer ? theme.reviewer.employee_information.academic_degree : '',\r\n                reviewer_job_title: theme && theme.reviewer ? theme.reviewer.employee_information.job_title : '',\r\n                student_last_name: student.last_name,\r\n                student_np: getInitials(student.first_name, student.patronymic),\r\n\r\n                secretary_last_name: localStorage.getItem('last_name'),\r\n                secretary_np: getInitials(localStorage.getItem('first_name'), localStorage.getItem('patronymic')),\r\n\r\n                duration: 20,\r\n            };\r\n\r\n            // Создаем новую инстанцию Docxtemplater для каждого студента\r\n            const docZip = new PizZip(arrayBuffer);\r\n            const doc = new Docxtemplater(docZip);\r\n\r\n            doc.setData(dataToRender);\r\n            doc.render();\r\n\r\n            // Генерируем файл и добавляем его в архив\r\n            const output = doc.getZip().generate({ type: 'blob' });\r\n            zip.file(`Протокол_${student.last_name}_${student.first_name}.docx`, output);\r\n        }\r\n\r\n        // Генерируем архив и сохраняем его\r\n        zip.generateAsync({ type: 'blob' }).then((content) => {\r\n            saveAs(content, `Протоколы_${selectedGroup}.zip`);\r\n        });\r\n    } catch (error) {\r\n        console.error('Ошибка загрузки файла:', error);\r\n    }\r\n};\r\n\r\nexport default generateProtocolsFunction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}