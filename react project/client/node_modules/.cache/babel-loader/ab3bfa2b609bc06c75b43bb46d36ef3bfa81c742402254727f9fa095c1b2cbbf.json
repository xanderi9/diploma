{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\Forms\\\\CreateScheduleProtectionForm\\\\CreateScheduleProtectionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { Document, Packer, Paragraph, Table, TableRow, TableCell, HeadingLevel, AlignmentType, WidthType } from 'docx';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateScheduleProtectionForm = ({\n  groups_for_schedule,\n  students_list_for_schedule\n}) => {\n  _s();\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [dateStart, setDateStart] = useState('');\n  const [audienceNumber, setAudienceNumber] = useState('');\n  useEffect(() => {}, [groups_for_schedule]);\n  const toggleAll = event => {\n    const checkboxes = document.querySelectorAll('.nested-list input[type=\"checkbox\"]');\n    const isSelected = event.target.classList.contains('selected');\n    checkboxes.forEach(checkbox => {\n      checkbox.checked = !isSelected;\n    });\n    event.target.classList.toggle('selected');\n    updateSelectedItems();\n  };\n  const toggleSubList = (listId, event) => {\n    const list = document.getElementById(listId);\n    const toggleBtn = event.target;\n    if (list.style.display === 'none') {\n      list.style.display = 'block';\n      toggleBtn.textContent = toggleBtn.textContent.replace('[+]', '[-]');\n    } else {\n      list.style.display = 'none';\n      toggleBtn.textContent = toggleBtn.textContent.replace('[-]', '[+]');\n    }\n  };\n  const updateSelectedItems = () => {\n    const checkboxes = document.querySelectorAll('.nested-list input[type=\"checkbox\"]:checked');\n    const selected = [];\n    checkboxes.forEach(checkbox => {\n      const label = checkbox.nextElementSibling.textContent;\n      const groupName = label.split(' (')[0]; // Extract only group name without student count\n      selected.push(groupName);\n    });\n    setSelectedItems(selected);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    generateDocument();\n  };\n  if (!groups_for_schedule) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this);\n  }\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const options = {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    };\n    return date.toLocaleDateString('ru-RU', options);\n  };\n  const addWeekdays = (date, days) => {\n    const newDate = new Date(date);\n    let addedDays = 0;\n    while (addedDays < days) {\n      newDate.setDate(newDate.getDate() + 1);\n      if (newDate.getDay() !== 0 && newDate.getDay() !== 6) {\n        // Skip Saturday and Sunday\n        addedDays++;\n      }\n    }\n    return newDate;\n  };\n  const getStudentCount = groupId => {\n    return students_list_for_schedule.filter(student => student.student.group.id === groupId).length;\n  };\n  const generateDocument = () => {\n    const doc = new Document({\n      creator: \"YourAppName\",\n      title: \"Schedule Protection\",\n      description: \"Document with the schedule protection details\",\n      sections: [],\n      styles: {\n        paragraphStyles: [{\n          id: \"default\",\n          name: \"Default\",\n          basedOn: \"Normal\",\n          next: \"Normal\",\n          quickFormat: true,\n          run: {\n            font: \"Times New Roman\",\n            size: '12pt',\n            color: '000000'\n          }\n        }]\n      }\n    });\n    const documentTitle = new Paragraph({\n      text: \"Расписание защит кафедры СИИ ИКИТ СФУ\",\n      heading: HeadingLevel.HEADING_1,\n      alignment: AlignmentType.CENTER,\n      spacing: {\n        before: 240,\n        after: 240\n      },\n      style: 'default'\n    });\n    const combinedElements = [documentTitle];\n    let currentDate = new Date(dateStart);\n    selectedItems.forEach((groupName, index) => {\n      const group = groups_for_schedule.find(group => group.name === groupName);\n      if (!group || !group.speciality || !group.speciality.field_of_study) {\n        console.warn(`Skipping group due to missing data: ${groupName}`);\n        return;\n      }\n      let text;\n      if (groupName.includes('Б')) {\n        text = `Бакалавры по специальности ${group.speciality.code} \"${group.speciality.name}\" по специализированной магистерской программе ${group.speciality.field_of_study.code} \"${group.speciality.field_of_study.name}\"`;\n      } else if (groupName.includes('М')) {\n        text = `Магистры по специальности ${group.speciality.code} \"${group.speciality.name}\" по специализированной магистерской программе ${group.speciality.field_of_study.code} \"${group.speciality.field_of_study.name}\"`;\n      } else {\n        text = `Группа ${groupName}`;\n      }\n      const paragraphBeforeTable = new Paragraph({\n        text: text,\n        heading: HeadingLevel.HEADING_2,\n        alignment: AlignmentType.LEFT,\n        spacing: {\n          before: 240,\n          after: 240\n        },\n        style: 'default'\n      });\n      combinedElements.push(paragraphBeforeTable);\n      const createTableCell = (text, isBold = false) => {\n        return new TableCell({\n          children: [new Paragraph({\n            text: text,\n            run: {\n              bold: isBold\n            }\n          })],\n          margins: {\n            top: 100,\n            bottom: 100,\n            left: 100,\n            right: 100\n          }\n        });\n      };\n      const students = students_list_for_schedule.filter(student => student.student.group.id === group.id);\n      const rowsCount = Math.ceil(students.length / 12);\n      let rowCounter = 1;\n      const tableRows = [];\n      for (let i = 0; i < rowsCount; i++) {\n        currentDate = addWeekdays(currentDate, 1); // Add one workday\n        const formattedDate = formatDate(currentDate);\n        tableRows.push(new TableRow({\n          children: [createTableCell(i + 1, true), createTableCell(formattedDate, true), createTableCell('9:00', true), createTableCell(audienceNumber, true), createTableCell(groupName, true)]\n        }));\n        rowCounter++;\n      }\n      const table = new Table({\n        width: {\n          size: 100,\n          type: WidthType.PERCENTAGE\n        },\n        rows: [new TableRow({\n          children: [createTableCell(\"№\", true), createTableCell(\"Дата\", true), createTableCell(\"Время\", true), createTableCell(\"Аудитория\", true), createTableCell(\"Уч. группа\", true)]\n        }), ...tableRows]\n      });\n      combinedElements.push(table);\n    });\n    const section = {\n      properties: {\n        width: 15840,\n        height: 10000,\n        margins: {\n          top: 1440,\n          right: 1440,\n          bottom: 1440,\n          left: 1440\n        }\n      },\n      children: combinedElements\n    };\n    doc.addSection(section);\n    Packer.toBlob(doc).then(blob => {\n      saveAs(blob, \"schedule.docx\");\n    });\n  };\n  const processGroups = () => {\n    const groupedItems = selectedItems.reduce((acc, item) => {\n      const key = item.replace(/\\d+/g, '');\n      acc[key] = acc[key] || [];\n      acc[key].push(item);\n      return acc;\n    }, {});\n    const groupedKeys = Object.keys(groupedItems);\n    const processedGroups = [];\n    groupedKeys.forEach(key => {\n      const groups = groupedItems[key];\n      if (groups.length === 1) {\n        processedGroups.push(groups[0]);\n      } else {\n        let tempGroup = '';\n        groups.forEach(group => {\n          const studentsCount = getStudentCount(group.id);\n          if (studentsCount < 12) {\n            if (tempGroup === '') {\n              tempGroup = group;\n            } else {\n              processedGroups.push(`${tempGroup}, ${group}`);\n              tempGroup = '';\n            }\n          } else {\n            processedGroups.push(group);\n          }\n        });\n      }\n    });\n    setSelectedItems(processedGroups);\n  };\n  const processGroup = groupName => {\n    const studentsCount = getStudentCount(groupName);\n    if (studentsCount < 12) {\n      const relatedGroup = groups_for_schedule.find(group => group.name.includes(groupName.replace(/\\d+/g, '')) && group.name !== groupName);\n      if (relatedGroup) {\n        setSelectedItems([groupName, relatedGroup.name]);\n      }\n    } else {\n      setSelectedItems([groupName]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 7,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mb-4 text-center\",\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0433\\u0440\\u0430\\u0444\\u0438\\u043A\\u0430 \\u0437\\u0430\\u0449\\u0438\\u0442 \\u0412\\u041A\\u0420\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"px-4 py-2 m-2\",\n          onSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateScheduleProtectionForm, \"aFH3SuJy//lCwh39iCdErwVjeOU=\");\n_c = CreateScheduleProtectionForm;\nexport default CreateScheduleProtectionForm;\nvar _c;\n$RefreshReg$(_c, \"CreateScheduleProtectionForm\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Form","Button","Document","Packer","Paragraph","Table","TableRow","TableCell","HeadingLevel","AlignmentType","WidthType","saveAs","jsxDEV","_jsxDEV","CreateScheduleProtectionForm","groups_for_schedule","students_list_for_schedule","_s","selectedItems","setSelectedItems","dateStart","setDateStart","audienceNumber","setAudienceNumber","toggleAll","event","checkboxes","document","querySelectorAll","isSelected","target","classList","contains","forEach","checkbox","checked","toggle","updateSelectedItems","toggleSubList","listId","list","getElementById","toggleBtn","style","display","textContent","replace","selected","label","nextElementSibling","groupName","split","push","handleSubmit","preventDefault","generateDocument","children","fileName","_jsxFileName","lineNumber","columnNumber","formatDate","dateString","date","Date","options","day","month","year","toLocaleDateString","addWeekdays","days","newDate","addedDays","setDate","getDate","getDay","getStudentCount","groupId","filter","student","group","id","length","doc","creator","title","description","sections","styles","paragraphStyles","name","basedOn","next","quickFormat","run","font","size","color","documentTitle","text","heading","HEADING_1","alignment","CENTER","spacing","before","after","combinedElements","currentDate","index","find","speciality","field_of_study","console","warn","includes","code","paragraphBeforeTable","HEADING_2","LEFT","createTableCell","isBold","bold","margins","top","bottom","left","right","students","rowsCount","Math","ceil","rowCounter","tableRows","i","formattedDate","table","width","type","PERCENTAGE","rows","section","properties","height","addSection","toBlob","then","blob","processGroups","groupedItems","reduce","acc","item","key","groupedKeys","Object","keys","processedGroups","groups","tempGroup","studentsCount","processGroup","relatedGroup","className","md","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/Forms/CreateScheduleProtectionForm/CreateScheduleProtectionForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\nimport { Document, Packer, Paragraph, Table, TableRow, TableCell, HeadingLevel, AlignmentType, WidthType } from 'docx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst CreateScheduleProtectionForm = ({ groups_for_schedule, students_list_for_schedule }) => {\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n    const [dateStart, setDateStart] = useState('');\r\n    const [audienceNumber, setAudienceNumber] = useState('');\r\n\r\n    useEffect(() => {\r\n    }, [groups_for_schedule]);\r\n\r\n    const toggleAll = (event) => {\r\n        const checkboxes = document.querySelectorAll('.nested-list input[type=\"checkbox\"]');\r\n        const isSelected = event.target.classList.contains('selected');\r\n        checkboxes.forEach((checkbox) => {\r\n            checkbox.checked = !isSelected;\r\n        });\r\n        event.target.classList.toggle('selected');\r\n        updateSelectedItems();\r\n    };\r\n\r\n    const toggleSubList = (listId, event) => {\r\n        const list = document.getElementById(listId);\r\n        const toggleBtn = event.target;\r\n        if (list.style.display === 'none') {\r\n            list.style.display = 'block';\r\n            toggleBtn.textContent = toggleBtn.textContent.replace('[+]', '[-]');\r\n        } else {\r\n            list.style.display = 'none';\r\n            toggleBtn.textContent = toggleBtn.textContent.replace('[-]', '[+]');\r\n        }\r\n    };\r\n\r\n    const updateSelectedItems = () => {\r\n        const checkboxes = document.querySelectorAll('.nested-list input[type=\"checkbox\"]:checked');\r\n        const selected = [];\r\n        checkboxes.forEach((checkbox) => {\r\n            const label = checkbox.nextElementSibling.textContent;\r\n            const groupName = label.split(' (')[0]; // Extract only group name without student count\r\n            selected.push(groupName);\r\n        });\r\n        setSelectedItems(selected);\r\n    };\r\n    \r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        generateDocument();\r\n    };\r\n\r\n    if (!groups_for_schedule) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        const options = { day: 'numeric', month: 'long', year: 'numeric' };\r\n        return date.toLocaleDateString('ru-RU', options);\r\n    };\r\n\r\n    const addWeekdays = (date, days) => {\r\n        const newDate = new Date(date);\r\n        let addedDays = 0;\r\n        while (addedDays < days) {\r\n            newDate.setDate(newDate.getDate() + 1);\r\n            if (newDate.getDay() !== 0 && newDate.getDay() !== 6) { // Skip Saturday and Sunday\r\n                addedDays++;\r\n            }\r\n        }\r\n        return newDate;\r\n    };\r\n\r\n    const getStudentCount = (groupId) => {\r\n        return students_list_for_schedule.filter(student => student.student.group.id === groupId).length;\r\n    };\r\n\r\n    const generateDocument = () => {\r\n        const doc = new Document({\r\n            creator: \"YourAppName\",\r\n            title: \"Schedule Protection\",\r\n            description: \"Document with the schedule protection details\",\r\n            sections: [],\r\n            styles: {\r\n                paragraphStyles: [\r\n                    {\r\n                        id: \"default\",\r\n                        name: \"Default\",\r\n                        basedOn: \"Normal\",\r\n                        next: \"Normal\",\r\n                        quickFormat: true,\r\n                        run: {\r\n                            font: \"Times New Roman\",\r\n                            size: '12pt',\r\n                            color: '000000'\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        });\r\n\r\n        const documentTitle = new Paragraph({\r\n            text: \"Расписание защит кафедры СИИ ИКИТ СФУ\",\r\n            heading: HeadingLevel.HEADING_1,\r\n            alignment: AlignmentType.CENTER,\r\n            spacing: {\r\n                before: 240,\r\n                after: 240,\r\n            },\r\n            style: 'default'\r\n        });\r\n\r\n        const combinedElements = [documentTitle];\r\n\r\n        let currentDate = new Date(dateStart);\r\n\r\n        selectedItems.forEach((groupName, index) => {\r\n            const group = groups_for_schedule.find(group => group.name === groupName);\r\n\r\n            if (!group || !group.speciality || !group.speciality.field_of_study) {\r\n                console.warn(`Skipping group due to missing data: ${groupName}`);\r\n                return;\r\n            }\r\n\r\n            let text;\r\n            if (groupName.includes('Б')) {\r\n                text = `Бакалавры по специальности ${group.speciality.code} \"${group.speciality.name}\" по специализированной магистерской программе ${group.speciality.field_of_study.code} \"${group.speciality.field_of_study.name}\"`;\r\n            } else if (groupName.includes('М')) {\r\n                text = `Магистры по специальности ${group.speciality.code} \"${group.speciality.name}\" по специализированной магистерской программе ${group.speciality.field_of_study.code} \"${group.speciality.field_of_study.name}\"`;\r\n            } else {\r\n                text = `Группа ${groupName}`;\r\n            }\r\n\r\n            const paragraphBeforeTable = new Paragraph({\r\n                text: text,\r\n                heading: HeadingLevel.HEADING_2,\r\n                alignment: AlignmentType.LEFT,\r\n                spacing: {\r\n                    before: 240,\r\n                    after: 240,\r\n                },\r\n                style: 'default'\r\n            });\r\n\r\n            combinedElements.push(paragraphBeforeTable);\r\n\r\n            const createTableCell = (text, isBold = false) => {\r\n                return new TableCell({\r\n                    children: [\r\n                        new Paragraph({\r\n                            text: text,\r\n                            run: {\r\n                                bold: isBold,\r\n                            },\r\n                        }),\r\n                    ],\r\n                    margins: {\r\n                        top: 100,\r\n                        bottom: 100,\r\n                        left: 100,\r\n                        right: 100,\r\n                    },\r\n                });\r\n            };\r\n\r\n            const students = students_list_for_schedule.filter(student => student.student.group.id === group.id);\r\n            const rowsCount = Math.ceil(students.length / 12);\r\n\r\n            let rowCounter = 1;\r\n            const tableRows = [];\r\n            for (let i = 0; i < rowsCount; i++) {\r\n                currentDate = addWeekdays(currentDate, 1); // Add one workday\r\n                const formattedDate = formatDate(currentDate);\r\n                tableRows.push(\r\n                    new TableRow({\r\n                        children: [\r\n                            createTableCell(i + 1, true),\r\n                            createTableCell(formattedDate, true),\r\n                            createTableCell('9:00', true),\r\n                            createTableCell(audienceNumber, true),\r\n                            createTableCell(groupName, true),\r\n                        ],\r\n                    })\r\n                );\r\n                rowCounter++;\r\n            }\r\n\r\n            const table = new Table({\r\n                width: {\r\n                    size: 100,\r\n                    type: WidthType.PERCENTAGE,\r\n                },\r\n                rows: [\r\n                    new TableRow({\r\n                        children: [\r\n                            createTableCell(\"№\", true),\r\n                            createTableCell(\"Дата\", true),\r\n                            createTableCell(\"Время\", true),\r\n                            createTableCell(\"Аудитория\", true),\r\n                            createTableCell(\"Уч. группа\", true),\r\n                        ],\r\n                    }),\r\n                    ...tableRows,\r\n                ],\r\n            });\r\n\r\n            combinedElements.push(table);\r\n        });\r\n\r\n        const section = {\r\n            properties: {\r\n                width: 15840,\r\n                height: 10000,\r\n                margins: {\r\n                    top: 1440,\r\n                    right: 1440,\r\n                   \r\n                    bottom: 1440,\r\n                    left: 1440,\r\n                },\r\n            },\r\n            children: combinedElements,\r\n        };\r\n\r\n        doc.addSection(section);\r\n\r\n        Packer.toBlob(doc).then(blob => {\r\n            saveAs(blob, \"schedule.docx\");\r\n        });\r\n    };\r\n\r\n    const processGroups = () => {\r\n        const groupedItems = selectedItems.reduce((acc, item) => {\r\n            const key = item.replace(/\\d+/g, '');\r\n            acc[key] = acc[key] || [];\r\n            acc[key].push(item);\r\n            return acc;\r\n        }, {});\r\n\r\n        const groupedKeys = Object.keys(groupedItems);\r\n        const processedGroups = [];\r\n\r\n        groupedKeys.forEach(key => {\r\n            const groups = groupedItems[key];\r\n            if (groups.length === 1) {\r\n                processedGroups.push(groups[0]);\r\n            } else {\r\n                let tempGroup = '';\r\n                groups.forEach(group => {\r\n                    const studentsCount = getStudentCount(group.id);\r\n                    if (studentsCount < 12) {\r\n                        if (tempGroup === '') {\r\n                            tempGroup = group;\r\n                        } else {\r\n                            processedGroups.push(`${tempGroup}, ${group}`);\r\n                            tempGroup = '';\r\n                        }\r\n                    } else {\r\n                        processedGroups.push(group);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        setSelectedItems(processedGroups);\r\n    };\r\n\r\n    const processGroup = (groupName) => {\r\n        const studentsCount = getStudentCount(groupName);\r\n        if (studentsCount < 12) {\r\n            const relatedGroup = groups_for_schedule.find(group => group.name.includes(groupName.replace(/\\d+/g, '')) && group.name !== groupName);\r\n            if (relatedGroup) {\r\n                setSelectedItems([groupName, relatedGroup.name]);\r\n            }\r\n        } else {\r\n            setSelectedItems([groupName]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={7}>\r\n                    <h4 className=\"mb-4 text-center\">Создание графика защит ВКР</h4>\r\n                    <Form className=\"px-4 py-2 m-2\" onSubmit={handleSubmit}>\r\n                        {/* Form elements */}\r\n                    </Form>\r\n                </Col>\r\n                <Col md={4} className=\"mt-4\">\r\n                    <ol>\r\n                        {/* Instructions */}\r\n                    </ol>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CreateScheduleProtectionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}