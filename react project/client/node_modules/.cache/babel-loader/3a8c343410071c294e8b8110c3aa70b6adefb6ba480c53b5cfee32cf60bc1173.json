{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\Tables\\\\SecretaryTableData\\\\SecretaryHugeTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useTable, useFilters } from 'react-table';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport styles from '../../../container.module.css';\nimport Filter from '../Filter/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SecretaryHugeTable({\n  info_for_table\n}) {\n  _s();\n  const isFirstRowEmpty = data => {\n    return data.length > 0 && Object.values(data[0]).every(cell => cell === null || cell === '');\n  };\n  const [tableData, setTableData] = useState(() => {\n    const data = info_for_table.requests;\n    if (isFirstRowEmpty(data)) {\n      return data.slice(1);\n    }\n    return data;\n  });\n  const [originalData] = useState(info_for_table.requests); // Store the original data\n  const [editableCell, setEditableCell] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [isColumnsModified, setIsColumnsModified] = useState(false);\n  const columns = useMemo(() => [{\n    Header: '№ п/п',\n    accessor: (row, index) => index + 1,\n    Filter: Filter\n  }, {\n    Header: 'ср.б.',\n    accessor: 'student.average_score',\n    Filter: Filter\n  }, {\n    Header: 'номер протокола',\n    accessor: 'workProtecton.protocol_number',\n    Filter: Filter\n  }, {\n    Header: 'дата протокола',\n    accessor: 'workProtecton.date',\n    Filter: Filter\n  }, {\n    Header: 'Фамилия, Имя, Отчество',\n    accessor: row => `${row.student.surname} ${row.student.name} ${row.student.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Тема',\n    accessor: 'theme.name',\n    Filter: Filter\n  }, {\n    Header: 'Руководитель',\n    accessor: row => `${row.teacher.surname} ${row.teacher.name} ${row.teacher.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Консультант',\n    accessor: row => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Рецензент',\n    accessor: row => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'организация',\n    accessor: row => `${row.theme.company.name} ${row.theme.company.last_name_of_responsible} ${row.theme.company.first_name_of_responsible} ${row.theme.company.patronymic_name_of_responsible} ${row.theme.company.job_title_of_resposible} ${row.theme.company.additional_information}`,\n    Filter: Filter\n  }, {\n    Header: 'номер зачетки',\n    accessor: 'student.record_book_number',\n    Filter: Filter\n  }, {\n    Header: 'Телефон',\n    accessor: 'student.phone',\n    Filter: Filter\n  }, {\n    Header: 'Email',\n    accessor: 'student.email',\n    Filter: Filter\n  }, {\n    Header: 'бюджет/платный',\n    accessor: 'student.basis_of_study',\n    Filter: Filter\n  }, {\n    Header: 'оценка на предзащите/ преддипломная практика',\n    accessor: 'preprotection_grade',\n    Filter: Filter\n  }, {\n    Header: 'оценка на защите',\n    accessor: 'workProtecton.final_grade',\n    Filter: Filter\n  }, {\n    Header: 'дата рождения',\n    accessor: 'student.date_of_birth',\n    Filter: Filter\n  }, {\n    Header: 'год окончания предыдущ образования',\n    accessor: 'student.year_of_prev_education_completion',\n    Filter: Filter\n  }, {\n    Header: 'форма предыдущего образования',\n    accessor: 'student.form_of_prev_education',\n    Filter: Filter\n  }, {\n    Header: 'год поступления',\n    accessor: 'student.year_of_admission',\n    Filter: Filter\n  }, {\n    Header: 'особые отметки',\n    accessor: 'student.special_marks',\n    Filter: Filter\n  }, {\n    Header: 'приказы',\n    columns: [{\n      Header: 'допуск',\n      accessor: 'workProtecton.final_grade',\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'тема',\n      accessor: 'workProtecton.final_grade',\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'изменение темы',\n      accessor: 'workProtecton.final_grade',\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'рецензент',\n      accessor: 'workProtecton.final_grade',\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'отчисление',\n      accessor: 'workProtecton.final_grade',\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'с какого числа отчисление',\n      accessor: 'workProtecton.final_grade',\n      Filter: Filter,\n      isVisible: true\n    }]\n  }, {\n    Header: 'отметки о выполнении',\n    columns: [{\n      Header: 'долги',\n      accessor: 'student.number_of_debts',\n      Filter: Filter\n    }, {\n      Header: 'справка о выполнении уч. плана',\n      accessor: 'student.certificate_of_curriculum_completion',\n      Filter: Filter\n    }, {\n      Header: 'сдана зачетка',\n      accessor: 'student.record_book_submitted',\n      Filter: Filter\n    }, {\n      Header: 'сдана пояснительная записка',\n      accessor: row => row.explanatory_note_submitted ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'красный диплом',\n      accessor: row => row.student.diploma_with_honors ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'согласие на публикацию',\n      accessor: row => row.publication_agree ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'отзыв',\n      accessor: 'teacher_review',\n      Filter: Filter\n    }, {\n      Header: 'рецензия',\n      accessor: 'review',\n      Filter: Filter\n    }, {\n      Header: 'Акт о внедрении',\n      accessor: row => row.implementation_act ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'отчет о плагиате',\n      accessor: row => row.plagarism_report ? row.plagarism_report : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'заявление на последипломный отпуск',\n      accessor: row => row.student.application_for_postgraduate_leave ? row.student.application_for_postgraduate_leave : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'рекомендован к поступлению',\n      accessor: 'student.recommended_for_admission',\n      Filter: Filter\n    }]\n  }, {\n    Header: 'вид ВКР',\n    accessor: 'type_of_fqw',\n    Filter: Filter,\n    headerProps: {\n      rowSpan: 2\n    }\n  }, {\n    Header: 'ВКР по заявке',\n    accessor: 'theme.fqw_by_application',\n    Filter: Filter\n  }, {\n    Header: 'ВКР на англ. языке',\n    accessor: row => row.fqw_in_english ? 'да' : 'нет',\n    Filter: Filter\n  }, {\n    Header: 'ВКР рекомендовано',\n    accessor: 'recommended_fqw',\n    Filter: Filter\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setFilter,\n    allColumns,\n    toggleHideColumn\n  } = useTable({\n    columns,\n    data: tableData,\n    initialState: {\n      hiddenColumns: columns.filter(column => column.isVisible === false).map(column => column.accessor)\n    },\n    defaultColumn: {\n      Filter: ''\n    }\n  }, useFilters);\n  const handleCellEdit = (rowIndex, columnId, value) => {\n    const updatedData = tableData.map((row, index) => {\n      if (index === rowIndex) {\n        return {\n          ...row,\n          [columnId]: value\n        };\n      }\n      return row;\n    });\n    setTableData(updatedData);\n  };\n  const handleExportToExcel = () => {\n    const ws = XLSX.utils.json_to_sheet(tableData);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n    const excelBuffer = XLSX.write(wb, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    const data = new Blob([excelBuffer], {\n      type: 'application/octet-stream'\n    });\n    saveAs(data, 'tableData.xlsx');\n  };\n  useEffect(() => {\n    setTableData(info_for_table.requests);\n  }, [info_for_table.requests]);\n  useEffect(() => {\n    if (isColumnsModified) {\n      hiddenColumns.forEach(column => {\n        toggleHideColumn(column);\n      });\n      setIsColumnsModified(false);\n    }\n  }, [hiddenColumns, isColumnsModified, toggleHideColumn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        className: `table table-bordered ${styles.table}`,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(),\n              children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: column.canFilter ? column.render('Filter') : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map((row, rowIndex) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                onClick: () => setEditableCell({\n                  rowIndex,\n                  columnId: cell.column.id\n                }),\n                children: editableCell && editableCell.rowIndex === rowIndex && editableCell.columnId === cell.column.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: cell.value,\n                  onChange: e => handleCellEdit(rowIndex, cell.column.id, e.target.value),\n                  onBlur: () => setEditableCell(null),\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 25\n                }, this) : cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleExportToExcel,\n          variant: \"success\",\n          children: \"Export to Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setTableData(originalData),\n          variant: \"warning\",\n          children: \"Reset Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n}\n_s(SecretaryHugeTable, \"7xDnQONimLV0QH100JQrY5+a0ps=\", false, function () {\n  return [useTable];\n});\n_c = SecretaryHugeTable;\nexport default SecretaryHugeTable;\nvar _c;\n$RefreshReg$(_c, \"SecretaryHugeTable\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useTable","useFilters","XLSX","saveAs","Button","Row","Col","styles","Filter","jsxDEV","_jsxDEV","SecretaryHugeTable","info_for_table","_s","isFirstRowEmpty","data","length","Object","values","every","cell","tableData","setTableData","requests","slice","originalData","editableCell","setEditableCell","hiddenColumns","setHiddenColumns","isColumnsModified","setIsColumnsModified","columns","Header","accessor","row","index","student","surname","name","patronymic","teacher","consultant","theme","company","last_name_of_responsible","first_name_of_responsible","patronymic_name_of_responsible","job_title_of_resposible","additional_information","isVisible","explanatory_note_submitted","diploma_with_honors","publication_agree","implementation_act","plagarism_report","application_for_postgraduate_leave","headerProps","rowSpan","fqw_in_english","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","allColumns","toggleHideColumn","initialState","filter","column","map","defaultColumn","handleCellEdit","rowIndex","columnId","value","updatedData","handleExportToExcel","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","excelBuffer","write","bookType","type","Blob","forEach","children","className","table","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","canFilter","fileName","_jsxFileName","lineNumber","columnNumber","getRowProps","cells","getCellProps","onClick","id","onChange","e","target","onBlur","autoFocus","variant","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/Tables/SecretaryTableData/SecretaryHugeTable.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useTable, useFilters } from 'react-table';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport styles from '../../../container.module.css';\r\nimport Filter from '../Filter/Filter';\r\n\r\nfunction SecretaryHugeTable({ info_for_table }) {\r\n  const isFirstRowEmpty = (data) => {\r\n    return data.length > 0 && Object.values(data[0]).every((cell) => cell === null || cell === '');\r\n  };\r\n\r\n  const [tableData, setTableData] = useState(() => {\r\n    const data = info_for_table.requests;\r\n    if (isFirstRowEmpty(data)) {\r\n      return data.slice(1);\r\n    }\r\n    return data;\r\n  });\r\n\r\n  const [originalData] = useState(info_for_table.requests); // Store the original data\r\n  const [editableCell, setEditableCell] = useState(null);\r\n  const [hiddenColumns, setHiddenColumns] = useState([]);\r\n  const [isColumnsModified, setIsColumnsModified] = useState(false);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: '№ п/п',\r\n        accessor: (row, index) => index + 1,\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'ср.б.',\r\n        accessor: 'student.average_score',\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'номер протокола',\r\n        accessor: 'workProtecton.protocol_number',\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'дата протокола',\r\n        accessor: 'workProtecton.date',\r\n        Filter: Filter\r\n      },\r\n      {\r\n        Header: 'Фамилия, Имя, Отчество',\r\n        accessor: row => `${row.student.surname} ${row.student.name} ${row.student.patronymic}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Тема',\r\n        accessor: 'theme.name',\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Руководитель',\r\n        accessor: row => `${row.teacher.surname} ${row.teacher.name} ${row.teacher.patronymic}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Консультант',\r\n        accessor: row => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Рецензент',\r\n        accessor: row => `${row.consultant.surname} ${row.consultant.name} ${row.consultant.patronymic}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'организация',\r\n        accessor: row => `${row.theme.company.name} ${row.theme.company.last_name_of_responsible} ${row.theme.company.first_name_of_responsible} ${row.theme.company.patronymic_name_of_responsible} ${row.theme.company.job_title_of_resposible} ${row.theme.company.additional_information}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'номер зачетки',\r\n        accessor: 'student.record_book_number',\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Телефон',\r\n        accessor: 'student.phone',\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Email',\r\n        accessor: 'student.email',\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'бюджет/платный',\r\n        accessor: 'student.basis_of_study',\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'оценка на предзащите/ преддипломная практика',\r\n        accessor: 'preprotection_grade',\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'оценка на защите',\r\n        accessor: 'workProtecton.final_grade',\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'дата рождения',\r\n        accessor: 'student.date_of_birth',\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'год окончания предыдущ образования',\r\n        accessor: 'student.year_of_prev_education_completion',\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'форма предыдущего образования',\r\n        accessor: 'student.form_of_prev_education',\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'год поступления',\r\n        accessor: 'student.year_of_admission',\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'особые отметки',\r\n        accessor: 'student.special_marks',\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'приказы',\r\n        columns: [\r\n          {\r\n            Header: 'допуск',\r\n            accessor: 'workProtecton.final_grade',\r\n            Filter: Filter,\r\n            isVisible: true\r\n          },\r\n          {\r\n            Header: 'тема',\r\n            accessor: 'workProtecton.final_grade',\r\n            Filter: Filter,\r\n            isVisible: true\r\n          },\r\n          {\r\n            Header: 'изменение темы',\r\n            accessor: 'workProtecton.final_grade',\r\n            Filter: Filter,\r\n            isVisible: true\r\n          },\r\n          {\r\n            Header: 'рецензент',\r\n            accessor: 'workProtecton.final_grade',\r\n            Filter: Filter,\r\n            isVisible: true\r\n          },\r\n          {\r\n            Header: 'отчисление',\r\n            accessor: 'workProtecton.final_grade',\r\n            Filter: Filter,\r\n            isVisible: true\r\n          },\r\n          {\r\n            Header: 'с какого числа отчисление',\r\n            accessor: 'workProtecton.final_grade',\r\n            Filter: Filter,\r\n            isVisible: true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        Header: 'отметки о выполнении',\r\n        columns: [\r\n          {\r\n            Header: 'долги',\r\n            accessor: 'student.number_of_debts',\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'справка о выполнении уч. плана',\r\n            accessor: 'student.certificate_of_curriculum_completion',\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'сдана зачетка',\r\n            accessor: 'student.record_book_submitted',\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'сдана пояснительная записка',\r\n            accessor: row => (row.explanatory_note_submitted ? 'да' : 'нет'),\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'красный диплом',\r\n            accessor: row => (row.student.diploma_with_honors ? 'да' : 'нет'),\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'согласие на публикацию',\r\n            accessor: row => (row.publication_agree ? 'да' : 'нет'),\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'отзыв',\r\n            accessor: 'teacher_review',\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'рецензия',\r\n            accessor: 'review',\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'Акт о внедрении',\r\n            accessor: row => (row.implementation_act ? 'да' : 'нет'),\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'отчет о плагиате',\r\n            accessor: row => (row.plagarism_report ? row.plagarism_report : 'нет'),\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'заявление на последипломный отпуск',\r\n            accessor: row => (row.student.application_for_postgraduate_leave ? row.student.application_for_postgraduate_leave : 'нет'),\r\n            Filter: Filter\r\n          },\r\n          {\r\n            Header: 'рекомендован к поступлению',\r\n            accessor: 'student.recommended_for_admission',\r\n            Filter: Filter\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        Header: 'вид ВКР',\r\n        accessor: 'type_of_fqw',\r\n        Filter: Filter,\r\n        headerProps: { rowSpan: 2 },\r\n      },\r\n      {\r\n        Header: 'ВКР по заявке',\r\n        accessor: 'theme.fqw_by_application',\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'ВКР на англ. языке',\r\n        accessor: row => (row.fqw_in_english ? 'да' : 'нет'),\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'ВКР рекомендовано',\r\n        accessor: 'recommended_fqw',\r\n        Filter: Filter,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    setFilter,\r\n    allColumns,\r\n    toggleHideColumn\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data: tableData,\r\n      initialState: {\r\n        hiddenColumns: columns\r\n          .filter((column) => column.isVisible === false)\r\n          .map((column) => column.accessor),\r\n      },\r\n      defaultColumn: { Filter: '' },\r\n    },\r\n    useFilters\r\n  );\r\n\r\n  const handleCellEdit = (rowIndex, columnId, value) => {\r\n    const updatedData = tableData.map((row, index) => {\r\n      if (index === rowIndex) {\r\n        return {\r\n          ...row,\r\n          [columnId]: value,\r\n        };\r\n      }\r\n      return row;\r\n    });\r\n    setTableData(updatedData);\r\n  };\r\n\r\n  const handleExportToExcel = () => {\r\n    const ws = XLSX.utils.json_to_sheet(tableData);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], { type: 'application/octet-stream' });\r\n    saveAs(data, 'tableData.xlsx');\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTableData(info_for_table.requests);\r\n  }, [info_for_table.requests]);\r\n\r\n  useEffect(() => {\r\n    if (isColumnsModified) {\r\n      hiddenColumns.forEach((column) => {\r\n        toggleHideColumn(column);\r\n      });\r\n      setIsColumnsModified(false);\r\n    }\r\n  }, [hiddenColumns, isColumnsModified, toggleHideColumn]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"table-responsive\">\r\n        <table {...getTableProps()} className={`table table-bordered ${styles.table}`}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps()}>\r\n                    {column.render('Header')}\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, rowIndex) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => (\r\n                    <td\r\n                      {...cell.getCellProps()}\r\n                      onClick={() => setEditableCell({ rowIndex, columnId: cell.column.id })}\r\n                    >\r\n                      {editableCell &&\r\n                      editableCell.rowIndex === rowIndex &&\r\n                      editableCell.columnId === cell.column.id ? (\r\n                        <input\r\n                          type=\"text\"\r\n                          value={cell.value}\r\n                          onChange={(e) =>\r\n                            handleCellEdit(rowIndex, cell.column.id, e.target.value)\r\n                          }\r\n                          onBlur={() => setEditableCell(null)}\r\n                          autoFocus\r\n                        />\r\n                      ) : (\r\n                        cell.render('Cell')\r\n                      )}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <Row className=\"mt-3\">\r\n        <Col>\r\n          <Button onClick={handleExportToExcel} variant=\"success\">Export to Excel</Button>\r\n        </Col>\r\n        <Col>\r\n          <Button onClick={() => setTableData(originalData)} variant=\"warning\">Reset Table</Button>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SecretaryHugeTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,QAAQ,EAAEC,UAAU,QAAQ,aAAa;AAClD,OAAO,KAAKC,IAAI,MAAM,MAAM;AAC5B,SAASC,MAAM,QAAQ,YAAY;AACnC,SAASC,MAAM,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAClD,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,kBAAkBA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAMC,eAAe,GAAIC,IAAI,IAAK;IAChC,OAAOA,IAAI,CAACC,MAAM,GAAG,CAAC,IAAIC,MAAM,CAACC,MAAM,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC,CAACI,KAAK,CAAEC,IAAI,IAAKA,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,EAAE,CAAC;EAChG,CAAC;EAED,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,MAAM;IAC/C,MAAMkB,IAAI,GAAGH,cAAc,CAACW,QAAQ;IACpC,IAAIT,eAAe,CAACC,IAAI,CAAC,EAAE;MACzB,OAAOA,IAAI,CAACS,KAAK,CAAC,CAAC,CAAC;IACtB;IACA,OAAOT,IAAI;EACb,CAAC,CAAC;EAEF,MAAM,CAACU,YAAY,CAAC,GAAG5B,QAAQ,CAACe,cAAc,CAACW,QAAQ,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC+B,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMmC,OAAO,GAAGjC,OAAO,CACrB,MAAM,CACJ;IACEkC,MAAM,EAAE,OAAO;IACfC,QAAQ,EAAEA,CAACC,GAAG,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC;IACnC5B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,OAAO;IACfC,QAAQ,EAAE,uBAAuB;IACjC1B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,iBAAiB;IACzBC,QAAQ,EAAE,+BAA+B;IACzC1B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,gBAAgB;IACxBC,QAAQ,EAAE,oBAAoB;IAC9B1B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,wBAAwB;IAChCC,QAAQ,EAAEC,GAAG,IAAK,GAAEA,GAAG,CAACE,OAAO,CAACC,OAAQ,IAAGH,GAAG,CAACE,OAAO,CAACE,IAAK,IAAGJ,GAAG,CAACE,OAAO,CAACG,UAAW,EAAC;IACvFhC,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE,YAAY;IACtB1B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,cAAc;IACtBC,QAAQ,EAAEC,GAAG,IAAK,GAAEA,GAAG,CAACM,OAAO,CAACH,OAAQ,IAAGH,GAAG,CAACM,OAAO,CAACF,IAAK,IAAGJ,GAAG,CAACM,OAAO,CAACD,UAAW,EAAC;IACvFhC,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,aAAa;IACrBC,QAAQ,EAAEC,GAAG,IAAK,GAAEA,GAAG,CAACO,UAAU,CAACJ,OAAQ,IAAGH,GAAG,CAACO,UAAU,CAACH,IAAK,IAAGJ,GAAG,CAACO,UAAU,CAACF,UAAW,EAAC;IAChGhC,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,WAAW;IACnBC,QAAQ,EAAEC,GAAG,IAAK,GAAEA,GAAG,CAACO,UAAU,CAACJ,OAAQ,IAAGH,GAAG,CAACO,UAAU,CAACH,IAAK,IAAGJ,GAAG,CAACO,UAAU,CAACF,UAAW,EAAC;IAChGhC,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,aAAa;IACrBC,QAAQ,EAAEC,GAAG,IAAK,GAAEA,GAAG,CAACQ,KAAK,CAACC,OAAO,CAACL,IAAK,IAAGJ,GAAG,CAACQ,KAAK,CAACC,OAAO,CAACC,wBAAyB,IAAGV,GAAG,CAACQ,KAAK,CAACC,OAAO,CAACE,yBAA0B,IAAGX,GAAG,CAACQ,KAAK,CAACC,OAAO,CAACG,8BAA+B,IAAGZ,GAAG,CAACQ,KAAK,CAACC,OAAO,CAACI,uBAAwB,IAAGb,GAAG,CAACQ,KAAK,CAACC,OAAO,CAACK,sBAAuB,EAAC;IACtRzC,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,eAAe;IACvBC,QAAQ,EAAE,4BAA4B;IACtC1B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,SAAS;IACjBC,QAAQ,EAAE,eAAe;IACzB1B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,OAAO;IACfC,QAAQ,EAAE,eAAe;IACzB1B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,gBAAgB;IACxBC,QAAQ,EAAE,wBAAwB;IAClC1B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,8CAA8C;IACtDC,QAAQ,EAAE,qBAAqB;IAC/B1B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,kBAAkB;IAC1BC,QAAQ,EAAE,2BAA2B;IACrC1B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,eAAe;IACvBC,QAAQ,EAAE,uBAAuB;IACjC1B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,oCAAoC;IAC5CC,QAAQ,EAAE,2CAA2C;IACrD1B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,+BAA+B;IACvCC,QAAQ,EAAE,gCAAgC;IAC1C1B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,iBAAiB;IACzBC,QAAQ,EAAE,2BAA2B;IACrC1B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,gBAAgB;IACxBC,QAAQ,EAAE,uBAAuB;IACjC1B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,SAAS;IACjBD,OAAO,EAAE,CACP;MACEC,MAAM,EAAE,QAAQ;MAChBC,QAAQ,EAAE,2BAA2B;MACrC1B,MAAM,EAAEA,MAAM;MACd0C,SAAS,EAAE;IACb,CAAC,EACD;MACEjB,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE,2BAA2B;MACrC1B,MAAM,EAAEA,MAAM;MACd0C,SAAS,EAAE;IACb,CAAC,EACD;MACEjB,MAAM,EAAE,gBAAgB;MACxBC,QAAQ,EAAE,2BAA2B;MACrC1B,MAAM,EAAEA,MAAM;MACd0C,SAAS,EAAE;IACb,CAAC,EACD;MACEjB,MAAM,EAAE,WAAW;MACnBC,QAAQ,EAAE,2BAA2B;MACrC1B,MAAM,EAAEA,MAAM;MACd0C,SAAS,EAAE;IACb,CAAC,EACD;MACEjB,MAAM,EAAE,YAAY;MACpBC,QAAQ,EAAE,2BAA2B;MACrC1B,MAAM,EAAEA,MAAM;MACd0C,SAAS,EAAE;IACb,CAAC,EACD;MACEjB,MAAM,EAAE,2BAA2B;MACnCC,QAAQ,EAAE,2BAA2B;MACrC1B,MAAM,EAAEA,MAAM;MACd0C,SAAS,EAAE;IACb,CAAC;EAEL,CAAC,EACD;IACEjB,MAAM,EAAE,sBAAsB;IAC9BD,OAAO,EAAE,CACP;MACEC,MAAM,EAAE,OAAO;MACfC,QAAQ,EAAE,yBAAyB;MACnC1B,MAAM,EAAEA;IACV,CAAC,EACD;MACEyB,MAAM,EAAE,gCAAgC;MACxCC,QAAQ,EAAE,8CAA8C;MACxD1B,MAAM,EAAEA;IACV,CAAC,EACD;MACEyB,MAAM,EAAE,eAAe;MACvBC,QAAQ,EAAE,+BAA+B;MACzC1B,MAAM,EAAEA;IACV,CAAC,EACD;MACEyB,MAAM,EAAE,6BAA6B;MACrCC,QAAQ,EAAEC,GAAG,IAAKA,GAAG,CAACgB,0BAA0B,GAAG,IAAI,GAAG,KAAM;MAChE3C,MAAM,EAAEA;IACV,CAAC,EACD;MACEyB,MAAM,EAAE,gBAAgB;MACxBC,QAAQ,EAAEC,GAAG,IAAKA,GAAG,CAACE,OAAO,CAACe,mBAAmB,GAAG,IAAI,GAAG,KAAM;MACjE5C,MAAM,EAAEA;IACV,CAAC,EACD;MACEyB,MAAM,EAAE,wBAAwB;MAChCC,QAAQ,EAAEC,GAAG,IAAKA,GAAG,CAACkB,iBAAiB,GAAG,IAAI,GAAG,KAAM;MACvD7C,MAAM,EAAEA;IACV,CAAC,EACD;MACEyB,MAAM,EAAE,OAAO;MACfC,QAAQ,EAAE,gBAAgB;MAC1B1B,MAAM,EAAEA;IACV,CAAC,EACD;MACEyB,MAAM,EAAE,UAAU;MAClBC,QAAQ,EAAE,QAAQ;MAClB1B,MAAM,EAAEA;IACV,CAAC,EACD;MACEyB,MAAM,EAAE,iBAAiB;MACzBC,QAAQ,EAAEC,GAAG,IAAKA,GAAG,CAACmB,kBAAkB,GAAG,IAAI,GAAG,KAAM;MACxD9C,MAAM,EAAEA;IACV,CAAC,EACD;MACEyB,MAAM,EAAE,kBAAkB;MAC1BC,QAAQ,EAAEC,GAAG,IAAKA,GAAG,CAACoB,gBAAgB,GAAGpB,GAAG,CAACoB,gBAAgB,GAAG,KAAM;MACtE/C,MAAM,EAAEA;IACV,CAAC,EACD;MACEyB,MAAM,EAAE,oCAAoC;MAC5CC,QAAQ,EAAEC,GAAG,IAAKA,GAAG,CAACE,OAAO,CAACmB,kCAAkC,GAAGrB,GAAG,CAACE,OAAO,CAACmB,kCAAkC,GAAG,KAAM;MAC1HhD,MAAM,EAAEA;IACV,CAAC,EACD;MACEyB,MAAM,EAAE,4BAA4B;MACpCC,QAAQ,EAAE,mCAAmC;MAC7C1B,MAAM,EAAEA;IACV,CAAC;EAEL,CAAC,EACD;IACEyB,MAAM,EAAE,SAAS;IACjBC,QAAQ,EAAE,aAAa;IACvB1B,MAAM,EAAEA,MAAM;IACdiD,WAAW,EAAE;MAAEC,OAAO,EAAE;IAAE;EAC5B,CAAC,EACD;IACEzB,MAAM,EAAE,eAAe;IACvBC,QAAQ,EAAE,0BAA0B;IACpC1B,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,oBAAoB;IAC5BC,QAAQ,EAAEC,GAAG,IAAKA,GAAG,CAACwB,cAAc,GAAG,IAAI,GAAG,KAAM;IACpDnD,MAAM,EAAEA;EACV,CAAC,EACD;IACEyB,MAAM,EAAE,mBAAmB;IAC3BC,QAAQ,EAAE,iBAAiB;IAC3B1B,MAAM,EAAEA;EACV,CAAC,CACF,EACD,EACF,CAAC;EAED,MAAM;IACJoD,aAAa;IACbC,iBAAiB;IACjBC,YAAY;IACZC,IAAI;IACJC,UAAU;IACVC,SAAS;IACTC,UAAU;IACVC;EACF,CAAC,GAAGnE,QAAQ,CACV;IACEgC,OAAO;IACPjB,IAAI,EAAEM,SAAS;IACf+C,YAAY,EAAE;MACZxC,aAAa,EAAEI,OAAO,CACnBqC,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACpB,SAAS,KAAK,KAAK,CAAC,CAC9CqB,GAAG,CAAED,MAAM,IAAKA,MAAM,CAACpC,QAAQ;IACpC,CAAC;IACDsC,aAAa,EAAE;MAAEhE,MAAM,EAAE;IAAG;EAC9B,CAAC,EACDP,UACF,CAAC;EAED,MAAMwE,cAAc,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,KAAK;IACpD,MAAMC,WAAW,GAAGxD,SAAS,CAACkD,GAAG,CAAC,CAACpC,GAAG,EAAEC,KAAK,KAAK;MAChD,IAAIA,KAAK,KAAKsC,QAAQ,EAAE;QACtB,OAAO;UACL,GAAGvC,GAAG;UACN,CAACwC,QAAQ,GAAGC;QACd,CAAC;MACH;MACA,OAAOzC,GAAG;IACZ,CAAC,CAAC;IACFb,YAAY,CAACuD,WAAW,CAAC;EAC3B,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,EAAE,GAAG7E,IAAI,CAAC8E,KAAK,CAACC,aAAa,CAAC5D,SAAS,CAAC;IAC9C,MAAM6D,EAAE,GAAGhF,IAAI,CAAC8E,KAAK,CAACG,QAAQ,CAAC,CAAC;IAChCjF,IAAI,CAAC8E,KAAK,CAACI,iBAAiB,CAACF,EAAE,EAAEH,EAAE,EAAE,QAAQ,CAAC;IAC9C,MAAMM,WAAW,GAAGnF,IAAI,CAACoF,KAAK,CAACJ,EAAE,EAAE;MAAEK,QAAQ,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAAC;IACvE,MAAMzE,IAAI,GAAG,IAAI0E,IAAI,CAAC,CAACJ,WAAW,CAAC,EAAE;MAAEG,IAAI,EAAE;IAA2B,CAAC,CAAC;IAC1ErF,MAAM,CAACY,IAAI,EAAE,gBAAgB,CAAC;EAChC,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACdwB,YAAY,CAACV,cAAc,CAACW,QAAQ,CAAC;EACvC,CAAC,EAAE,CAACX,cAAc,CAACW,QAAQ,CAAC,CAAC;EAE7BzB,SAAS,CAAC,MAAM;IACd,IAAIgC,iBAAiB,EAAE;MACrBF,aAAa,CAAC8D,OAAO,CAAEpB,MAAM,IAAK;QAChCH,gBAAgB,CAACG,MAAM,CAAC;MAC1B,CAAC,CAAC;MACFvC,oBAAoB,CAAC,KAAK,CAAC;IAC7B;EACF,CAAC,EAAE,CAACH,aAAa,EAAEE,iBAAiB,EAAEqC,gBAAgB,CAAC,CAAC;EAExD,oBACEzD,OAAA;IAAAiF,QAAA,gBACEjF,OAAA;MAAKkF,SAAS,EAAC,kBAAkB;MAAAD,QAAA,eAC/BjF,OAAA;QAAA,GAAWkD,aAAa,CAAC,CAAC;QAAEgC,SAAS,EAAG,wBAAuBrF,MAAM,CAACsF,KAAM,EAAE;QAAAF,QAAA,gBAC5EjF,OAAA;UAAAiF,QAAA,EACG7B,YAAY,CAACS,GAAG,CAAEuB,WAAW,iBAC5BpF,OAAA;YAAA,GAAQoF,WAAW,CAACC,mBAAmB,CAAC,CAAC;YAAAJ,QAAA,EACtCG,WAAW,CAACE,OAAO,CAACzB,GAAG,CAAED,MAAM,iBAC9B5D,OAAA;cAAA,GAAQ4D,MAAM,CAAC2B,cAAc,CAAC,CAAC;cAAAN,QAAA,GAC5BrB,MAAM,CAAC4B,MAAM,CAAC,QAAQ,CAAC,eACxBxF,OAAA;gBAAAiF,QAAA,EAAMrB,MAAM,CAAC6B,SAAS,GAAG7B,MAAM,CAAC4B,MAAM,CAAC,QAAQ,CAAC,GAAG;cAAI;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5D,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eACR7F,OAAA;UAAA,GAAWmD,iBAAiB,CAAC,CAAC;UAAA8B,QAAA,EAC3B5B,IAAI,CAACQ,GAAG,CAAC,CAACpC,GAAG,EAAEuC,QAAQ,KAAK;YAC3BV,UAAU,CAAC7B,GAAG,CAAC;YACf,oBACEzB,OAAA;cAAA,GAAQyB,GAAG,CAACqE,WAAW,CAAC,CAAC;cAAAb,QAAA,EACtBxD,GAAG,CAACsE,KAAK,CAAClC,GAAG,CAAEnD,IAAI,iBAClBV,OAAA;gBAAA,GACMU,IAAI,CAACsF,YAAY,CAAC,CAAC;gBACvBC,OAAO,EAAEA,CAAA,KAAMhF,eAAe,CAAC;kBAAE+C,QAAQ;kBAAEC,QAAQ,EAAEvD,IAAI,CAACkD,MAAM,CAACsC;gBAAG,CAAC,CAAE;gBAAAjB,QAAA,EAEtEjE,YAAY,IACbA,YAAY,CAACgD,QAAQ,KAAKA,QAAQ,IAClChD,YAAY,CAACiD,QAAQ,KAAKvD,IAAI,CAACkD,MAAM,CAACsC,EAAE,gBACtClG,OAAA;kBACE8E,IAAI,EAAC,MAAM;kBACXZ,KAAK,EAAExD,IAAI,CAACwD,KAAM;kBAClBiC,QAAQ,EAAGC,CAAC,IACVrC,cAAc,CAACC,QAAQ,EAAEtD,IAAI,CAACkD,MAAM,CAACsC,EAAE,EAAEE,CAAC,CAACC,MAAM,CAACnC,KAAK,CACxD;kBACDoC,MAAM,EAAEA,CAAA,KAAMrF,eAAe,CAAC,IAAI,CAAE;kBACpCsF,SAAS;gBAAA;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC,GAEFnF,IAAI,CAAC8E,MAAM,CAAC,MAAM;cACnB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAET,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACN7F,OAAA,CAACL,GAAG;MAACuF,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnBjF,OAAA,CAACJ,GAAG;QAAAqF,QAAA,eACFjF,OAAA,CAACN,MAAM;UAACuG,OAAO,EAAE7B,mBAAoB;UAACoC,OAAO,EAAC,SAAS;UAAAvB,QAAA,EAAC;QAAe;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC,eACN7F,OAAA,CAACJ,GAAG;QAAAqF,QAAA,eACFjF,OAAA,CAACN,MAAM;UAACuG,OAAO,EAAEA,CAAA,KAAMrF,YAAY,CAACG,YAAY,CAAE;UAACyF,OAAO,EAAC,SAAS;UAAAvB,QAAA,EAAC;QAAW;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1F,EAAA,CArXQF,kBAAkB;EAAA,QAyQrBX,QAAQ;AAAA;AAAAmH,EAAA,GAzQLxG,kBAAkB;AAuX3B,eAAeA,kBAAkB;AAAC,IAAAwG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}