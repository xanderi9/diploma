{"ast":null,"code":"\"use strict\";\n\nexports.base64 = true;\nexports.array = true;\nexports.string = true;\nexports.arraybuffer = typeof ArrayBuffer !== \"undefined\" && typeof Uint8Array !== \"undefined\";\n// contains true if PizZip can read/generate nodejs Buffer, false otherwise.\n// Browserify will provide a Buffer implementation for browsers, which is\n// an augmented Uint8Array (i.e., can be used as either Buffer or U8).\nexports.nodebuffer = typeof Buffer !== \"undefined\";\n// contains true if PizZip can read/generate Uint8Array, false otherwise.\nexports.uint8array = typeof Uint8Array !== \"undefined\";\nif (typeof ArrayBuffer === \"undefined\") {\n  exports.blob = false;\n} else {\n  var buffer = new ArrayBuffer(0);\n  try {\n    exports.blob = new Blob([buffer], {\n      type: \"application/zip\"\n    }).size === 0;\n  } catch (e) {\n    try {\n      var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n      var builder = new Builder();\n      builder.append(buffer);\n      exports.blob = builder.getBlob(\"application/zip\").size === 0;\n    } catch (e) {\n      exports.blob = false;\n    }\n  }\n}","map":{"version":3,"names":["exports","base64","array","string","arraybuffer","ArrayBuffer","Uint8Array","nodebuffer","Buffer","uint8array","blob","buffer","Blob","type","size","e","Builder","window","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","builder","append","getBlob"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/react project/client/node_modules/pizzip/js/support.js"],"sourcesContent":["\"use strict\";\n\nexports.base64 = true;\nexports.array = true;\nexports.string = true;\nexports.arraybuffer = typeof ArrayBuffer !== \"undefined\" && typeof Uint8Array !== \"undefined\";\n// contains true if PizZip can read/generate nodejs Buffer, false otherwise.\n// Browserify will provide a Buffer implementation for browsers, which is\n// an augmented Uint8Array (i.e., can be used as either Buffer or U8).\nexports.nodebuffer = typeof Buffer !== \"undefined\";\n// contains true if PizZip can read/generate Uint8Array, false otherwise.\nexports.uint8array = typeof Uint8Array !== \"undefined\";\nif (typeof ArrayBuffer === \"undefined\") {\n  exports.blob = false;\n} else {\n  var buffer = new ArrayBuffer(0);\n  try {\n    exports.blob = new Blob([buffer], {\n      type: \"application/zip\"\n    }).size === 0;\n  } catch (e) {\n    try {\n      var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n      var builder = new Builder();\n      builder.append(buffer);\n      exports.blob = builder.getBlob(\"application/zip\").size === 0;\n    } catch (e) {\n      exports.blob = false;\n    }\n  }\n}"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,MAAM,GAAG,IAAI;AACrBD,OAAO,CAACE,KAAK,GAAG,IAAI;AACpBF,OAAO,CAACG,MAAM,GAAG,IAAI;AACrBH,OAAO,CAACI,WAAW,GAAG,OAAOC,WAAW,KAAK,WAAW,IAAI,OAAOC,UAAU,KAAK,WAAW;AAC7F;AACA;AACA;AACAN,OAAO,CAACO,UAAU,GAAG,OAAOC,MAAM,KAAK,WAAW;AAClD;AACAR,OAAO,CAACS,UAAU,GAAG,OAAOH,UAAU,KAAK,WAAW;AACtD,IAAI,OAAOD,WAAW,KAAK,WAAW,EAAE;EACtCL,OAAO,CAACU,IAAI,GAAG,KAAK;AACtB,CAAC,MAAM;EACL,IAAIC,MAAM,GAAG,IAAIN,WAAW,CAAC,CAAC,CAAC;EAC/B,IAAI;IACFL,OAAO,CAACU,IAAI,GAAG,IAAIE,IAAI,CAAC,CAACD,MAAM,CAAC,EAAE;MAChCE,IAAI,EAAE;IACR,CAAC,CAAC,CAACC,IAAI,KAAK,CAAC;EACf,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,IAAI;MACF,IAAIC,OAAO,GAAGC,MAAM,CAACC,WAAW,IAAID,MAAM,CAACE,iBAAiB,IAAIF,MAAM,CAACG,cAAc,IAAIH,MAAM,CAACI,aAAa;MAC7G,IAAIC,OAAO,GAAG,IAAIN,OAAO,CAAC,CAAC;MAC3BM,OAAO,CAACC,MAAM,CAACZ,MAAM,CAAC;MACtBX,OAAO,CAACU,IAAI,GAAGY,OAAO,CAACE,OAAO,CAAC,iBAAiB,CAAC,CAACV,IAAI,KAAK,CAAC;IAC9D,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVf,OAAO,CAACU,IAAI,GAAG,KAAK;IACtB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}