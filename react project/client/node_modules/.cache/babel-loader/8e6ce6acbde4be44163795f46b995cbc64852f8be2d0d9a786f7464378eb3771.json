{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\Tables\\\\SecretaryTableData\\\\SecretaryHugeTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { useTable, useFilters } from 'react-table';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport styles from '../../../container.module.css';\nimport Filter from '../Filter/Filter';\nimport hide_cell from '../../../img/hide_cell.png';\nimport BlockInfo from '../../BlockInfo/BlockInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SecretaryHugeTable({\n  info_for_table\n}) {\n  _s();\n  const [tableModified, setTableModified] = useState(false);\n  const [originalData, setOriginalData] = useState([]);\n  const [editableCell, setEditableCell] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [isColumnsModified, setIsColumnsModified] = useState(false);\n  const [isFiltered, setIsFiltered] = useState(false);\n  const isFirstRowEmpty = data => {\n    return data.length > 0 && Object.values(data[0]).every(cell => cell === null || cell === '');\n  };\n  useEffect(() => {\n    if (info_for_table) {\n      setOriginalData(info_for_table.request_list || []);\n      setTableData(info_for_table.request_list || []);\n    }\n  }, [info_for_table]);\n  const [tableData, setTableData] = useState(() => {\n    if (!info_for_table || !Array.isArray(info_for_table.request_list)) {\n      return [];\n    }\n    const data = [...info_for_table.request_list];\n    if (isFirstRowEmpty(data)) {\n      data.shift(); // Remove the first element if it is empty\n    }\n    const newData = data.map(request => {\n      const student = info_for_table.student_list.find(student => student.user.last_name === request.student.last_name);\n      const work_protection = info_for_table.personal_work_protection_list.find(wp => wp.request === request.id);\n      return {\n        ...request,\n        student,\n        work_protection\n      };\n    });\n    return newData;\n  });\n  const columns = useMemo(() => [{\n    Header: '№ п/п',\n    accessor: (row, index) => index + 1,\n    Filter: Filter\n  }, {\n    Header: 'ср.б.',\n    accessor: row => row.student.average_score,\n    Filter: Filter\n  }, {\n    Header: 'номер протокола',\n    accessor: row => row.work_protection && row.work_protection.protocol_number !== null ? row.work_protection.protocol_number : null,\n    Filter: Filter\n  }, {\n    Header: 'дата протокола',\n    accessor: row => row.work_protection && row.work_protection.date !== null ? row.work_protection.date : null,\n    Filter: Filter\n  }, {\n    Header: 'Фамилия, Имя, Отчество',\n    accessor: row => `${row.student.user.last_name} ${row.student.user.first_name} ${row.student.user.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Тема',\n    accessor: row => `${row.theme.name}`,\n    Filter: Filter\n  }, {\n    Header: 'Руководитель',\n    accessor: row => `${row.teacher.last_name} ${row.teacher.first_name} ${row.teacher.patronymic}`,\n    Filter: Filter\n  }, {\n    Header: 'Консультант',\n    accessor: row => row.consultant ? `${row.consultant.last_name} ${row.consultant.first_name} ${row.consultant.patronymic}` : '',\n    Filter: Filter\n  }, {\n    Header: 'Рецензент',\n    accessor: row => row.theme.reviewer ? `${row.theme.reviewer.last_name} ${row.theme.reviewer.first_name} ${row.theme.reviewer.patronymic}` : '',\n    Filter: Filter\n  }, {\n    Header: 'организация',\n    accessor: row => row.theme.company ? `${row.theme.company.name} ${row.theme.company.last_name_of_responsible} ${row.theme.company.first_name_of_responsible} ${row.theme.company.patronymic_name_of_responsible} ${row.theme.company.job_title_of_resposible} ${row.theme.company.additional_information}` : '',\n    Filter: Filter\n  }, {\n    Header: 'номер зачетки',\n    accessor: row => `${row.student.record_book_number}`,\n    Filter: Filter\n  }, {\n    Header: 'Телефон',\n    accessor: row => `${row.student.user.phone}`,\n    Filter: Filter\n  }, {\n    Header: 'Email',\n    accessor: row => `${row.student.user.email}`,\n    Filter: Filter\n  }, {\n    Header: 'бюджет/платный',\n    accessor: row => `${row.student.basis_of_study}`,\n    Filter: Filter\n  }, {\n    Header: 'оценка на предзащите/ преддипломная практика',\n    accessor: row => `${row.preprotection_grade}`,\n    Filter: Filter\n  }, {\n    Header: 'оценка на защите',\n    accessor: row => row.work_protection && row.work_protection.final_grade !== undefined ? `${row.work_protection.final_grade}` : '',\n    Filter: Filter\n  }, {\n    Header: 'дата рождения',\n    accessor: row => `${row.student.date_of_birth}`,\n    Filter: Filter\n  }, {\n    Header: 'год окончания предыдущ образования',\n    accessor: row => `${row.student.year_of_prev_education_completion}`,\n    Filter: Filter\n  }, {\n    Header: 'форма предыдущего образования',\n    accessor: row => `${row.student.form_of_prev_education}`,\n    Filter: Filter\n  }, {\n    Header: 'год поступления',\n    accessor: row => `${row.student.year_of_admission}`,\n    Filter: Filter\n  }, {\n    Header: 'особые отметки',\n    accessor: row => `${row.student.special_marks}`,\n    Filter: Filter\n  }, {\n    Header: 'приказы',\n    columns: [{\n      Header: 'допуск',\n      accessor: row => '',\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'тема',\n      accessor: row => '',\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'изменение темы',\n      accessor: row => '',\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'рецензент',\n      accessor: row => '',\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'отчисление',\n      accessor: row => '',\n      Filter: Filter,\n      isVisible: true\n    }, {\n      Header: 'с какого числа отчисление',\n      accessor: row => '',\n      Filter: Filter,\n      isVisible: true\n    }]\n  }, {\n    Header: 'отметки о выполнении',\n    columns: [{\n      Header: 'долги',\n      accessor: row => `${row.student.number_of_debts}`,\n      Filter: Filter\n    }, {\n      Header: 'справка о выполнении уч. плана',\n      accessor: row => `${row.student.certificate_of_curriculum_completion}`,\n      Filter: Filter\n    }, {\n      Header: 'сдана зачетка',\n      accessor: row => `${row.student.record_book_submitted}`,\n      Filter: Filter\n    }, {\n      Header: 'сдана пояснительная записка',\n      accessor: row => row.explanatory_note_submitted ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'красный диплом',\n      accessor: row => row.student.diploma_with_honors ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'согласие на публикацию',\n      accessor: row => row.publication_agree ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'отзыв',\n      accessor: row => `${row.teacher_review}`,\n      Filter: Filter\n    }, {\n      Header: 'рецензия',\n      accessor: row => `${row.review}`,\n      Filter: Filter\n    }, {\n      Header: 'Акт о внедрении',\n      accessor: row => row.implementation_act ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'отчет о плагиате',\n      accessor: row => row.plagiarism_report ? 'да' : 'нет',\n      Filter: Filter\n    }, {\n      Header: 'отметки ГЭК',\n      accessor: row => `${row.gak_mark}`,\n      Filter: Filter\n    }, {\n      Header: 'тема на иностранном языке',\n      accessor: row => `${row.theme.name_in_english}`,\n      Filter: Filter\n    }]\n  }], [info_for_table]);\n  const tableInstance = useTable({\n    columns,\n    data: tableData\n  }, useFilters);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.tableContainer,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      onClick: () => {\n        const wb = XLSX.utils.book_new();\n        const ws = XLSX.utils.json_to_sheet(tableData);\n        XLSX.utils.book_append_sheet(wb, ws, 'Data');\n        const excelBuffer = XLSX.write(wb, {\n          bookType: 'xlsx',\n          type: 'array'\n        });\n        const data = new Blob([excelBuffer], {\n          type: 'application/octet-stream'\n        });\n        saveAs(data, 'table_data.xlsx');\n      },\n      children: \"Export to Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      className: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n}\n_s(SecretaryHugeTable, \"OgRDzWJRfQBevdDuK0nw1AYaHH8=\", false, function () {\n  return [useTable];\n});\n_c = SecretaryHugeTable;\nexport default SecretaryHugeTable;\nvar _c;\n$RefreshReg$(_c, \"SecretaryHugeTable\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","useTable","useFilters","XLSX","saveAs","Button","Row","Col","styles","Filter","hide_cell","BlockInfo","jsxDEV","_jsxDEV","SecretaryHugeTable","info_for_table","_s","tableModified","setTableModified","originalData","setOriginalData","editableCell","setEditableCell","hiddenColumns","setHiddenColumns","isColumnsModified","setIsColumnsModified","isFiltered","setIsFiltered","isFirstRowEmpty","data","length","Object","values","every","cell","request_list","setTableData","tableData","Array","isArray","shift","newData","map","request","student","student_list","find","user","last_name","work_protection","personal_work_protection_list","wp","id","columns","Header","accessor","row","index","average_score","protocol_number","date","first_name","patronymic","theme","name","teacher","consultant","reviewer","company","last_name_of_responsible","first_name_of_responsible","patronymic_name_of_responsible","job_title_of_resposible","additional_information","record_book_number","phone","email","basis_of_study","preprotection_grade","final_grade","undefined","date_of_birth","year_of_prev_education_completion","form_of_prev_education","year_of_admission","special_marks","isVisible","number_of_debts","certificate_of_curriculum_completion","record_book_submitted","explanatory_note_submitted","diploma_with_honors","publication_agree","teacher_review","review","implementation_act","plagiarism_report","gak_mark","name_in_english","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","tableContainer","children","variant","onClick","wb","utils","book_new","ws","json_to_sheet","book_append_sheet","excelBuffer","write","bookType","type","Blob","fileName","_jsxFileName","lineNumber","columnNumber","table","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","getCellProps","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/Tables/SecretaryTableData/SecretaryHugeTable.js"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useTable, useFilters } from 'react-table';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport styles from '../../../container.module.css';\r\nimport Filter from '../Filter/Filter';\r\nimport hide_cell from '../../../img/hide_cell.png';\r\nimport BlockInfo from '../../BlockInfo/BlockInfo';\r\n\r\nfunction SecretaryHugeTable({ info_for_table }) {\r\n  const [tableModified, setTableModified] = useState(false);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [editableCell, setEditableCell] = useState(null);\r\n  const [hiddenColumns, setHiddenColumns] = useState([]);\r\n  const [isColumnsModified, setIsColumnsModified] = useState(false);\r\n  const [isFiltered, setIsFiltered] = useState(false);\r\n\r\n  const isFirstRowEmpty = (data) => {\r\n    return data.length > 0 && Object.values(data[0]).every((cell) => cell === null || cell === '');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (info_for_table) {\r\n      setOriginalData(info_for_table.request_list || []);\r\n      setTableData(info_for_table.request_list || []);\r\n    }\r\n  }, [info_for_table]);\r\n\r\n  const [tableData, setTableData] = useState(() => {\r\n    if (!info_for_table || !Array.isArray(info_for_table.request_list)) {\r\n      return [];\r\n    }\r\n\r\n    const data = [...info_for_table.request_list];\r\n    if (isFirstRowEmpty(data)) {\r\n      data.shift(); // Remove the first element if it is empty\r\n    }\r\n\r\n    const newData = data.map((request) => {\r\n      const student = info_for_table.student_list.find((student) => student.user.last_name === request.student.last_name);\r\n      const work_protection = info_for_table.personal_work_protection_list.find((wp) => wp.request === request.id);\r\n      return { ...request, student, work_protection };\r\n    });\r\n\r\n    return newData;\r\n  });\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: '№ п/п',\r\n        accessor: (row, index) => index + 1,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'ср.б.',\r\n        accessor: (row) => row.student.average_score,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'номер протокола',\r\n        accessor: (row) => (row.work_protection && row.work_protection.protocol_number !== null ? row.work_protection.protocol_number : null),\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'дата протокола',\r\n        accessor: (row) => (row.work_protection && row.work_protection.date !== null ? row.work_protection.date : null),\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Фамилия, Имя, Отчество',\r\n        accessor: (row) => `${row.student.user.last_name} ${row.student.user.first_name} ${row.student.user.patronymic}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Тема',\r\n        accessor: (row) => `${row.theme.name}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Руководитель',\r\n        accessor: (row) => `${row.teacher.last_name} ${row.teacher.first_name} ${row.teacher.patronymic}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Консультант',\r\n        accessor: (row) => (row.consultant ? `${row.consultant.last_name} ${row.consultant.first_name} ${row.consultant.patronymic}` : ''),\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Рецензент',\r\n        accessor: (row) => (row.theme.reviewer ? `${row.theme.reviewer.last_name} ${row.theme.reviewer.first_name} ${row.theme.reviewer.patronymic}` : ''),\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'организация',\r\n        accessor: (row) =>\r\n          row.theme.company\r\n            ? `${row.theme.company.name} ${row.theme.company.last_name_of_responsible} ${row.theme.company.first_name_of_responsible} ${row.theme.company.patronymic_name_of_responsible} ${row.theme.company.job_title_of_resposible} ${row.theme.company.additional_information}`\r\n            : '',\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'номер зачетки',\r\n        accessor: (row) => `${row.student.record_book_number}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Телефон',\r\n        accessor: (row) => `${row.student.user.phone}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'Email',\r\n        accessor: (row) => `${row.student.user.email}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'бюджет/платный',\r\n        accessor: (row) => `${row.student.basis_of_study}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'оценка на предзащите/ преддипломная практика',\r\n        accessor: (row) => `${row.preprotection_grade}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'оценка на защите',\r\n        accessor: (row) => (row.work_protection && row.work_protection.final_grade !== undefined ? `${row.work_protection.final_grade}` : ''),\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'дата рождения',\r\n        accessor: (row) => `${row.student.date_of_birth}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'год окончания предыдущ образования',\r\n        accessor: (row) => `${row.student.year_of_prev_education_completion}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'форма предыдущего образования',\r\n        accessor: (row) => `${row.student.form_of_prev_education}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'год поступления',\r\n        accessor: (row) => `${row.student.year_of_admission}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'особые отметки',\r\n        accessor: (row) => `${row.student.special_marks}`,\r\n        Filter: Filter,\r\n      },\r\n      {\r\n        Header: 'приказы',\r\n        columns: [\r\n          {\r\n            Header: 'допуск',\r\n            accessor: (row) => '',\r\n            Filter: Filter,\r\n            isVisible: true,\r\n          },\r\n          {\r\n            Header: 'тема',\r\n            accessor: (row) => '',\r\n            Filter: Filter,\r\n            isVisible: true,\r\n          },\r\n          {\r\n            Header: 'изменение темы',\r\n            accessor: (row) => '',\r\n            Filter: Filter,\r\n            isVisible: true,\r\n          },\r\n          {\r\n            Header: 'рецензент',\r\n            accessor: (row) => '',\r\n            Filter: Filter,\r\n            isVisible: true,\r\n          },\r\n          {\r\n            Header: 'отчисление',\r\n            accessor: (row) => '',\r\n            Filter: Filter,\r\n            isVisible: true,\r\n          },\r\n          {\r\n            Header: 'с какого числа отчисление',\r\n            accessor: (row) => '',\r\n            Filter: Filter,\r\n            isVisible: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        Header: 'отметки о выполнении',\r\n        columns: [\r\n          {\r\n            Header: 'долги',\r\n            accessor: (row) => `${row.student.number_of_debts}`,\r\n            Filter: Filter,\r\n          },\r\n          {\r\n            Header: 'справка о выполнении уч. плана',\r\n            accessor: (row) => `${row.student.certificate_of_curriculum_completion}`,\r\n            Filter: Filter,\r\n          },\r\n          {\r\n            Header: 'сдана зачетка',\r\n            accessor: (row) => `${row.student.record_book_submitted}`,\r\n            Filter: Filter,\r\n          },\r\n          {\r\n            Header: 'сдана пояснительная записка',\r\n            accessor: (row) => (row.explanatory_note_submitted ? 'да' : 'нет'),\r\n            Filter: Filter,\r\n          },\r\n          {\r\n            Header: 'красный диплом',\r\n            accessor: (row) => (row.student.diploma_with_honors ? 'да' : 'нет'),\r\n            Filter: Filter,\r\n          },\r\n          {\r\n            Header: 'согласие на публикацию',\r\n            accessor: (row) => (row.publication_agree ? 'да' : 'нет'),\r\n            Filter: Filter,\r\n          },\r\n          {\r\n            Header: 'отзыв',\r\n            accessor: (row) => `${row.teacher_review}`,\r\n            Filter: Filter,\r\n          },\r\n          {\r\n            Header: 'рецензия',\r\n            accessor: (row) => `${row.review}`,\r\n            Filter: Filter,\r\n          },\r\n          {\r\n            Header: 'Акт о внедрении',\r\n            accessor: (row) => (row.implementation_act ? 'да' : 'нет'),\r\n            Filter: Filter,\r\n          },\r\n          {\r\n            Header: 'отчет о плагиате',\r\n            accessor: (row) => (row.plagiarism_report ? 'да' : 'нет'),\r\n            Filter: Filter,\r\n          },\r\n          {\r\n            Header: 'отметки ГЭК',\r\n            accessor: (row) => `${row.gak_mark}`,\r\n            Filter: Filter,\r\n          },\r\n          {\r\n            Header: 'тема на иностранном языке',\r\n            accessor: (row) => `${row.theme.name_in_english}`,\r\n            Filter: Filter,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    [info_for_table]\r\n  );\r\n\r\n  const tableInstance = useTable({ columns, data: tableData }, useFilters);\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance;\r\n\r\n  return (\r\n    <div className={styles.tableContainer}>\r\n      <Button\r\n        variant=\"success\"\r\n        onClick={() => {\r\n          const wb = XLSX.utils.book_new();\r\n          const ws = XLSX.utils.json_to_sheet(tableData);\r\n          XLSX.utils.book_append_sheet(wb, ws, 'Data');\r\n          const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n          const data = new Blob([excelBuffer], { type: 'application/octet-stream' });\r\n          saveAs(data, 'table_data.xlsx');\r\n        }}\r\n      >\r\n        Export to Excel\r\n      </Button>\r\n      <table {...getTableProps()} className={styles.table}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => (\r\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SecretaryHugeTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}