{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\Forms\\\\CreateScheduleProtectionForm\\\\CreateScheduleProtectionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\nimport { Document, Packer, Paragraph, TextRun, Table, TableRow, TableCell, HeadingLevel, AlignmentType, PageOrientation, WidthType } from 'docx';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateScheduleProtectionForm = ({\n  groups_for_schedule,\n  students_list_for_schedule\n}) => {\n  _s();\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [dateStart, setDateStart] = useState('');\n  const [audienceNumber, setAudienceNumber] = useState('');\n  useEffect(() => {}, [groups_for_schedule]);\n  const toggleAll = event => {\n    const checkboxes = document.querySelectorAll('.nested-list input[type=\"checkbox\"]');\n    const isSelected = event.target.classList.contains('selected');\n    checkboxes.forEach(checkbox => {\n      checkbox.checked = !isSelected;\n    });\n    event.target.classList.toggle('selected');\n    updateSelectedItems();\n  };\n  const toggleSubList = (listId, event) => {\n    const list = document.getElementById(listId);\n    const toggleBtn = event.target;\n    if (list.style.display === 'none') {\n      list.style.display = 'block';\n      toggleBtn.textContent = toggleBtn.textContent.replace('[+]', '[-]');\n    } else {\n      list.style.display = 'none';\n      toggleBtn.textContent = toggleBtn.textContent.replace('[-]', '[+]');\n    }\n  };\n  const updateSelectedItems = () => {\n    const checkboxes = document.querySelectorAll('.nested-list input[type=\"checkbox\"]:checked');\n    const selected = [];\n    checkboxes.forEach(checkbox => {\n      const label = checkbox.nextElementSibling.textContent;\n      const groupName = label.split(' (')[0]; // Извлекаем только имя группы без количества студентов\n      selected.push(groupName);\n    });\n    setSelectedItems(selected);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    generateDocument();\n  };\n  if (!groups_for_schedule) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const options = {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    };\n    return date.toLocaleDateString('ru-RU', options);\n  };\n  const addWeekdays = (date, days) => {\n    const newDate = new Date(date);\n    let addedDays = 0;\n    while (addedDays < days) {\n      newDate.setDate(newDate.getDate() + 1);\n      if (newDate.getDay() !== 0 && newDate.getDay() !== 6) {\n        // Пропускаем субботу и воскресенье\n        addedDays++;\n      }\n    }\n    return newDate;\n  };\n  const getStudentCount = groupId => {\n    return students_list_for_schedule.filter(student => student.student.group.id === groupId).length;\n  };\n  const bachelors = groups_for_schedule.filter(group => group.name.includes('Б'));\n  const masters = groups_for_schedule.filter(group => group.name.includes('М'));\n  const generateDocument = () => {\n    console.log(\"Generate document function is called\");\n    console.log(\"selectedItems:\", selectedItems);\n    console.log(\"dateStart:\", dateStart);\n    console.log(\"audienceNumber:\", audienceNumber);\n    const createTableCell = (text, isBold = false) => {\n      return new TableCell({\n        children: [new Paragraph({\n          text: text,\n          run: {\n            bold: isBold\n          }\n        })],\n        margins: {\n          top: 100,\n          bottom: 100,\n          left: 100,\n          right: 100\n        }\n      });\n    };\n    const processGroups = selectedItems => {\n      const combinedElements = [];\n      const sectionProperties = {\n        width: 15840,\n        height: 10000,\n        margins: {\n          top: 1440,\n          right: 1440,\n          bottom: 1440,\n          left: 1440\n        }\n      };\n      const currentDate = new Date(dateStart);\n      const processGroup = groupName => {\n        console.log(`Processing group: ${groupName}`);\n        const group = groups_for_schedule.find(group => group.name === groupName);\n        console.log(\"Group:\", group);\n        if (!group || !group.speciality || !group.speciality.field_of_study) {\n          console.warn(`Skipping group due to missing data: ${groupName}`);\n          return;\n        }\n        let text;\n        if (groupName.includes('Б')) {\n          text = `Бакалавры по специальности ${group.speciality.code} \"${group.speciality.name}\" по специализированной магистерской программе ${group.speciality.field_of_study.code} \"${group.speciality.field_of_study.name}\"`;\n        } else if (groupName.includes('М')) {\n          text = `Магистры по специальности ${group.speciality.code} \"${group.speciality.name}\" по специализированной магистерской программе ${group.speciality.field_of_study.code} \"${group.speciality.field_of_study.name}\"`;\n        } else {\n          text = `Группа ${groupName}`;\n        }\n        console.log(\"Text for paragraph:\", text);\n        const paragraphBeforeTable = new Paragraph({\n          text: text,\n          heading: HeadingLevel.HEADING_2,\n          alignment: AlignmentType.LEFT,\n          spacing: {\n            before: 240,\n            after: 240\n          },\n          style: 'default'\n        });\n        combinedElements.push(paragraphBeforeTable);\n        const students = students_list_for_schedule.filter(student => student.student.group.id === group.id);\n        const rowsCount = Math.ceil(students.length / 12);\n        console.log(`Group: ${groupName}, Students count: ${students.length}, Rows count: ${rowsCount}`);\n        let rowCounter = 1;\n        const tableRows = [];\n        for (let i = 0; i < rowsCount; i++) {\n          currentDate = addWeekdays(currentDate, 1); // Добавляем один рабочий день\n          const formattedDate = formatDate(currentDate);\n          tableRows.push(new TableRow({\n            children: [createTableCell(i + 1, true), createTableCell(formattedDate, true), createTableCell('9:00', true), createTableCell(audienceNumber, true), createTableCell(groupName, true)]\n          }));\n          rowCounter++;\n        }\n        const table = new Table({\n          width: {\n            size: 100,\n            type: WidthType.PERCENTAGE\n          },\n          rows: [new TableRow({\n            children: [createTableCell(\"№\", true), createTableCell(\"Дата\", true), createTableCell(\"Время\", true), createTableCell(\"Аудитория\", true), createTableCell(\"Уч. группа\", true)]\n          }), ...tableRows]\n        });\n        combinedElements.push(table);\n      };\n      selectedItems.forEach(processGroup);\n      const section = {\n        properties: sectionProperties,\n        children: combinedElements\n      };\n      const doc = new Document({\n        creator: \"YourAppName\",\n        title: \"Schedule Protection\",\n        description: \"Document with the schedule protection details\",\n        sections: [section],\n        styles: {\n          paragraphStyles: [{\n            id: \"default\",\n            name: \"Default\",\n            basedOn: \"Normal\",\n            next: \"Normal\",\n            quickFormat: true,\n            run: {\n              font: \"Times New Roman\",\n              size: '12pt',\n              color: '000000'\n            }\n          }]\n        }\n      });\n      Packer.toBlob(doc).then(blob => {\n        saveAs(blob, \"schedule.docx\");\n      });\n    };\n    processGroups(selectedItems);\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 7,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-4 text-center\",\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0433\\u0440\\u0430\\u0444\\u0438\\u043A\\u0430 \\u0437\\u0430\\u0449\\u0438\\u0442 \\u0412\\u041A\\u0420\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"px-4 py-2 m-2\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043D\\u0443\\u0436\\u043D\\u044B\\u0445 \\u0432\\u044B\\u043F\\u0443\\u0441\\u043A\\u043D\\u0438\\u043A\\u043E\\u0432 \\u0438\\u0437 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"top-level-item\",\n              onClick: toggleAll,\n              children: [\"\\u0412\\u0441\\u0435 \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"toggle-btn\",\n                children: \"[+]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"nested-list\",\n              id: \"all\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"top-level-item\",\n                onClick: e => toggleSubList('bakalavry', e),\n                children: [\"\\u0411\\u0430\\u043A\\u0430\\u043B\\u0430\\u0432\\u0440\\u044B \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"toggle-btn\",\n                  children: \"[+]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"nested-list\",\n                id: \"bakalavry\",\n                children: bachelors.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"checkbox\",\n                    id: group.id,\n                    label: `${group.name} (${getStudentCount(group.id)})`,\n                    onClick: updateSelectedItems\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 45\n                  }, this)\n                }, group.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"top-level-item\",\n                onClick: e => toggleSubList('magistranty', e),\n                children: [\"\\u041C\\u0430\\u0433\\u0438\\u0441\\u0442\\u0440\\u044B \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"toggle-btn\",\n                  children: \"[+]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"nested-list\",\n                id: \"magistranty\",\n                children: masters.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"checkbox\",\n                    id: group.id,\n                    label: `${group.name} (${getStudentCount(group.id)})`,\n                    onClick: updateSelectedItems\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 45\n                  }, this)\n                }, group.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"selected-items\",\n            children: [\"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u044B: \", selectedItems.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u0437\\u0430\\u0449\\u0438\\u0442\\u044B \\u0412\\u041A\\u0420:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            value: dateStart,\n            onChange: e => setDateStart(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0430\\u0443\\u0434\\u0438\\u0442\\u043E\\u0440\\u0438\\u044E:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: audienceNumber,\n            onChange: e => setAudienceNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"button\",\n          children: \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043D\\u0443\\u0436\\u043D\\u0443\\u044E \\u0433\\u0440\\u0443\\u043F\\u043F\\u0443 \\u043B\\u0438\\u0431\\u043E \\u0432\\u0441\\u0435\\u0445 \\u0432\\u044B\\u043F\\u0443\\u0441\\u043A\\u043D\\u0438\\u043A\\u043E\\u0432 \\u0441\\u0440\\u0430\\u0437\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u0414\\u0430\\u043B\\u0435\\u0435 \\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043B\\u0430\\u043D\\u0438\\u0440\\u0443\\u0435\\u043C\\u044B\\u0435 \\u0434\\u0430\\u0442\\u044B \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u0438 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u0438\\u044F \\u0437\\u0430\\u0449\\u0438\\u0442\\u044B \\u0412\\u041A\\u0420\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u043C \\u0448\\u0430\\u0433\\u043E\\u043C \\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u043E\\u0433\\u043E \\u0438\\u043D\\u0442\\u0435\\u0440\\u0432\\u0430\\u043B\\u0430, \\u0440\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u043D\\u043D\\u043E\\u0433\\u043E \\u043D\\u0430 \\u043E\\u0434\\u043D\\u043E \\u0432\\u044B\\u0441\\u0442\\u0443\\u043F\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0432\\u044B\\u043F\\u0443\\u0441\\u043A\\u043D\\u0438\\u043A\\u0430.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u041D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 \\u201C\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\\u201D.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u0414\\u0430\\u043B\\u0435\\u0435 \\u0432\\u044B \\u0441\\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u043D\\u044B\\u0439 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A \\u043A\\u0430\\u043A \\u0447\\u0435\\u0440\\u043D\\u043E\\u0432\\u0438\\u043A, \\u043E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C (\\u0442\\u043E\\u0433\\u0434\\u0430 \\u0435\\u0433\\u043E \\u0443\\u0432\\u0438\\u0434\\u044F\\u0442 \\u0432\\u0441\\u0435 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0438 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u044B) \\u0438\\u043B\\u0438 \\u044D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0432 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442 word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateScheduleProtectionForm, \"aFH3SuJy//lCwh39iCdErwVjeOU=\");\n_c = CreateScheduleProtectionForm;\nexport default CreateScheduleProtectionForm;\nvar _c;\n$RefreshReg$(_c, \"CreateScheduleProtectionForm\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Form","Button","Card","Document","Packer","Paragraph","TextRun","Table","TableRow","TableCell","HeadingLevel","AlignmentType","PageOrientation","WidthType","saveAs","jsxDEV","_jsxDEV","CreateScheduleProtectionForm","groups_for_schedule","students_list_for_schedule","_s","selectedItems","setSelectedItems","dateStart","setDateStart","audienceNumber","setAudienceNumber","toggleAll","event","checkboxes","document","querySelectorAll","isSelected","target","classList","contains","forEach","checkbox","checked","toggle","updateSelectedItems","toggleSubList","listId","list","getElementById","toggleBtn","style","display","textContent","replace","selected","label","nextElementSibling","groupName","split","push","handleSubmit","preventDefault","generateDocument","children","fileName","_jsxFileName","lineNumber","columnNumber","formatDate","dateString","date","Date","options","day","month","year","toLocaleDateString","addWeekdays","days","newDate","addedDays","setDate","getDate","getDay","getStudentCount","groupId","filter","student","group","id","length","bachelors","name","includes","masters","console","log","createTableCell","text","isBold","run","bold","margins","top","bottom","left","right","processGroups","combinedElements","sectionProperties","width","height","currentDate","processGroup","find","speciality","field_of_study","warn","code","paragraphBeforeTable","heading","HEADING_2","alignment","LEFT","spacing","before","after","students","rowsCount","Math","ceil","rowCounter","tableRows","i","formattedDate","table","size","type","PERCENTAGE","rows","section","properties","doc","creator","title","description","sections","styles","paragraphStyles","basedOn","next","quickFormat","font","color","toBlob","then","blob","className","md","onSubmit","Group","Label","onClick","e","map","Check","join","Control","value","onChange","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/Forms/CreateScheduleProtectionForm/CreateScheduleProtectionForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\r\nimport { Document, Packer, Paragraph, TextRun, Table, TableRow, TableCell, HeadingLevel, AlignmentType, PageOrientation, WidthType } from 'docx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst CreateScheduleProtectionForm = ({ groups_for_schedule, students_list_for_schedule }) => {\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n    const [dateStart, setDateStart] = useState('');\r\n    const [audienceNumber, setAudienceNumber] = useState('');\r\n\r\n    useEffect(() => {\r\n    }, [groups_for_schedule]);\r\n\r\n    const toggleAll = (event) => {\r\n        const checkboxes = document.querySelectorAll('.nested-list input[type=\"checkbox\"]');\r\n        const isSelected = event.target.classList.contains('selected');\r\n        checkboxes.forEach((checkbox) => {\r\n            checkbox.checked = !isSelected;\r\n        });\r\n        event.target.classList.toggle('selected');\r\n        updateSelectedItems();\r\n    };\r\n\r\n    const toggleSubList = (listId, event) => {\r\n        const list = document.getElementById(listId);\r\n        const toggleBtn = event.target;\r\n        if (list.style.display === 'none') {\r\n            list.style.display = 'block';\r\n            toggleBtn.textContent = toggleBtn.textContent.replace('[+]', '[-]');\r\n        } else {\r\n            list.style.display = 'none';\r\n            toggleBtn.textContent = toggleBtn.textContent.replace('[-]', '[+]');\r\n        }\r\n    };\r\n\r\n    const updateSelectedItems = () => {\r\n        const checkboxes = document.querySelectorAll('.nested-list input[type=\"checkbox\"]:checked');\r\n        const selected = [];\r\n        checkboxes.forEach((checkbox) => {\r\n            const label = checkbox.nextElementSibling.textContent;\r\n            const groupName = label.split(' (')[0]; // Извлекаем только имя группы без количества студентов\r\n            selected.push(groupName);\r\n        });\r\n        setSelectedItems(selected);\r\n    };\r\n    \r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        generateDocument();\r\n    };\r\n\r\n    if (!groups_for_schedule) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        const options = { day: 'numeric', month: 'long', year: 'numeric' };\r\n        return date.toLocaleDateString('ru-RU', options);\r\n    };\r\n\r\n    const addWeekdays = (date, days) => {\r\n        const newDate = new Date(date);\r\n        let addedDays = 0;\r\n        while (addedDays < days) {\r\n            newDate.setDate(newDate.getDate() + 1);\r\n            if (newDate.getDay() !== 0 && newDate.getDay() !== 6) { // Пропускаем субботу и воскресенье\r\n                addedDays++;\r\n            }\r\n        }\r\n        return newDate;\r\n    };\r\n\r\n    const getStudentCount = (groupId) => {\r\n        return students_list_for_schedule.filter(student => student.student.group.id === groupId).length;\r\n    };\r\n\r\n    const bachelors = groups_for_schedule.filter(group => group.name.includes('Б'));\r\n    const masters = groups_for_schedule.filter(group => group.name.includes('М'));\r\n\r\n    const generateDocument = () => {\r\n        console.log(\"Generate document function is called\");\r\n        console.log(\"selectedItems:\", selectedItems);\r\n        console.log(\"dateStart:\", dateStart);\r\n        console.log(\"audienceNumber:\", audienceNumber);\r\n\r\n        const createTableCell = (text, isBold = false) => {\r\n            return new TableCell({\r\n                children: [\r\n                    new Paragraph({\r\n                        text: text,\r\n                        run: {\r\n                            bold: isBold,\r\n                        },\r\n                    }),\r\n                ],\r\n                margins: {\r\n                    top: 100,\r\n                    bottom: 100,\r\n                    left: 100,\r\n                    right: 100,\r\n                },\r\n            });\r\n        };\r\n\r\n        const processGroups = (selectedItems) => {\r\n            const combinedElements = [];\r\n            const sectionProperties = {\r\n                width: 15840,\r\n                height: 10000,\r\n                margins: {\r\n                    top: 1440,\r\n                    right: 1440,\r\n                    bottom: 1440,\r\n                    left: 1440,\r\n                },\r\n            };\r\n\r\n            const currentDate = new Date(dateStart);\r\n\r\n            const processGroup = (groupName) => {\r\n                console.log(`Processing group: ${groupName}`);\r\n                const group = groups_for_schedule.find(group => group.name === groupName);\r\n                console.log(\"Group:\", group);\r\n\r\n                if (!group || !group.speciality || !group.speciality.field_of_study) {\r\n                    console.warn(`Skipping group due to missing data: ${groupName}`);\r\n                    return;\r\n                }\r\n\r\n                let text;\r\n                if (groupName.includes('Б')) {\r\n                    text = `Бакалавры по специальности ${group.speciality.code} \"${group.speciality.name}\" по специализированной магистерской программе ${group.speciality.field_of_study.code} \"${group.speciality.field_of_study.name}\"`;\r\n                } else if (groupName.includes('М')) {\r\n                    text = `Магистры по специальности ${group.speciality.code} \"${group.speciality.name}\" по специализированной магистерской программе ${group.speciality.field_of_study.code} \"${group.speciality.field_of_study.name}\"`;\r\n                } else {\r\n                    text = `Группа ${groupName}`;\r\n                }\r\n\r\n                console.log(\"Text for paragraph:\", text);\r\n\r\n                const paragraphBeforeTable = new Paragraph({\r\n                    text: text,\r\n                    heading: HeadingLevel.HEADING_2,\r\n                    alignment: AlignmentType.LEFT,\r\n                    spacing: {\r\n                        before: 240,\r\n                        after: 240,\r\n                    },\r\n                    style: 'default'\r\n                });\r\n\r\n                combinedElements.push(paragraphBeforeTable);\r\n\r\n                const students = students_list_for_schedule.filter(student => student.student.group.id === group.id);\r\n                const rowsCount = Math.ceil(students.length / 12);\r\n\r\n                console.log(`Group: ${groupName}, Students count: ${students.length}, Rows count: ${rowsCount}`);\r\n\r\n                let rowCounter = 1;\r\n                const tableRows = [];\r\n                for (let i = 0; i < rowsCount; i++) {\r\n                    currentDate = addWeekdays(currentDate, 1); // Добавляем один рабочий день\r\n                    const formattedDate = formatDate(currentDate);\r\n                    tableRows.push(\r\n                        new TableRow({\r\n                            children: [\r\n                                createTableCell(i + 1, true),\r\n                                createTableCell(formattedDate, true),\r\n                                createTableCell('9:00', true),\r\n                                createTableCell(audienceNumber, true),\r\n                                createTableCell(groupName, true),\r\n                            ],\r\n                        })\r\n                    );\r\n                    rowCounter++;\r\n                }\r\n\r\n                const table = new Table({\r\n                    width: {\r\n                        size: 100,\r\n                        type: WidthType.PERCENTAGE,\r\n                    },\r\n                    rows: [\r\n                        new TableRow({\r\n                            children: [\r\n                                createTableCell(\"№\", true),\r\n                                createTableCell(\"Дата\", true),\r\n                                createTableCell(\"Время\", true),\r\n                                createTableCell(\"Аудитория\", true),\r\n                                createTableCell(\"Уч. группа\", true),\r\n                            ],\r\n                        }),\r\n                        ...tableRows,\r\n                    ],\r\n                });\r\n\r\n                combinedElements.push(table);\r\n            };\r\n\r\n            selectedItems.forEach(processGroup);\r\n            \r\n                     const section = {\r\n                properties: sectionProperties,\r\n                children: combinedElements,\r\n            };\r\n\r\n            const doc = new Document({\r\n                creator: \"YourAppName\",\r\n                title: \"Schedule Protection\",\r\n                description: \"Document with the schedule protection details\",\r\n                sections: [section],\r\n                styles: {\r\n                    paragraphStyles: [\r\n                        {\r\n                            id: \"default\",\r\n                            name: \"Default\",\r\n                            basedOn: \"Normal\",\r\n                            next: \"Normal\",\r\n                            quickFormat: true,\r\n                            run: {\r\n                                font: \"Times New Roman\",\r\n                                size: '12pt',\r\n                                color: '000000'\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n            });\r\n\r\n            Packer.toBlob(doc).then(blob => {\r\n                saveAs(blob, \"schedule.docx\");\r\n            });\r\n        };\r\n\r\n        processGroups(selectedItems);\r\n    };\r\n\r\n    return (\r\n        <Row className=\"justify-content-center\">\r\n            <Col md={7}>\r\n                <h4 className=\"mb-4 text-center\">Создание графика защит ВКР</h4>\r\n                <Form className=\"px-4 py-2 m-2\" onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Выберите нужных выпускников из списка:</Form.Label>\r\n                        <ul>\r\n                            <li className=\"top-level-item\" onClick={toggleAll}>\r\n                                Все <span className=\"toggle-btn\">[+]</span>\r\n                            </li>\r\n                            <ul className=\"nested-list\" id=\"all\">\r\n                                <li className=\"top-level-item\" onClick={(e) => toggleSubList('bakalavry', e)}>\r\n                                    Бакалавры <span className=\"toggle-btn\">[+]</span>\r\n                                </li>\r\n                                <ul className=\"nested-list\" id=\"bakalavry\">\r\n                                    {bachelors.map(group => (\r\n                                        <li key={group.id}>\r\n                                            <Form.Check\r\n                                                type=\"checkbox\"\r\n                                                id={group.id}\r\n                                                label={`${group.name} (${getStudentCount(group.id)})`}\r\n                                                onClick={updateSelectedItems}\r\n                                            />\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                                <li className=\"top-level-item\" onClick={(e) => toggleSubList('magistranty', e)}>\r\n                                    Магистры <span className=\"toggle-btn\">[+]</span>\r\n                                </li>\r\n                                <ul className=\"nested-list\" id=\"magistranty\">\r\n                                    {masters.map(group => (\r\n                                        <li key={group.id}>\r\n                                            <Form.Check\r\n                                                type=\"checkbox\"\r\n                                                id={group.id}\r\n                                                label={`${group.name} (${getStudentCount(group.id)})`}\r\n                                                onClick={updateSelectedItems}\r\n                                            />\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </ul>\r\n                        </ul>\r\n                        <div id=\"selected-items\">\r\n                            Выбранные элементы: {selectedItems.join(', ')}\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Введите дату начала защиты ВКР:</Form.Label>\r\n                        <Form.Control type=\"date\" value={dateStart} onChange={(e) => setDateStart(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Введите аудиторию:</Form.Label>\r\n                        <Form.Control type=\"text\" value={audienceNumber} onChange={(e) => setAudienceNumber(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" className=\"button\">\r\n                        Рассчитать\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={4} className=\"mt-4\">\r\n                <ol>\r\n                    <li>Выберите нужную группу либо всех выпускников сразу</li>\r\n                    <li>Далее введите планируемые даты начала и завершения защиты ВКР</li>\r\n                    <li>Следующим шагом введите длительность временного интервала, рассчитанного на одно выступление выпускника.</li>\r\n                    <li>Нажмите “Рассчитать”.</li>\r\n                    <li>\r\n                        Далее вы сможете сохранить полученный список как черновик, опубликовать (тогда его увидят все пользователи системы) или экспортировать в формат word\r\n                    </li>\r\n                </ol>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CreateScheduleProtectionForm;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}