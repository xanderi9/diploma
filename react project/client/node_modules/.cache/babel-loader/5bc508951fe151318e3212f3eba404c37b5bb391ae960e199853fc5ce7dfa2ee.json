{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\pages\\\\BasePages\\\\BasePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from '../../components/Header/Header.js';\nimport Background from '../../components/Background/Background.js';\nimport Footer from '../../components/Footer/Footer.js';\nimport SideMenu from '../../components/SideMenu/SideMenu.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasePage = ({\n  isAuthenticated,\n  children,\n  data\n}) => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  const toggleTheme = () => {\n    setDarkMode(prevDarkMode => !prevDarkMode);\n  };\n  const [isSideMenuOpen, setIsSideMenuOpen] = useState(false);\n  const toggleMenu = () => {\n    setIsSideMenuOpen(!isSideMenuOpen);\n  };\n\n  // Клонируем children и передаем им darkMode\n  const childrenWithProps = React.Children.map(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        darkMode: darkMode\n      });\n    }\n    return child;\n  });\n  return /*#__PURE__*/_jsxDEV(Background, {\n    darkMode: darkMode,\n    toggleTheme: toggleTheme,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isAuthenticated: isAuthenticated,\n      toggleMenu: toggleMenu,\n      toggleTheme: toggleTheme,\n      isSideMenuOpen: isSideMenuOpen,\n      darkMode: darkMode,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), childrenWithProps, /*#__PURE__*/_jsxDEV(Footer, {\n      darkMode: darkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(BasePage, \"RcmTkrqfoCddeNok0ctzB8vqxKM=\");\n_c = BasePage;\nexport default BasePage;\nvar _c;\n$RefreshReg$(_c, \"BasePage\");","map":{"version":3,"names":["React","useState","Header","Background","Footer","SideMenu","jsxDEV","_jsxDEV","BasePage","isAuthenticated","children","data","_s","darkMode","setDarkMode","toggleTheme","prevDarkMode","isSideMenuOpen","setIsSideMenuOpen","toggleMenu","childrenWithProps","Children","map","child","isValidElement","cloneElement","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/pages/BasePages/BasePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Header from '../../components/Header/Header.js';\r\nimport Background from '../../components/Background/Background.js';\r\nimport Footer from '../../components/Footer/Footer.js';\r\nimport SideMenu from '../../components/SideMenu/SideMenu.js';\r\n\r\nconst BasePage = ({ isAuthenticated, children, data }) => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const toggleTheme = () => {\r\n    setDarkMode(prevDarkMode => !prevDarkMode);\r\n  };\r\n\r\n  const [isSideMenuOpen, setIsSideMenuOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setIsSideMenuOpen(!isSideMenuOpen);\r\n  };\r\n\r\n  // Клонируем children и передаем им darkMode\r\n  const childrenWithProps = React.Children.map(children, child => {\r\n    if (React.isValidElement(child)) {\r\n      return React.cloneElement(child, { darkMode: darkMode });\r\n    }\r\n    return child;\r\n  });\r\n\r\n  return (\r\n    <Background darkMode={darkMode} toggleTheme={toggleTheme}>\r\n      <Header isAuthenticated={isAuthenticated} toggleMenu={toggleMenu} toggleTheme={toggleTheme} isSideMenuOpen={isSideMenuOpen} darkMode={darkMode} data={data} />\r\n      {childrenWithProps}\r\n      <Footer darkMode={darkMode} />\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default BasePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mCAAmC;AACtD,OAAOC,UAAU,MAAM,2CAA2C;AAClE,OAAOC,MAAM,MAAM,mCAAmC;AACtD,OAAOC,QAAQ,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,eAAe;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBD,WAAW,CAACE,YAAY,IAAI,CAACA,YAAY,CAAC;EAC5C,CAAC;EAED,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMkB,UAAU,GAAGA,CAAA,KAAM;IACvBD,iBAAiB,CAAC,CAACD,cAAc,CAAC;EACpC,CAAC;;EAED;EACA,MAAMG,iBAAiB,GAAGpB,KAAK,CAACqB,QAAQ,CAACC,GAAG,CAACZ,QAAQ,EAAEa,KAAK,IAAI;IAC9D,kBAAIvB,KAAK,CAACwB,cAAc,CAACD,KAAK,CAAC,EAAE;MAC/B,oBAAOvB,KAAK,CAACyB,YAAY,CAACF,KAAK,EAAE;QAAEV,QAAQ,EAAEA;MAAS,CAAC,CAAC;IAC1D;IACA,OAAOU,KAAK;EACd,CAAC,CAAC;EAEF,oBACEhB,OAAA,CAACJ,UAAU;IAACU,QAAQ,EAAEA,QAAS;IAACE,WAAW,EAAEA,WAAY;IAAAL,QAAA,gBACvDH,OAAA,CAACL,MAAM;MAACO,eAAe,EAAEA,eAAgB;MAACU,UAAU,EAAEA,UAAW;MAACJ,WAAW,EAAEA,WAAY;MAACE,cAAc,EAAEA,cAAe;MAACJ,QAAQ,EAAEA,QAAS;MAACF,IAAI,EAAEA;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7JT,iBAAiB,eAClBb,OAAA,CAACH,MAAM;MAACS,QAAQ,EAAEA;IAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEjB,CAAC;AAACjB,EAAA,CA5BIJ,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}