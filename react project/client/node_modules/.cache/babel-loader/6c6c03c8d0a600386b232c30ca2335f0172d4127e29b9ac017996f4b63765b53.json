{"ast":null,"code":"import petrovich from 'petrovich';\nimport RussianNouns from 'russian-nouns-js';\nimport { saveAs } from 'file-saver';\nimport PizZip from 'pizzip';\nimport Docxtemplater from 'docxtemplater';\nimport word from './protocol.docx';\nconst generateProtocolsFunction = async ({\n  composition_of_sec,\n  selectedGroup,\n  students,\n  dateStart,\n  audienceNumber,\n  protocol_number,\n  hours_start,\n  min_start,\n  hours_end,\n  min_end\n}) => {\n  const chairman = composition_of_sec.find(comp => comp.chairman_of_SEC === true);\n  const members_list = composition_of_sec.filter(sec => sec.chairman_of_SEC === false);\n  const getInitials = (firstName, patronymic) => {\n    return `${firstName.charAt(0)}.${patronymic.charAt(0)}.`;\n  };\n  const np = getInitials(chairman.user.first_name, chairman.user.patronymic);\n  try {\n    const response = await fetch(word);\n    if (!response.ok) throw new Error('Ошибка сети');\n    const arrayBuffer = await response.arrayBuffer();\n    const zip = new PizZip(arrayBuffer);\n    const doc = new Docxtemplater(zip);\n    for (const student of students) {\n      if (student.group.name !== selectedGroup) continue;\n      const dataToRender = {\n        protocol_number: protocol_number,\n        group_protection_date: new Date(dateStart).toLocaleDateString('ru-RU'),\n        hours_start: hours_start,\n        min_start: min_start,\n        hours_end: hours_end,\n        min_end: min_end,\n        chairman_last_name: chairman.user.last_name,\n        chairman_np: np,\n        chairman_degree: chairman.employee_information.academic_degree,\n        chairman_job_title: chairman.employee_information.job_title,\n        members_list: members_list.map(member => ({\n          members_last_name: member.user.last_name,\n          members_np: getInitials(member.user.first_name, member.user.patronymic),\n          members_degree: member.employee_information.academic_degree || '',\n          members_job_title: member.employee_information.job_title,\n          members_place_of_work: member.employee_information.place_of_work\n        })),\n        student_fullname: `${student.first_name} ${student.last_name}`,\n        specialityCode: student.specialityCode,\n        specialtityProgram: student.specialtityProgram,\n        theme: student.theme,\n        teacher_first_name: student.teacher.first_name,\n        teacher_np: getInitials(student.teacher.first_name, student.teacher.patronymic),\n        teacher_degree: student.teacher.degree,\n        teacher_job_title: student.teacher.job_title,\n        reviewer_first_name: student.reviewer.first_name,\n        reviewer_np: getInitials(student.reviewer.first_name, student.reviewer.patronymic),\n        reviewer_degree: student.reviewer.degree,\n        reviewer_job_title: student.reviewer.job_title,\n        student_first_name: student.first_name,\n        student_np: getInitials(student.first_name, student.patronymic),\n        duration: student.duration\n      };\n      doc.setData(dataToRender);\n      doc.render();\n      const output = doc.getZip().generate({\n        type: 'blob'\n      });\n      saveAs(output, `Протокол_${student.last_name}_${student.first_name}.docx`);\n    }\n  } catch (error) {\n    console.error('Ошибка загрузки файла:', error);\n  }\n};\nexport default generateProtocolsFunction;","map":{"version":3,"names":["petrovich","RussianNouns","saveAs","PizZip","Docxtemplater","word","generateProtocolsFunction","composition_of_sec","selectedGroup","students","dateStart","audienceNumber","protocol_number","hours_start","min_start","hours_end","min_end","chairman","find","comp","chairman_of_SEC","members_list","filter","sec","getInitials","firstName","patronymic","charAt","np","user","first_name","response","fetch","ok","Error","arrayBuffer","zip","doc","student","group","name","dataToRender","group_protection_date","Date","toLocaleDateString","chairman_last_name","last_name","chairman_np","chairman_degree","employee_information","academic_degree","chairman_job_title","job_title","map","member","members_last_name","members_np","members_degree","members_job_title","members_place_of_work","place_of_work","student_fullname","specialityCode","specialtityProgram","theme","teacher_first_name","teacher","teacher_np","teacher_degree","degree","teacher_job_title","reviewer_first_name","reviewer","reviewer_np","reviewer_degree","reviewer_job_title","student_first_name","student_np","duration","setData","render","output","getZip","generate","type","error","console"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/Forms/GenerateProtocols/GenerateProtocolFunction.js"],"sourcesContent":["import petrovich from 'petrovich';\r\nimport RussianNouns from 'russian-nouns-js';\r\nimport { saveAs } from 'file-saver';\r\nimport PizZip from 'pizzip';\r\nimport Docxtemplater from 'docxtemplater';\r\nimport word from './protocol.docx';\r\n\r\nconst generateProtocolsFunction = async ({ \r\n    composition_of_sec, \r\n    selectedGroup,\r\n    students,\r\n    dateStart, \r\n    audienceNumber,\r\n    protocol_number,\r\n    hours_start,\r\n    min_start,\r\n    hours_end,\r\n    min_end\r\n}) => {\r\n    const chairman = composition_of_sec.find(comp => comp.chairman_of_SEC === true);\r\n    const members_list = composition_of_sec.filter(sec => sec.chairman_of_SEC === false);\r\n    \r\n    const getInitials = (firstName, patronymic) => {\r\n        return `${firstName.charAt(0)}.${patronymic.charAt(0)}.`;\r\n    };\r\n\r\n    const np = getInitials(chairman.user.first_name, chairman.user.patronymic);\r\n\r\n    try {\r\n        const response = await fetch(word);\r\n        if (!response.ok) throw new Error('Ошибка сети');\r\n        const arrayBuffer = await response.arrayBuffer();\r\n        const zip = new PizZip(arrayBuffer);\r\n        const doc = new Docxtemplater(zip);\r\n\r\n        for (const student of students) {\r\n            if (student.group.name !== selectedGroup) continue;\r\n\r\n            const dataToRender = {\r\n                protocol_number: protocol_number,\r\n                group_protection_date: new Date(dateStart).toLocaleDateString('ru-RU'),\r\n                hours_start: hours_start,\r\n                min_start: min_start,\r\n                hours_end: hours_end,\r\n                min_end: min_end,\r\n                chairman_last_name: chairman.user.last_name,\r\n                chairman_np: np,\r\n                chairman_degree: chairman.employee_information.academic_degree,\r\n                chairman_job_title: chairman.employee_information.job_title,\r\n                members_list: members_list.map(member => ({\r\n                    members_last_name: member.user.last_name,\r\n                    members_np: getInitials(member.user.first_name, member.user.patronymic),\r\n                    members_degree: member.employee_information.academic_degree || '',\r\n                    members_job_title: member.employee_information.job_title,\r\n                    members_place_of_work: member.employee_information.place_of_work,\r\n                })),\r\n                student_fullname: `${student.first_name} ${student.last_name}`,\r\n                specialityCode: student.specialityCode,\r\n                specialtityProgram: student.specialtityProgram,\r\n                theme: student.theme,\r\n                teacher_first_name: student.teacher.first_name,\r\n                teacher_np: getInitials(student.teacher.first_name, student.teacher.patronymic),\r\n                teacher_degree: student.teacher.degree,\r\n                teacher_job_title: student.teacher.job_title,\r\n                reviewer_first_name: student.reviewer.first_name,\r\n                reviewer_np: getInitials(student.reviewer.first_name, student.reviewer.patronymic),\r\n                reviewer_degree: student.reviewer.degree,\r\n                reviewer_job_title: student.reviewer.job_title,\r\n                student_first_name: student.first_name,\r\n                student_np: getInitials(student.first_name, student.patronymic),\r\n                duration: student.duration,\r\n            };\r\n\r\n            doc.setData(dataToRender);\r\n            doc.render();\r\n\r\n            const output = doc.getZip().generate({ type: 'blob' });\r\n            saveAs(output, `Протокол_${student.last_name}_${student.first_name}.docx`);\r\n        }\r\n    } catch (error) {\r\n        console.error('Ошибка загрузки файла:', error);\r\n    }\r\n};\r\n\r\nexport default generateProtocolsFunction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}