{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\Forms\\\\GenerateProtocols\\\\GenerateProtocols.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Table, Col, Row, Button, Form } from 'react-bootstrap';\nimport generateProtocolsFunction from './GenerateProtocolFunction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenerateProtocols({\n  composition_of_sec,\n  groups_for_schedule,\n  requestAndWorkProtection,\n  data\n}) {\n  _s();\n  const [selectedGroup, setSelectedGroup] = useState(groups_for_schedule[0].name);\n  const handleClick = async () => {\n    const groupData = requestAndWorkProtection.filter(item => item.request.student.group.name === selectedGroup);\n    await generateProtocolsFunction({\n      composition_of_sec: composition_of_sec,\n      selectedGroup: selectedGroup,\n      groupData: groupData,\n      data: data\n    });\n  };\n  const countRequestsPerGroup = () => {\n    const groupCounts = {};\n    requestAndWorkProtection.forEach(item => {\n      const groupName = item.request.student.group.name;\n      if (groupCounts[groupName]) {\n        groupCounts[groupName]++;\n      } else {\n        groupCounts[groupName] = 1;\n      }\n    });\n    return groupCounts;\n  };\n  const groupCounts = countRequestsPerGroup();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generate-protocols-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"generate-protocols-title\",\n      children: \"\\u0413\\u0435\\u043D\\u0435\\u0440\\u0430\\u0446\\u0438\\u044F \\u043F\\u0440\\u043E\\u0442\\u043E\\u043A\\u043E\\u043B\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"generate-protocols-form\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"groupSelect\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u0440\\u0443\\u043F\\u043F\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          value: selectedGroup,\n          onChange: e => setSelectedGroup(e.target.value),\n          children: groups_for_schedule.map(group => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: group.name,\n            children: [group.name, \" (\", groupCounts[group.name] || 0, \" \\u0437\\u0430\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432)\"]\n          }, group.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleClick,\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0442\\u043E\\u043A\\u043E\\u043B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(GenerateProtocols, \"B0jQQ3Vsxi+L7k7n1aUNAL8pIk8=\");\n_c = GenerateProtocols;\nexport default GenerateProtocols;\nvar _c;\n$RefreshReg$(_c, \"GenerateProtocols\");","map":{"version":3,"names":["React","useState","Table","Col","Row","Button","Form","generateProtocolsFunction","jsxDEV","_jsxDEV","GenerateProtocols","composition_of_sec","groups_for_schedule","requestAndWorkProtection","data","_s","selectedGroup","setSelectedGroup","name","handleClick","groupData","filter","item","request","student","group","countRequestsPerGroup","groupCounts","forEach","groupName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","as","value","onChange","e","target","map","id","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/Forms/GenerateProtocols/GenerateProtocols.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Table, Col, Row, Button, Form } from 'react-bootstrap';\r\nimport generateProtocolsFunction from './GenerateProtocolFunction';\r\n\r\nfunction GenerateProtocols({ composition_of_sec, groups_for_schedule, requestAndWorkProtection, data }) {\r\n  const [selectedGroup, setSelectedGroup] = useState(groups_for_schedule[0].name);\r\n\r\n  const handleClick = async () => {\r\n    const groupData = requestAndWorkProtection.filter(item => item.request.student.group.name === selectedGroup);\r\n  \r\n    await generateProtocolsFunction({\r\n      composition_of_sec: composition_of_sec,\r\n      selectedGroup: selectedGroup,\r\n      groupData: groupData,\r\n      data: data\r\n    });\r\n  };\r\n\r\n  const countRequestsPerGroup = () => {\r\n    const groupCounts = {};\r\n    requestAndWorkProtection.forEach(item => {\r\n      const groupName = item.request.student.group.name;\r\n      if (groupCounts[groupName]) {\r\n        groupCounts[groupName]++;\r\n      } else {\r\n        groupCounts[groupName] = 1;\r\n      }\r\n    });\r\n    return groupCounts;\r\n  };\r\n\r\n  const groupCounts = countRequestsPerGroup();\r\n\r\n  return (\r\n    <div className=\"generate-protocols-container\">\r\n      <h4 className='generate-protocols-title'>Генерация протоколов</h4>\r\n      <Form className=\"generate-protocols-form\">\r\n        <Form.Group controlId=\"groupSelect\">\r\n          <Form.Label>Выберите группу</Form.Label>\r\n          <Form.Control as=\"select\" value={selectedGroup} onChange={(e) => setSelectedGroup(e.target.value)}>\r\n            {groups_for_schedule.map(group => (\r\n              <option key={group.id} value={group.name}>\r\n                {group.name} ({groupCounts[group.name] || 0} запросов)\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Button variant='primary' onClick={handleClick}>Создать протокол</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenerateProtocols;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}