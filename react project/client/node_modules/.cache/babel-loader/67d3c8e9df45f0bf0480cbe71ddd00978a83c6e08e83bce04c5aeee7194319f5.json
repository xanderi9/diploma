{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79131\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0445\\u043B\\u0430\\u043C\\\\react project\\\\client\\\\src\\\\components\\\\ProtectionSchedule\\\\ViewProtectionSchedulePersons.js\";\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewProtectionSchedulePersons = ({\n  protection_schedule,\n  students_list_for_schedule\n}) => {\n  const formatDate = date => {\n    const options = {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    };\n    return date.toLocaleDateString('ru-RU', options);\n  };\n  const getFullName = studentData => {\n    if (studentData && studentData.student) {\n      const {\n        last_name,\n        first_name,\n        patronymic\n      } = studentData.student;\n      return `${last_name} ${first_name} ${patronymic}`;\n    } else {\n      return 'Unknown';\n    }\n  };\n  const distributeStudentsByProtectionDays = schedule => {\n    const groupedSchedule = {};\n    const addedStudents = [];\n    schedule.forEach((item, index) => {\n      if (!item.group) return;\n      const dateKey = formatDate(item.date);\n      const groupName = item.group ? item.group.name : '';\n      const groupId = item.group ? item.group.id : '';\n      if (!groupedSchedule[dateKey]) {\n        groupedSchedule[dateKey] = {};\n      }\n      if (!groupedSchedule[dateKey][groupName]) {\n        groupedSchedule[dateKey][groupName] = [];\n      }\n      const students = students_list_for_schedule.filter(student => student.student.group.id === groupId);\n      students.forEach(student => {\n        const fullName = getFullName(student);\n        const existingStudent = addedStudents.find(s => s === fullName);\n        if (!existingStudent) {\n          groupedSchedule[dateKey][groupName].push({\n            fullName,\n            group: groupName,\n            date: dateKey\n          });\n          addedStudents.push(fullName);\n        }\n      });\n    });\n    return groupedSchedule;\n  };\n  const limitStudentsPerDay = schedule => {\n    Object.entries(schedule).forEach(([date, groups]) => {\n      Object.entries(groups).forEach(([group, students]) => {\n        const totalStudents = students.length;\n        if (totalStudents > 12) {\n          const firstDayStudents = students.slice(0, 12);\n          const secondDayStudents = students.slice(12);\n          schedule[date][group] = firstDayStudents;\n          const nextDay = new Date(date);\n          nextDay.setDate(nextDay.getDate() + 1);\n          const nextDayFormatted = formatDate(nextDay);\n          if (!schedule[nextDayFormatted]) {\n            schedule[nextDayFormatted] = {};\n          }\n          schedule[nextDayFormatted][group] = secondDayStudents;\n        }\n      });\n    });\n    return schedule;\n  };\n  const groupedSchedule = distributeStudentsByProtectionDays(protection_schedule);\n  const limitedSchedule = limitStudentsPerDay(groupedSchedule);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(limitedSchedule).map(([date, groups]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), Object.entries(groups).map(([group, students]) => /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0424\\u0418\\u041E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0414\\u0430\\u0442\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.group\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this)]\n      }, group, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this))]\n    }, date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_c = ViewProtectionSchedulePersons;\nexport default ViewProtectionSchedulePersons;\nvar _c;\n$RefreshReg$(_c, \"ViewProtectionSchedulePersons\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","ViewProtectionSchedulePersons","protection_schedule","students_list_for_schedule","formatDate","date","options","day","month","year","toLocaleDateString","getFullName","studentData","student","last_name","first_name","patronymic","distributeStudentsByProtectionDays","schedule","groupedSchedule","addedStudents","forEach","item","index","group","dateKey","groupName","name","groupId","id","students","filter","fullName","existingStudent","find","s","push","limitStudentsPerDay","Object","entries","groups","totalStudents","length","firstDayStudents","slice","secondDayStudents","nextDay","Date","setDate","getDate","nextDayFormatted","limitedSchedule","children","map","fileName","_jsxFileName","lineNumber","columnNumber","bordered","hover","_c","$RefreshReg$"],"sources":["C:/Users/79131/OneDrive/Рабочий стол/хлам/react project/client/src/components/ProtectionSchedule/ViewProtectionSchedulePersons.js"],"sourcesContent":["import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst ViewProtectionSchedulePersons = ({ protection_schedule, students_list_for_schedule }) => {\r\n    const formatDate = (date) => {\r\n        const options = { day: 'numeric', month: 'long', year: 'numeric' };\r\n        return date.toLocaleDateString('ru-RU', options);\r\n    };\r\n\r\n    const getFullName = (studentData) => {\r\n        if (studentData && studentData.student) {\r\n            const { last_name, first_name, patronymic } = studentData.student;\r\n            return `${last_name} ${first_name} ${patronymic}`;\r\n        } else {\r\n            return 'Unknown';\r\n        }\r\n    };\r\n\r\n    const distributeStudentsByProtectionDays = (schedule) => {\r\n        const groupedSchedule = {};\r\n        const addedStudents = [];\r\n\r\n        schedule.forEach((item, index) => {\r\n            if (!item.group) return;\r\n            const dateKey = formatDate(item.date);\r\n            const groupName = item.group ? item.group.name : '';\r\n            const groupId = item.group ? item.group.id : '';\r\n\r\n            if (!groupedSchedule[dateKey]) {\r\n                groupedSchedule[dateKey] = {};\r\n            }\r\n            if (!groupedSchedule[dateKey][groupName]) {\r\n                groupedSchedule[dateKey][groupName] = [];\r\n            }\r\n\r\n            const students = students_list_for_schedule.filter(student => student.student.group.id === groupId);\r\n            students.forEach(student => {\r\n                const fullName = getFullName(student);\r\n                const existingStudent = addedStudents.find(s => s === fullName);\r\n                if (!existingStudent) {\r\n                    groupedSchedule[dateKey][groupName].push({ fullName, group: groupName, date: dateKey });\r\n                    addedStudents.push(fullName);\r\n                }\r\n            });\r\n        });\r\n\r\n        return groupedSchedule;\r\n    };\r\n\r\n    const limitStudentsPerDay = (schedule) => {\r\n        Object.entries(schedule).forEach(([date, groups]) => {\r\n            Object.entries(groups).forEach(([group, students]) => {\r\n                const totalStudents = students.length;\r\n                if (totalStudents > 12) {\r\n                    const firstDayStudents = students.slice(0, 12);\r\n                    const secondDayStudents = students.slice(12);\r\n    \r\n                    schedule[date][group] = firstDayStudents;\r\n                    const nextDay = new Date(date);\r\n                    nextDay.setDate(nextDay.getDate() + 1);\r\n                    const nextDayFormatted = formatDate(nextDay);\r\n                    if (!schedule[nextDayFormatted]) {\r\n                        schedule[nextDayFormatted] = {};\r\n                    }\r\n                    schedule[nextDayFormatted][group] = secondDayStudents;\r\n                }\r\n            });\r\n        });\r\n        return schedule;\r\n    };\r\n\r\n    const groupedSchedule = distributeStudentsByProtectionDays(protection_schedule);\r\n    const limitedSchedule = limitStudentsPerDay(groupedSchedule);\r\n\r\n    return (\r\n        <div>\r\n            {Object.entries(limitedSchedule).map(([date, groups]) => (\r\n                <div key={date}>\r\n                    <h3>{date}</h3>\r\n                    {Object.entries(groups).map(([group, students]) => (\r\n                        <Table bordered hover key={group}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ФИО</th>\r\n                                    <th>Группа</th>\r\n                                    <th>Дата</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {students.map((student, index) => (\r\n                                    <tr key={index}>\r\n                                        <td>{student.fullName}</td>\r\n                                        <td>{student.group}</td>\r\n                                        <td>{student.date}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewProtectionSchedulePersons;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}