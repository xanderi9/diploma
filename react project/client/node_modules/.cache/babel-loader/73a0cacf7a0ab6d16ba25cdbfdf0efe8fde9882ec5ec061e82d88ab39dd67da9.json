{"ast":null,"code":"\"use strict\";\n\n(function () {\n  // Predefined values\n  var predef = {\n    genders: ['male', 'female', 'androgynous'],\n    nametypes: ['first', 'middle', 'last'],\n    cases: ['nominative', 'genitive', 'dative', 'accusative', 'instrumental', 'prepositional']\n  };\n\n  // Auxiliary function: no Array.indexOf owing to IE8\n  function contains(arr, x) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i] === x) return true;\n    }\n    return false;\n  }\n\n  // First use means:\n  // var person = { gender: 'female', first: 'Маша' };\n  // petrovich(person, 'dative');\n  var petrovich = function (person, gcase) {\n    var result = {};\n    // gender detection\n    if (person.gender != null) {\n      if (!contains(predef.genders, person.gender)) throw new Error('Invalid gender: ' + person.gender);\n      result.gender = person.gender;\n    } else if (person.middle != null) {\n      result.gender = petrovich.detect_gender(person.middle);\n    } else {\n      throw new Error('Unknown gender');\n    }\n    if (!contains(predef.cases, gcase)) throw new Error('Invalid case: ' + gcase);\n    // look over possible names of properties, inflect them and add to result object\n    for (var i = 0; i < predef.nametypes.length; i++) {\n      var nametype = predef.nametypes[i];\n      if (person[nametype] != null) {\n        result[nametype] = inflect(result.gender, person[nametype], gcase, nametype + 'name');\n      }\n    }\n    return result;\n  };\n  petrovich.detect_gender = function (middle) {\n    var ending = middle.toLowerCase().substr(middle.length - 2);\n    if (ending === 'ич') return 'male';else if (ending === 'на') return 'female';else return 'androgynous';\n  };\n\n  // Second use means:\n  // Build dynamically methods chain like petrovich.male.first.dative(name)\n  // Isolate scope to reduce polluting scope with temp variables\n  (function () {\n    for (var i = 0; i < predef.genders.length; i++) {\n      var gender = predef.genders[i];\n      if (!petrovich[gender]) petrovich[gender] = {};\n      for (var j = 0; j < predef.nametypes.length; j++) {\n        var nametype = predef.nametypes[j];\n        if (!petrovich[gender][nametype]) petrovich[gender][nametype] = {};\n        for (var k = 0; k < predef.cases.length; k++) {\n          var gcase = predef.cases[k];\n          // The flower on the mountain peak:\n          petrovich[gender][nametype][gcase] = function (gender, nametype, gcase) {\n            return function (name) {\n              return inflect(gender, name, gcase, nametype + 'name');\n            };\n          }(gender, nametype, gcase);\n        }\n      }\n    }\n  })();\n\n  // Export for NodeJS or browser\n  if (typeof module !== \"undefined\" && module.exports) module.exports = petrovich;else if (window) window.petrovich = petrovich;else throw new Error(\"Unknown environment\");\n\n  // Key private method, used by all public methods\n  function inflect(gender, name, gcase, nametype) {\n    var nametype_rulesets = rules[nametype],\n      parts = name.split('-'),\n      result = [];\n    for (var i = 0; i < parts.length; i++) {\n      var part = parts[i],\n        first_word = i === 0 && parts.size > 1,\n        rule = find_rule_global(gender, part, nametype_rulesets, {\n          first_word: first_word\n        });\n      if (rule) result.push(apply_rule(part, gcase, rule));else result.push(part);\n    }\n    return result.join('-');\n  }\n\n  // Find groups of rules in exceptions or suffixes of given nametype\n  function find_rule_global(gender, name, nametype_rulesets, features) {\n    if (!features) features = {};\n    var tags = [];\n    for (var key in features) {\n      if (features.hasOwnProperty(key)) tags.push(key);\n    }\n    if (nametype_rulesets.exceptions) {\n      var rule = find_rule_local(gender, name, nametype_rulesets.exceptions, true, tags);\n      if (rule) return rule;\n    }\n    return find_rule_local(gender, name, nametype_rulesets.suffixes, false, tags);\n  }\n  ;\n\n  // Local search in rulesets of exceptions or suffixes\n  function find_rule_local(gender, name, ruleset, match_whole_word, tags) {\n    for (var i = 0; i < ruleset.length; i++) {\n      var rule = ruleset[i];\n      if (rule.tags) {\n        var common_tags = [];\n        for (var j = 0; j < rule.tags.length; j++) {\n          var tag = rule.tags[j];\n          if (!contains(tags, tag)) common_tags.push(tag);\n        }\n        if (!common_tags.length) continue;\n      }\n      if (rule.gender !== 'androgynous' && gender !== rule.gender) continue;\n      name = name.toLowerCase();\n      for (var j = 0; j < rule.test.length; j++) {\n        var sample = rule.test[j];\n        var test = match_whole_word ? name : name.substr(name.length - sample.length);\n        if (test === sample) return rule;\n      }\n    }\n    return false;\n  }\n\n  // Apply found rule to given name\n  // Move error throwing from this function to API method\n  function apply_rule(name, gcase, rule) {\n    var mod;\n    if (gcase === 'nominative') mod = '.';else {\n      for (var i = 0; i < predef.cases.length; i++) {\n        if (gcase === predef.cases[i]) {\n          mod = rule.mods[i - 1];\n          break;\n        }\n      }\n    }\n    for (var i = 0; i < mod.length; i++) {\n      var chr = mod[i];\n      switch (chr) {\n        case '.':\n          break;\n        case '-':\n          name = name.substr(0, name.length - 1);\n          break;\n        default:\n          name += chr;\n      }\n    }\n    return name;\n  }\n  var rules = {\n    \"lastname\": {\n      \"exceptions\": [{\n        \"gender\": \"androgynous\",\n        \"test\": [\"бонч\", \"абдул\", \"белиц\", \"гасан\", \"дюссар\", \"дюмон\", \"книппер\", \"корвин\", \"ван\", \"шолом\", \"тер\", \"призван\", \"мелик\", \"вар\", \"фон\"],\n        \"mods\": [\".\", \".\", \".\", \".\", \".\"],\n        \"tags\": [\"first_word\"]\n      }, {\n        \"gender\": \"androgynous\",\n        \"test\": [\"дюма\", \"тома\", \"дега\", \"люка\", \"ферма\", \"гамарра\", \"петипа\", \"шандра\", \"скаля\", \"каруана\"],\n        \"mods\": [\".\", \".\", \".\", \".\", \".\"]\n      }, {\n        \"gender\": \"androgynous\",\n        \"test\": [\"гусь\", \"ремень\", \"камень\", \"онук\", \"богода\", \"нечипас\", \"долгопалец\", \"маненок\", \"рева\", \"кива\"],\n        \"mods\": [\".\", \".\", \".\", \".\", \".\"]\n      }, {\n        \"gender\": \"androgynous\",\n        \"test\": [\"вий\", \"сой\", \"цой\", \"хой\"],\n        \"mods\": [\"-я\", \"-ю\", \"-я\", \"-ем\", \"-е\"]\n      }, {\n        \"gender\": \"androgynous\",\n        \"test\": [\"я\"],\n        \"mods\": [\".\", \".\", \".\", \".\", \".\"]\n      }],\n      \"suffixes\": [{\n        \"gender\": \"female\",\n        \"test\": [\"б\", \"в\", \"г\", \"д\", \"ж\", \"з\", \"й\", \"к\", \"л\", \"м\", \"н\", \"п\", \"р\", \"с\", \"т\", \"ф\", \"х\", \"ц\", \"ч\", \"ш\", \"щ\", \"ъ\", \"ь\"],\n        \"mods\": [\".\", \".\", \".\", \".\", \".\"]\n      }, {\n        \"gender\": \"androgynous\",\n        \"test\": [\"гава\", \"орота\"],\n        \"mods\": [\".\", \".\", \".\", \".\", \".\"]\n      }, {\n        \"gender\": \"female\",\n        \"test\": [\"ска\", \"цка\"],\n        \"mods\": [\"-ой\", \"-ой\", \"-ую\", \"-ой\", \"-ой\"]\n      }, {\n        \"gender\": \"female\",\n        \"test\": [\"цкая\", \"ская\", \"ная\", \"ая\"],\n        \"mods\": [\"--ой\", \"--ой\", \"--ую\", \"--ой\", \"--ой\"]\n      }, {\n        \"gender\": \"female\",\n        \"test\": [\"яя\"],\n        \"mods\": [\"--ей\", \"--ей\", \"--юю\", \"--ей\", \"--ей\"]\n      }, {\n        \"gender\": \"female\",\n        \"test\": [\"на\"],\n        \"mods\": [\"-ой\", \"-ой\", \"-у\", \"-ой\", \"-ой\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"иной\"],\n        \"mods\": [\"-я\", \"-ю\", \"-я\", \"-ем\", \"-е\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"уй\"],\n        \"mods\": [\"-я\", \"-ю\", \"-я\", \"-ем\", \"-е\"]\n      }, {\n        \"gender\": \"androgynous\",\n        \"test\": [\"ца\"],\n        \"mods\": [\"-ы\", \"-е\", \"-у\", \"-ей\", \"-е\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"рих\"],\n        \"mods\": [\"а\", \"у\", \"а\", \"ом\", \"е\"]\n      }, {\n        \"gender\": \"androgynous\",\n        \"test\": [\"ия\"],\n        \"mods\": [\".\", \".\", \".\", \".\", \".\"]\n      }, {\n        \"gender\": \"androgynous\",\n        \"test\": [\"иа\", \"аа\", \"оа\", \"уа\", \"ыа\", \"еа\", \"юа\", \"эа\"],\n        \"mods\": [\".\", \".\", \".\", \".\", \".\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"их\", \"ых\"],\n        \"mods\": [\".\", \".\", \".\", \".\", \".\"]\n      }, {\n        \"gender\": \"androgynous\",\n        \"test\": [\"о\", \"е\", \"э\", \"и\", \"ы\", \"у\", \"ю\"],\n        \"mods\": [\".\", \".\", \".\", \".\", \".\"]\n      }, {\n        \"gender\": \"female\",\n        \"test\": [\"ова\", \"ева\"],\n        \"mods\": [\"-ой\", \"-ой\", \"-у\", \"-ой\", \"-ой\"]\n      }, {\n        \"gender\": \"androgynous\",\n        \"test\": [\"га\", \"ка\", \"ха\", \"ча\", \"ща\", \"жа\", \"ша\"],\n        \"mods\": [\"-и\", \"-е\", \"-у\", \"-ой\", \"-е\"]\n      }, {\n        \"gender\": \"androgynous\",\n        \"test\": [\"а\"],\n        \"mods\": [\"-ы\", \"-е\", \"-у\", \"-ой\", \"-е\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ь\"],\n        \"mods\": [\"-я\", \"-ю\", \"-я\", \"-ем\", \"-е\"]\n      }, {\n        \"gender\": \"androgynous\",\n        \"test\": [\"ия\"],\n        \"mods\": [\"-и\", \"-и\", \"-ю\", \"-ей\", \"-и\"]\n      }, {\n        \"gender\": \"androgynous\",\n        \"test\": [\"я\"],\n        \"mods\": [\"-и\", \"-е\", \"-ю\", \"-ей\", \"-е\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ей\"],\n        \"mods\": [\"-я\", \"-ю\", \"-я\", \"-ем\", \"-е\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ян\", \"ан\", \"йн\"],\n        \"mods\": [\"а\", \"у\", \"а\", \"ом\", \"е\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ынец\", \"обец\"],\n        \"mods\": [\"--ца\", \"--цу\", \"--ца\", \"--цем\", \"--це\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"онец\", \"овец\"],\n        \"mods\": [\"--ца\", \"--цу\", \"--ца\", \"--цом\", \"--це\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ай\"],\n        \"mods\": [\"-я\", \"-ю\", \"-я\", \"-ем\", \"-е\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"кой\"],\n        \"mods\": [\"-го\", \"-му\", \"-го\", \"--им\", \"-м\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"гой\"],\n        \"mods\": [\"-го\", \"-му\", \"-го\", \"--им\", \"-м\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ой\"],\n        \"mods\": [\"-го\", \"-му\", \"-го\", \"--ым\", \"-м\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ах\", \"ив\"],\n        \"mods\": [\"а\", \"у\", \"а\", \"ом\", \"е\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ший\", \"щий\", \"жий\", \"ний\"],\n        \"mods\": [\"--его\", \"--ему\", \"--его\", \"-м\", \"--ем\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ый\"],\n        \"mods\": [\"--ого\", \"--ому\", \"--ого\", \"-м\", \"--ом\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"кий\"],\n        \"mods\": [\"--ого\", \"--ому\", \"--ого\", \"-м\", \"--ом\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ий\"],\n        \"mods\": [\"-я\", \"-ю\", \"-я\", \"-ем\", \"-и\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ок\"],\n        \"mods\": [\"--ка\", \"--ку\", \"--ка\", \"--ком\", \"--ке\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ец\"],\n        \"mods\": [\"--ца\", \"--цу\", \"--ца\", \"--цом\", \"--це\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ц\", \"ч\", \"ш\", \"щ\"],\n        \"mods\": [\"а\", \"у\", \"а\", \"ем\", \"е\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ен\", \"нн\", \"он\", \"ун\"],\n        \"mods\": [\"а\", \"у\", \"а\", \"ом\", \"е\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"в\", \"н\"],\n        \"mods\": [\"а\", \"у\", \"а\", \"ым\", \"е\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"б\", \"г\", \"д\", \"ж\", \"з\", \"к\", \"л\", \"м\", \"п\", \"р\", \"с\", \"т\", \"ф\", \"х\"],\n        \"mods\": [\"а\", \"у\", \"а\", \"ом\", \"е\"]\n      }]\n    },\n    \"firstname\": {\n      \"exceptions\": [{\n        \"gender\": \"male\",\n        \"test\": [\"лев\"],\n        \"mods\": [\"--ьва\", \"--ьву\", \"--ьва\", \"--ьвом\", \"--ьве\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"пётр\"],\n        \"mods\": [\"---етра\", \"---етру\", \"---етра\", \"---етром\", \"---етре\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"павел\"],\n        \"mods\": [\"--ла\", \"--лу\", \"--ла\", \"--лом\", \"--ле\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"яша\"],\n        \"mods\": [\"-и\", \"-е\", \"-у\", \"-ей\", \"-е\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"шота\"],\n        \"mods\": [\".\", \".\", \".\", \".\", \".\"]\n      }, {\n        \"gender\": \"female\",\n        \"test\": [\"рашель\", \"нинель\", \"николь\", \"габриэль\", \"даниэль\"],\n        \"mods\": [\".\", \".\", \".\", \".\", \".\"]\n      }],\n      \"suffixes\": [{\n        \"gender\": \"androgynous\",\n        \"test\": [\"е\", \"ё\", \"и\", \"о\", \"у\", \"ы\", \"э\", \"ю\"],\n        \"mods\": [\".\", \".\", \".\", \".\", \".\"]\n      }, {\n        \"gender\": \"female\",\n        \"test\": [\"б\", \"в\", \"г\", \"д\", \"ж\", \"з\", \"й\", \"к\", \"л\", \"м\", \"н\", \"п\", \"р\", \"с\", \"т\", \"ф\", \"х\", \"ц\", \"ч\", \"ш\", \"щ\", \"ъ\"],\n        \"mods\": [\".\", \".\", \".\", \".\", \".\"]\n      }, {\n        \"gender\": \"female\",\n        \"test\": [\"ь\"],\n        \"mods\": [\"-и\", \"-и\", \".\", \"ю\", \"-и\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ь\"],\n        \"mods\": [\"-я\", \"-ю\", \"-я\", \"-ем\", \"-е\"]\n      }, {\n        \"gender\": \"androgynous\",\n        \"test\": [\"га\", \"ка\", \"ха\", \"ча\", \"ща\", \"жа\"],\n        \"mods\": [\"-и\", \"-е\", \"-у\", \"-ой\", \"-е\"]\n      }, {\n        \"gender\": \"female\",\n        \"test\": [\"ша\"],\n        \"mods\": [\"-и\", \"-е\", \"-у\", \"-ей\", \"-е\"]\n      }, {\n        \"gender\": \"androgynous\",\n        \"test\": [\"а\"],\n        \"mods\": [\"-ы\", \"-е\", \"-у\", \"-ой\", \"-е\"]\n      }, {\n        \"gender\": \"female\",\n        \"test\": [\"ия\"],\n        \"mods\": [\"-и\", \"-и\", \"-ю\", \"-ей\", \"-и\"]\n      }, {\n        \"gender\": \"female\",\n        \"test\": [\"а\"],\n        \"mods\": [\"-ы\", \"-е\", \"-у\", \"-ой\", \"-е\"]\n      }, {\n        \"gender\": \"female\",\n        \"test\": [\"я\"],\n        \"mods\": [\"-и\", \"-е\", \"-ю\", \"-ей\", \"-е\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ия\"],\n        \"mods\": [\"-и\", \"-и\", \"-ю\", \"-ей\", \"-и\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"я\"],\n        \"mods\": [\"-и\", \"-е\", \"-ю\", \"-ей\", \"-е\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ей\"],\n        \"mods\": [\"-я\", \"-ю\", \"-я\", \"-ем\", \"-е\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"ий\"],\n        \"mods\": [\"-я\", \"-ю\", \"-я\", \"-ем\", \"-и\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"й\"],\n        \"mods\": [\"-я\", \"-ю\", \"-я\", \"-ем\", \"-е\"]\n      }, {\n        \"gender\": \"male\",\n        \"test\": [\"б\", \"в\", \"г\", \"д\", \"ж\", \"з\", \"к\", \"л\", \"м\", \"н\", \"п\", \"р\", \"с\", \"т\", \"ф\", \"х\", \"ц\", \"ч\"],\n        \"mods\": [\"а\", \"у\", \"а\", \"ом\", \"е\"]\n      }, {\n        \"gender\": \"androgynous\",\n        \"test\": [\"ния\", \"рия\", \"вия\"],\n        \"mods\": [\"-и\", \"-и\", \"-ю\", \"-ем\", \"-ем\"]\n      }]\n    },\n    \"middlename\": {\n      \"suffixes\": [{\n        \"gender\": \"male\",\n        \"test\": [\"ич\"],\n        \"mods\": [\"а\", \"у\", \"а\", \"ем\", \"е\"]\n      }, {\n        \"gender\": \"female\",\n        \"test\": [\"на\"],\n        \"mods\": [\"-ы\", \"-е\", \"-у\", \"-ой\", \"-е\"]\n      }]\n    }\n  };\n})();","map":{"version":3,"names":["predef","genders","nametypes","cases","contains","arr","x","i","length","petrovich","person","gcase","result","gender","Error","middle","detect_gender","nametype","inflect","ending","toLowerCase","substr","j","k","name","module","exports","window","nametype_rulesets","rules","parts","split","part","first_word","size","rule","find_rule_global","push","apply_rule","join","features","tags","key","hasOwnProperty","exceptions","find_rule_local","suffixes","ruleset","match_whole_word","common_tags","tag","test","sample","mod","mods","chr"],"sources":["C:/study/react project/client/node_modules/petrovich/dist/petrovich.js"],"sourcesContent":["\"use strict\";\n\n(function () {\n\n    // Predefined values\n    var predef = {\n        genders: ['male', 'female', 'androgynous'],\n        nametypes: ['first', 'middle', 'last'],\n        cases: ['nominative', 'genitive', 'dative', 'accusative', 'instrumental', 'prepositional']\n    };\n\n    // Auxiliary function: no Array.indexOf owing to IE8\n    function contains(arr, x) {\n        for (var i = 0; i < arr.length; i++) {\n            if (arr[i] === x) return true;\n        }\n        return false;\n    }\n\n    // First use means:\n    // var person = { gender: 'female', first: 'Маша' };\n    // petrovich(person, 'dative');\n    var petrovich = function (person, gcase) {\n        var result = {};\n        // gender detection\n        if (person.gender != null) {\n            if (!contains(predef.genders, person.gender))\n                throw new Error('Invalid gender: ' + person.gender);\n            result.gender = person.gender;\n        } else if (person.middle != null) {\n            result.gender = petrovich.detect_gender(person.middle);\n        } else {\n            throw new Error('Unknown gender');\n        }\n        if (!contains(predef.cases, gcase))\n            throw new Error('Invalid case: ' + gcase);\n        // look over possible names of properties, inflect them and add to result object\n        for (var i = 0; i < predef.nametypes.length; i++) {\n            var nametype = predef.nametypes[i];\n            if (person[nametype] != null) {\n                result[nametype] =\n                    inflect(result.gender, person[nametype], gcase, nametype + 'name');\n            }\n        }\n        return result;\n    };\n\n    petrovich.detect_gender = function (middle) {\n        var ending = middle.toLowerCase().substr(middle.length - 2);\n        if (ending === 'ич') return 'male';\n        else if (ending === 'на') return 'female';\n        else return 'androgynous';\n    };\n\n    // Second use means:\n    // Build dynamically methods chain like petrovich.male.first.dative(name)\n    // Isolate scope to reduce polluting scope with temp variables\n    (function () {\n        for (var i = 0; i < predef.genders.length; i++) {\n            var gender = predef.genders[i];\n\n            if (!petrovich[gender]) petrovich[gender] = {};\n\n            for (var j = 0; j < predef.nametypes.length; j++) {\n                var nametype = predef.nametypes[j];\n                if (!petrovich[gender][nametype])\n                    petrovich[gender][nametype] = {};\n\n                for (var k = 0; k < predef.cases.length; k++) {\n                    var gcase = predef.cases[k];\n                    // The flower on the mountain peak:\n                    petrovich[gender][nametype][gcase] =\n                        (function (gender, nametype, gcase) {\n                            return function (name) {\n                                return inflect(gender, name, gcase, nametype + 'name');\n                            };\n                        })(gender, nametype, gcase);\n                }\n            }\n        }\n    })();\n\n\n    // Export for NodeJS or browser\n    if (typeof module !== \"undefined\" && module.exports) module.exports = petrovich;\n    else if (window) window.petrovich = petrovich;\n    else throw new Error(\"Unknown environment\");\n\n\n    // Key private method, used by all public methods\n    function inflect(gender, name, gcase, nametype) {\n        var nametype_rulesets = rules[nametype],\n            parts = name.split('-'),\n            result = [];\n        for (var i = 0; i < parts.length; i++) {\n            var part = parts[i], first_word = i === 0 && parts.size > 1,\n                rule = find_rule_global(gender, part,\n                    nametype_rulesets, {first_word: first_word});\n            if (rule) result.push(apply_rule(part, gcase, rule));\n            else result.push(part);\n        }\n        return result.join('-');\n    }\n\n\n    // Find groups of rules in exceptions or suffixes of given nametype\n    function find_rule_global(gender, name, nametype_rulesets, features) {\n        if (!features) features = {};\n        var tags = [];\n        for (var key in features) {\n            if (features.hasOwnProperty(key)) tags.push(key);\n        }\n        if (nametype_rulesets.exceptions) {\n            var rule = find_rule_local(\n                gender, name, nametype_rulesets.exceptions, true, tags);\n            if (rule) return rule;\n        }\n        return find_rule_local(\n            gender, name, nametype_rulesets.suffixes, false, tags);\n    };\n\n\n    // Local search in rulesets of exceptions or suffixes\n    function find_rule_local(gender, name, ruleset, match_whole_word, tags) {\n        for (var i = 0; i < ruleset.length; i++) {\n            var rule = ruleset[i];\n            if (rule.tags) {\n                var common_tags = [];\n                for (var j = 0; j < rule.tags.length; j++) {\n                    var tag = rule.tags[j];\n                    if (!contains(tags, tag)) common_tags.push(tag);\n                }\n                if (!common_tags.length) continue;\n            }\n            if (rule.gender !== 'androgynous' && gender !== rule.gender)\n                continue;\n\n            name = name.toLowerCase();\n            for (var j = 0; j < rule.test.length; j++) {\n                var sample = rule.test[j];\n                var test = match_whole_word ? name :\n                    name.substr(name.length - sample.length);\n                if (test === sample) return rule;\n            }\n        }\n        return false;\n    }\n\n\n    // Apply found rule to given name\n    // Move error throwing from this function to API method\n    function apply_rule(name, gcase, rule) {\n        var mod;\n        if (gcase === 'nominative') mod = '.';\n        else {\n            for (var i = 0; i < predef.cases.length; i++) {\n                if (gcase === predef.cases[i]) {\n                    mod = rule.mods[i - 1];\n                    break;\n                }\n\n            }\n        }\n\n        for (var i = 0; i < mod.length; i++) {\n            var chr = mod[i];\n            switch (chr) {\n                case '.':\n                    break;\n                case '-':\n                    name = name.substr(0, name.length - 1);\n                    break;\n                default:\n                    name += chr;\n            }\n        }\n        return name;\n    }\n\n\n    var rules = \n{\n  \"lastname\": {\n    \"exceptions\": [\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"бонч\",\n          \"абдул\",\n          \"белиц\",\n          \"гасан\",\n          \"дюссар\",\n          \"дюмон\",\n          \"книппер\",\n          \"корвин\",\n          \"ван\",\n          \"шолом\",\n          \"тер\",\n          \"призван\",\n          \"мелик\",\n          \"вар\",\n          \"фон\"\n        ],\n        \"mods\": [\n          \".\",\n          \".\",\n          \".\",\n          \".\",\n          \".\"\n        ],\n        \"tags\": [\n          \"first_word\"\n        ]\n      },\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"дюма\",\n          \"тома\",\n          \"дега\",\n          \"люка\",\n          \"ферма\",\n          \"гамарра\",\n          \"петипа\",\n          \"шандра\",\n          \"скаля\",\n          \"каруана\"\n        ],\n        \"mods\": [\n          \".\",\n          \".\",\n          \".\",\n          \".\",\n          \".\"\n        ]\n      },\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"гусь\",\n          \"ремень\",\n          \"камень\",\n          \"онук\",\n          \"богода\",\n          \"нечипас\",\n          \"долгопалец\",\n          \"маненок\",\n          \"рева\",\n          \"кива\"\n        ],\n        \"mods\": [\n          \".\",\n          \".\",\n          \".\",\n          \".\",\n          \".\"\n        ]\n      },\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"вий\",\n          \"сой\",\n          \"цой\",\n          \"хой\"\n        ],\n        \"mods\": [\n          \"-я\",\n          \"-ю\",\n          \"-я\",\n          \"-ем\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"я\"\n        ],\n        \"mods\": [\n          \".\",\n          \".\",\n          \".\",\n          \".\",\n          \".\"\n        ]\n      }\n    ],\n    \"suffixes\": [\n      {\n        \"gender\": \"female\",\n        \"test\": [\n          \"б\",\n          \"в\",\n          \"г\",\n          \"д\",\n          \"ж\",\n          \"з\",\n          \"й\",\n          \"к\",\n          \"л\",\n          \"м\",\n          \"н\",\n          \"п\",\n          \"р\",\n          \"с\",\n          \"т\",\n          \"ф\",\n          \"х\",\n          \"ц\",\n          \"ч\",\n          \"ш\",\n          \"щ\",\n          \"ъ\",\n          \"ь\"\n        ],\n        \"mods\": [\n          \".\",\n          \".\",\n          \".\",\n          \".\",\n          \".\"\n        ]\n      },\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"гава\",\n          \"орота\"\n        ],\n        \"mods\": [\n          \".\",\n          \".\",\n          \".\",\n          \".\",\n          \".\"\n        ]\n      },\n      {\n        \"gender\": \"female\",\n        \"test\": [\n          \"ска\",\n          \"цка\"\n        ],\n        \"mods\": [\n          \"-ой\",\n          \"-ой\",\n          \"-ую\",\n          \"-ой\",\n          \"-ой\"\n        ]\n      },\n      {\n        \"gender\": \"female\",\n        \"test\": [\n          \"цкая\",\n          \"ская\",\n          \"ная\",\n          \"ая\"\n        ],\n        \"mods\": [\n          \"--ой\",\n          \"--ой\",\n          \"--ую\",\n          \"--ой\",\n          \"--ой\"\n        ]\n      },\n      {\n        \"gender\": \"female\",\n        \"test\": [\n          \"яя\"\n        ],\n        \"mods\": [\n          \"--ей\",\n          \"--ей\",\n          \"--юю\",\n          \"--ей\",\n          \"--ей\"\n        ]\n      },\n      {\n        \"gender\": \"female\",\n        \"test\": [\n          \"на\"\n        ],\n        \"mods\": [\n          \"-ой\",\n          \"-ой\",\n          \"-у\",\n          \"-ой\",\n          \"-ой\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"иной\"\n        ],\n        \"mods\": [\n          \"-я\",\n          \"-ю\",\n          \"-я\",\n          \"-ем\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"уй\"\n        ],\n        \"mods\": [\n          \"-я\",\n          \"-ю\",\n          \"-я\",\n          \"-ем\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"ца\"\n        ],\n        \"mods\": [\n          \"-ы\",\n          \"-е\",\n          \"-у\",\n          \"-ей\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"рих\"\n        ],\n        \"mods\": [\n          \"а\",\n          \"у\",\n          \"а\",\n          \"ом\",\n          \"е\"\n        ]\n      },\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"ия\"\n        ],\n        \"mods\": [\n          \".\",\n          \".\",\n          \".\",\n          \".\",\n          \".\"\n        ]\n      },\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"иа\",\n          \"аа\",\n          \"оа\",\n          \"уа\",\n          \"ыа\",\n          \"еа\",\n          \"юа\",\n          \"эа\"\n        ],\n        \"mods\": [\n          \".\",\n          \".\",\n          \".\",\n          \".\",\n          \".\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"их\",\n          \"ых\"\n        ],\n        \"mods\": [\n          \".\",\n          \".\",\n          \".\",\n          \".\",\n          \".\"\n        ]\n      },\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"о\",\n          \"е\",\n          \"э\",\n          \"и\",\n          \"ы\",\n          \"у\",\n          \"ю\"\n        ],\n        \"mods\": [\n          \".\",\n          \".\",\n          \".\",\n          \".\",\n          \".\"\n        ]\n      },\n      {\n        \"gender\": \"female\",\n        \"test\": [\n          \"ова\",\n          \"ева\"\n        ],\n        \"mods\": [\n          \"-ой\",\n          \"-ой\",\n          \"-у\",\n          \"-ой\",\n          \"-ой\"\n        ]\n      },\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"га\",\n          \"ка\",\n          \"ха\",\n          \"ча\",\n          \"ща\",\n          \"жа\",\n          \"ша\"\n        ],\n        \"mods\": [\n          \"-и\",\n          \"-е\",\n          \"-у\",\n          \"-ой\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"а\"\n        ],\n        \"mods\": [\n          \"-ы\",\n          \"-е\",\n          \"-у\",\n          \"-ой\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ь\"\n        ],\n        \"mods\": [\n          \"-я\",\n          \"-ю\",\n          \"-я\",\n          \"-ем\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"ия\"\n        ],\n        \"mods\": [\n          \"-и\",\n          \"-и\",\n          \"-ю\",\n          \"-ей\",\n          \"-и\"\n        ]\n      },\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"я\"\n        ],\n        \"mods\": [\n          \"-и\",\n          \"-е\",\n          \"-ю\",\n          \"-ей\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ей\"\n        ],\n        \"mods\": [\n          \"-я\",\n          \"-ю\",\n          \"-я\",\n          \"-ем\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ян\",\n          \"ан\",\n          \"йн\"\n        ],\n        \"mods\": [\n          \"а\",\n          \"у\",\n          \"а\",\n          \"ом\",\n          \"е\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ынец\",\n          \"обец\"\n        ],\n        \"mods\": [\n          \"--ца\",\n          \"--цу\",\n          \"--ца\",\n          \"--цем\",\n          \"--це\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"онец\",\n          \"овец\"\n        ],\n        \"mods\": [\n          \"--ца\",\n          \"--цу\",\n          \"--ца\",\n          \"--цом\",\n          \"--це\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ай\"\n        ],\n        \"mods\": [\n          \"-я\",\n          \"-ю\",\n          \"-я\",\n          \"-ем\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"кой\"\n        ],\n        \"mods\": [\n          \"-го\",\n          \"-му\",\n          \"-го\",\n          \"--им\",\n          \"-м\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"гой\"\n        ],\n        \"mods\": [\n          \"-го\",\n          \"-му\",\n          \"-го\",\n          \"--им\",\n          \"-м\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ой\"\n        ],\n        \"mods\": [\n          \"-го\",\n          \"-му\",\n          \"-го\",\n          \"--ым\",\n          \"-м\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ах\",\n          \"ив\"\n        ],\n        \"mods\": [\n          \"а\",\n          \"у\",\n          \"а\",\n          \"ом\",\n          \"е\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ший\",\n          \"щий\",\n          \"жий\",\n          \"ний\"\n        ],\n        \"mods\": [\n          \"--его\",\n          \"--ему\",\n          \"--его\",\n          \"-м\",\n          \"--ем\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ый\"\n        ],\n        \"mods\": [\n          \"--ого\",\n          \"--ому\",\n          \"--ого\",\n          \"-м\",\n          \"--ом\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"кий\"\n        ],\n        \"mods\": [\n          \"--ого\",\n          \"--ому\",\n          \"--ого\",\n          \"-м\",\n          \"--ом\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ий\"\n        ],\n        \"mods\": [\n          \"-я\",\n          \"-ю\",\n          \"-я\",\n          \"-ем\",\n          \"-и\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ок\"\n        ],\n        \"mods\": [\n          \"--ка\",\n          \"--ку\",\n          \"--ка\",\n          \"--ком\",\n          \"--ке\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ец\"\n        ],\n        \"mods\": [\n          \"--ца\",\n          \"--цу\",\n          \"--ца\",\n          \"--цом\",\n          \"--це\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ц\",\n          \"ч\",\n          \"ш\",\n          \"щ\"\n        ],\n        \"mods\": [\n          \"а\",\n          \"у\",\n          \"а\",\n          \"ем\",\n          \"е\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ен\",\n          \"нн\",\n          \"он\",\n          \"ун\"\n        ],\n        \"mods\": [\n          \"а\",\n          \"у\",\n          \"а\",\n          \"ом\",\n          \"е\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"в\",\n          \"н\"\n        ],\n        \"mods\": [\n          \"а\",\n          \"у\",\n          \"а\",\n          \"ым\",\n          \"е\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"б\",\n          \"г\",\n          \"д\",\n          \"ж\",\n          \"з\",\n          \"к\",\n          \"л\",\n          \"м\",\n          \"п\",\n          \"р\",\n          \"с\",\n          \"т\",\n          \"ф\",\n          \"х\"\n        ],\n        \"mods\": [\n          \"а\",\n          \"у\",\n          \"а\",\n          \"ом\",\n          \"е\"\n        ]\n      }\n    ]\n  },\n  \"firstname\": {\n    \"exceptions\": [\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"лев\"\n        ],\n        \"mods\": [\n          \"--ьва\",\n          \"--ьву\",\n          \"--ьва\",\n          \"--ьвом\",\n          \"--ьве\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"пётр\"\n        ],\n        \"mods\": [\n          \"---етра\",\n          \"---етру\",\n          \"---етра\",\n          \"---етром\",\n          \"---етре\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"павел\"\n        ],\n        \"mods\": [\n          \"--ла\",\n          \"--лу\",\n          \"--ла\",\n          \"--лом\",\n          \"--ле\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"яша\"\n        ],\n        \"mods\": [\n          \"-и\",\n          \"-е\",\n          \"-у\",\n          \"-ей\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"шота\"\n        ],\n        \"mods\": [\n          \".\",\n          \".\",\n          \".\",\n          \".\",\n          \".\"\n        ]\n      },\n      {\n        \"gender\": \"female\",\n        \"test\": [\n          \"рашель\",\n          \"нинель\",\n          \"николь\",\n          \"габриэль\",\n          \"даниэль\"\n        ],\n        \"mods\": [\n          \".\",\n          \".\",\n          \".\",\n          \".\",\n          \".\"\n        ]\n      }\n    ],\n    \"suffixes\": [\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"е\",\n          \"ё\",\n          \"и\",\n          \"о\",\n          \"у\",\n          \"ы\",\n          \"э\",\n          \"ю\"\n        ],\n        \"mods\": [\n          \".\",\n          \".\",\n          \".\",\n          \".\",\n          \".\"\n        ]\n      },\n      {\n        \"gender\": \"female\",\n        \"test\": [\n          \"б\",\n          \"в\",\n          \"г\",\n          \"д\",\n          \"ж\",\n          \"з\",\n          \"й\",\n          \"к\",\n          \"л\",\n          \"м\",\n          \"н\",\n          \"п\",\n          \"р\",\n          \"с\",\n          \"т\",\n          \"ф\",\n          \"х\",\n          \"ц\",\n          \"ч\",\n          \"ш\",\n          \"щ\",\n          \"ъ\"\n        ],\n        \"mods\": [\n          \".\",\n          \".\",\n          \".\",\n          \".\",\n          \".\"\n        ]\n      },\n      {\n        \"gender\": \"female\",\n        \"test\": [\n          \"ь\"\n        ],\n        \"mods\": [\n          \"-и\",\n          \"-и\",\n          \".\",\n          \"ю\",\n          \"-и\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ь\"\n        ],\n        \"mods\": [\n          \"-я\",\n          \"-ю\",\n          \"-я\",\n          \"-ем\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"га\",\n          \"ка\",\n          \"ха\",\n          \"ча\",\n          \"ща\",\n          \"жа\"\n        ],\n        \"mods\": [\n          \"-и\",\n          \"-е\",\n          \"-у\",\n          \"-ой\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"female\",\n        \"test\": [\n          \"ша\"\n        ],\n        \"mods\": [\n          \"-и\",\n          \"-е\",\n          \"-у\",\n          \"-ей\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"а\"\n        ],\n        \"mods\": [\n          \"-ы\",\n          \"-е\",\n          \"-у\",\n          \"-ой\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"female\",\n        \"test\": [\n          \"ия\"\n        ],\n        \"mods\": [\n          \"-и\",\n          \"-и\",\n          \"-ю\",\n          \"-ей\",\n          \"-и\"\n        ]\n      },\n      {\n        \"gender\": \"female\",\n        \"test\": [\n          \"а\"\n        ],\n        \"mods\": [\n          \"-ы\",\n          \"-е\",\n          \"-у\",\n          \"-ой\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"female\",\n        \"test\": [\n          \"я\"\n        ],\n        \"mods\": [\n          \"-и\",\n          \"-е\",\n          \"-ю\",\n          \"-ей\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ия\"\n        ],\n        \"mods\": [\n          \"-и\",\n          \"-и\",\n          \"-ю\",\n          \"-ей\",\n          \"-и\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"я\"\n        ],\n        \"mods\": [\n          \"-и\",\n          \"-е\",\n          \"-ю\",\n          \"-ей\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ей\"\n        ],\n        \"mods\": [\n          \"-я\",\n          \"-ю\",\n          \"-я\",\n          \"-ем\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ий\"\n        ],\n        \"mods\": [\n          \"-я\",\n          \"-ю\",\n          \"-я\",\n          \"-ем\",\n          \"-и\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"й\"\n        ],\n        \"mods\": [\n          \"-я\",\n          \"-ю\",\n          \"-я\",\n          \"-ем\",\n          \"-е\"\n        ]\n      },\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"б\",\n          \"в\",\n          \"г\",\n          \"д\",\n          \"ж\",\n          \"з\",\n          \"к\",\n          \"л\",\n          \"м\",\n          \"н\",\n          \"п\",\n          \"р\",\n          \"с\",\n          \"т\",\n          \"ф\",\n          \"х\",\n          \"ц\",\n          \"ч\"\n        ],\n        \"mods\": [\n          \"а\",\n          \"у\",\n          \"а\",\n          \"ом\",\n          \"е\"\n        ]\n      },\n      {\n        \"gender\": \"androgynous\",\n        \"test\": [\n          \"ния\",\n          \"рия\",\n          \"вия\"\n        ],\n        \"mods\": [\n          \"-и\",\n          \"-и\",\n          \"-ю\",\n          \"-ем\",\n          \"-ем\"\n        ]\n      }\n    ]\n  },\n  \"middlename\": {\n    \"suffixes\": [\n      {\n        \"gender\": \"male\",\n        \"test\": [\n          \"ич\"\n        ],\n        \"mods\": [\n          \"а\",\n          \"у\",\n          \"а\",\n          \"ем\",\n          \"е\"\n        ]\n      },\n      {\n        \"gender\": \"female\",\n        \"test\": [\n          \"на\"\n        ],\n        \"mods\": [\n          \"-ы\",\n          \"-е\",\n          \"-у\",\n          \"-ой\",\n          \"-е\"\n        ]\n      }\n    ]\n  }\n};\n\n})();"],"mappings":"AAAA,YAAY;;AAEZ,CAAC,YAAY;EAET;EACA,IAAIA,MAAM,GAAG;IACTC,OAAO,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,aAAa,CAAC;IAC1CC,SAAS,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC;IACtCC,KAAK,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE,eAAe;EAC7F,CAAC;;EAED;EACA,SAASC,QAAQA,CAACC,GAAG,EAAEC,CAAC,EAAE;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACjC,IAAIF,GAAG,CAACE,CAAC,CAAC,KAAKD,CAAC,EAAE,OAAO,IAAI;IACjC;IACA,OAAO,KAAK;EAChB;;EAEA;EACA;EACA;EACA,IAAIG,SAAS,GAAG,SAAAA,CAAUC,MAAM,EAAEC,KAAK,EAAE;IACrC,IAAIC,MAAM,GAAG,CAAC,CAAC;IACf;IACA,IAAIF,MAAM,CAACG,MAAM,IAAI,IAAI,EAAE;MACvB,IAAI,CAACT,QAAQ,CAACJ,MAAM,CAACC,OAAO,EAAES,MAAM,CAACG,MAAM,CAAC,EACxC,MAAM,IAAIC,KAAK,CAAC,kBAAkB,GAAGJ,MAAM,CAACG,MAAM,CAAC;MACvDD,MAAM,CAACC,MAAM,GAAGH,MAAM,CAACG,MAAM;IACjC,CAAC,MAAM,IAAIH,MAAM,CAACK,MAAM,IAAI,IAAI,EAAE;MAC9BH,MAAM,CAACC,MAAM,GAAGJ,SAAS,CAACO,aAAa,CAACN,MAAM,CAACK,MAAM,CAAC;IAC1D,CAAC,MAAM;MACH,MAAM,IAAID,KAAK,CAAC,gBAAgB,CAAC;IACrC;IACA,IAAI,CAACV,QAAQ,CAACJ,MAAM,CAACG,KAAK,EAAEQ,KAAK,CAAC,EAC9B,MAAM,IAAIG,KAAK,CAAC,gBAAgB,GAAGH,KAAK,CAAC;IAC7C;IACA,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,MAAM,CAACE,SAAS,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;MAC9C,IAAIU,QAAQ,GAAGjB,MAAM,CAACE,SAAS,CAACK,CAAC,CAAC;MAClC,IAAIG,MAAM,CAACO,QAAQ,CAAC,IAAI,IAAI,EAAE;QAC1BL,MAAM,CAACK,QAAQ,CAAC,GACZC,OAAO,CAACN,MAAM,CAACC,MAAM,EAAEH,MAAM,CAACO,QAAQ,CAAC,EAAEN,KAAK,EAAEM,QAAQ,GAAG,MAAM,CAAC;MAC1E;IACJ;IACA,OAAOL,MAAM;EACjB,CAAC;EAEDH,SAAS,CAACO,aAAa,GAAG,UAAUD,MAAM,EAAE;IACxC,IAAII,MAAM,GAAGJ,MAAM,CAACK,WAAW,CAAC,CAAC,CAACC,MAAM,CAACN,MAAM,CAACP,MAAM,GAAG,CAAC,CAAC;IAC3D,IAAIW,MAAM,KAAK,IAAI,EAAE,OAAO,MAAM,CAAC,KAC9B,IAAIA,MAAM,KAAK,IAAI,EAAE,OAAO,QAAQ,CAAC,KACrC,OAAO,aAAa;EAC7B,CAAC;;EAED;EACA;EACA;EACA,CAAC,YAAY;IACT,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,MAAM,CAACC,OAAO,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;MAC5C,IAAIM,MAAM,GAAGb,MAAM,CAACC,OAAO,CAACM,CAAC,CAAC;MAE9B,IAAI,CAACE,SAAS,CAACI,MAAM,CAAC,EAAEJ,SAAS,CAACI,MAAM,CAAC,GAAG,CAAC,CAAC;MAE9C,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtB,MAAM,CAACE,SAAS,CAACM,MAAM,EAAEc,CAAC,EAAE,EAAE;QAC9C,IAAIL,QAAQ,GAAGjB,MAAM,CAACE,SAAS,CAACoB,CAAC,CAAC;QAClC,IAAI,CAACb,SAAS,CAACI,MAAM,CAAC,CAACI,QAAQ,CAAC,EAC5BR,SAAS,CAACI,MAAM,CAAC,CAACI,QAAQ,CAAC,GAAG,CAAC,CAAC;QAEpC,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,MAAM,CAACG,KAAK,CAACK,MAAM,EAAEe,CAAC,EAAE,EAAE;UAC1C,IAAIZ,KAAK,GAAGX,MAAM,CAACG,KAAK,CAACoB,CAAC,CAAC;UAC3B;UACAd,SAAS,CAACI,MAAM,CAAC,CAACI,QAAQ,CAAC,CAACN,KAAK,CAAC,GAC7B,UAAUE,MAAM,EAAEI,QAAQ,EAAEN,KAAK,EAAE;YAChC,OAAO,UAAUa,IAAI,EAAE;cACnB,OAAON,OAAO,CAACL,MAAM,EAAEW,IAAI,EAAEb,KAAK,EAAEM,QAAQ,GAAG,MAAM,CAAC;YAC1D,CAAC;UACL,CAAC,CAAEJ,MAAM,EAAEI,QAAQ,EAAEN,KAAK,CAAC;QACnC;MACJ;IACJ;EACJ,CAAC,EAAE,CAAC;;EAGJ;EACA,IAAI,OAAOc,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,OAAO,EAAED,MAAM,CAACC,OAAO,GAAGjB,SAAS,CAAC,KAC3E,IAAIkB,MAAM,EAAEA,MAAM,CAAClB,SAAS,GAAGA,SAAS,CAAC,KACzC,MAAM,IAAIK,KAAK,CAAC,qBAAqB,CAAC;;EAG3C;EACA,SAASI,OAAOA,CAACL,MAAM,EAAEW,IAAI,EAAEb,KAAK,EAAEM,QAAQ,EAAE;IAC5C,IAAIW,iBAAiB,GAAGC,KAAK,CAACZ,QAAQ,CAAC;MACnCa,KAAK,GAAGN,IAAI,CAACO,KAAK,CAAC,GAAG,CAAC;MACvBnB,MAAM,GAAG,EAAE;IACf,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuB,KAAK,CAACtB,MAAM,EAAED,CAAC,EAAE,EAAE;MACnC,IAAIyB,IAAI,GAAGF,KAAK,CAACvB,CAAC,CAAC;QAAE0B,UAAU,GAAG1B,CAAC,KAAK,CAAC,IAAIuB,KAAK,CAACI,IAAI,GAAG,CAAC;QACvDC,IAAI,GAAGC,gBAAgB,CAACvB,MAAM,EAAEmB,IAAI,EAChCJ,iBAAiB,EAAE;UAACK,UAAU,EAAEA;QAAU,CAAC,CAAC;MACpD,IAAIE,IAAI,EAAEvB,MAAM,CAACyB,IAAI,CAACC,UAAU,CAACN,IAAI,EAAErB,KAAK,EAAEwB,IAAI,CAAC,CAAC,CAAC,KAChDvB,MAAM,CAACyB,IAAI,CAACL,IAAI,CAAC;IAC1B;IACA,OAAOpB,MAAM,CAAC2B,IAAI,CAAC,GAAG,CAAC;EAC3B;;EAGA;EACA,SAASH,gBAAgBA,CAACvB,MAAM,EAAEW,IAAI,EAAEI,iBAAiB,EAAEY,QAAQ,EAAE;IACjE,IAAI,CAACA,QAAQ,EAAEA,QAAQ,GAAG,CAAC,CAAC;IAC5B,IAAIC,IAAI,GAAG,EAAE;IACb,KAAK,IAAIC,GAAG,IAAIF,QAAQ,EAAE;MACtB,IAAIA,QAAQ,CAACG,cAAc,CAACD,GAAG,CAAC,EAAED,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC;IACpD;IACA,IAAId,iBAAiB,CAACgB,UAAU,EAAE;MAC9B,IAAIT,IAAI,GAAGU,eAAe,CACtBhC,MAAM,EAAEW,IAAI,EAAEI,iBAAiB,CAACgB,UAAU,EAAE,IAAI,EAAEH,IAAI,CAAC;MAC3D,IAAIN,IAAI,EAAE,OAAOA,IAAI;IACzB;IACA,OAAOU,eAAe,CAClBhC,MAAM,EAAEW,IAAI,EAAEI,iBAAiB,CAACkB,QAAQ,EAAE,KAAK,EAAEL,IAAI,CAAC;EAC9D;EAAC;;EAGD;EACA,SAASI,eAAeA,CAAChC,MAAM,EAAEW,IAAI,EAAEuB,OAAO,EAAEC,gBAAgB,EAAEP,IAAI,EAAE;IACpE,KAAK,IAAIlC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwC,OAAO,CAACvC,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,IAAI4B,IAAI,GAAGY,OAAO,CAACxC,CAAC,CAAC;MACrB,IAAI4B,IAAI,CAACM,IAAI,EAAE;QACX,IAAIQ,WAAW,GAAG,EAAE;QACpB,KAAK,IAAI3B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGa,IAAI,CAACM,IAAI,CAACjC,MAAM,EAAEc,CAAC,EAAE,EAAE;UACvC,IAAI4B,GAAG,GAAGf,IAAI,CAACM,IAAI,CAACnB,CAAC,CAAC;UACtB,IAAI,CAAClB,QAAQ,CAACqC,IAAI,EAAES,GAAG,CAAC,EAAED,WAAW,CAACZ,IAAI,CAACa,GAAG,CAAC;QACnD;QACA,IAAI,CAACD,WAAW,CAACzC,MAAM,EAAE;MAC7B;MACA,IAAI2B,IAAI,CAACtB,MAAM,KAAK,aAAa,IAAIA,MAAM,KAAKsB,IAAI,CAACtB,MAAM,EACvD;MAEJW,IAAI,GAAGA,IAAI,CAACJ,WAAW,CAAC,CAAC;MACzB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGa,IAAI,CAACgB,IAAI,CAAC3C,MAAM,EAAEc,CAAC,EAAE,EAAE;QACvC,IAAI8B,MAAM,GAAGjB,IAAI,CAACgB,IAAI,CAAC7B,CAAC,CAAC;QACzB,IAAI6B,IAAI,GAAGH,gBAAgB,GAAGxB,IAAI,GAC9BA,IAAI,CAACH,MAAM,CAACG,IAAI,CAAChB,MAAM,GAAG4C,MAAM,CAAC5C,MAAM,CAAC;QAC5C,IAAI2C,IAAI,KAAKC,MAAM,EAAE,OAAOjB,IAAI;MACpC;IACJ;IACA,OAAO,KAAK;EAChB;;EAGA;EACA;EACA,SAASG,UAAUA,CAACd,IAAI,EAAEb,KAAK,EAAEwB,IAAI,EAAE;IACnC,IAAIkB,GAAG;IACP,IAAI1C,KAAK,KAAK,YAAY,EAAE0C,GAAG,GAAG,GAAG,CAAC,KACjC;MACD,KAAK,IAAI9C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,MAAM,CAACG,KAAK,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;QAC1C,IAAII,KAAK,KAAKX,MAAM,CAACG,KAAK,CAACI,CAAC,CAAC,EAAE;UAC3B8C,GAAG,GAAGlB,IAAI,CAACmB,IAAI,CAAC/C,CAAC,GAAG,CAAC,CAAC;UACtB;QACJ;MAEJ;IACJ;IAEA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8C,GAAG,CAAC7C,MAAM,EAAED,CAAC,EAAE,EAAE;MACjC,IAAIgD,GAAG,GAAGF,GAAG,CAAC9C,CAAC,CAAC;MAChB,QAAQgD,GAAG;QACP,KAAK,GAAG;UACJ;QACJ,KAAK,GAAG;UACJ/B,IAAI,GAAGA,IAAI,CAACH,MAAM,CAAC,CAAC,EAAEG,IAAI,CAAChB,MAAM,GAAG,CAAC,CAAC;UACtC;QACJ;UACIgB,IAAI,IAAI+B,GAAG;MACnB;IACJ;IACA,OAAO/B,IAAI;EACf;EAGA,IAAIK,KAAK,GACb;IACE,UAAU,EAAE;MACV,YAAY,EAAE,CACZ;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,MAAM,EACN,OAAO,EACP,OAAO,EACP,OAAO,EACP,QAAQ,EACR,OAAO,EACP,SAAS,EACT,QAAQ,EACR,KAAK,EACL,OAAO,EACP,KAAK,EACL,SAAS,EACT,OAAO,EACP,KAAK,EACL,KAAK,CACN;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ;QACD,MAAM,EAAE,CACN,YAAY;MAEhB,CAAC,EACD;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACP,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,SAAS,CACV;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,QAAQ,EACR,SAAS,EACT,YAAY,EACZ,SAAS,EACT,MAAM,EACN,MAAM,CACP;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,GAAG,CACJ;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG;MAEP,CAAC,CACF;MACD,UAAU,EAAE,CACV;QACE,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,MAAM,EACN,OAAO,CACR;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,CACN,KAAK,EACL,KAAK,CACN;QACD,MAAM,EAAE,CACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK;MAET,CAAC,EACD;QACE,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,CACN,MAAM,EACN,MAAM,EACN,KAAK,EACL,IAAI,CACL;QACD,MAAM,EAAE,CACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM;MAEV,CAAC,EACD;QACE,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM;MAEV,CAAC,EACD;QACE,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,KAAK,EACL,KAAK,EACL,IAAI,EACJ,KAAK,EACL,KAAK;MAET,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,MAAM,CACP;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,KAAK,CACN;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,CACL;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,CACL;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,CACN,KAAK,EACL,KAAK,CACN;QACD,MAAM,EAAE,CACN,KAAK,EACL,KAAK,EACL,IAAI,EACJ,KAAK,EACL,KAAK;MAET,CAAC,EACD;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,CACL;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,GAAG,CACJ;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,GAAG,CACJ;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,GAAG,CACJ;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,CACL;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,MAAM,EACN,MAAM,CACP;QACD,MAAM,EAAE,CACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACP,MAAM;MAEV,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,MAAM,EACN,MAAM,CACP;QACD,MAAM,EAAE,CACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACP,MAAM;MAEV,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,KAAK,CACN;QACD,MAAM,EAAE,CACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,MAAM,EACN,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,KAAK,CACN;QACD,MAAM,EAAE,CACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,MAAM,EACN,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,MAAM,EACN,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,CACL;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;QACD,MAAM,EAAE,CACN,OAAO,EACP,OAAO,EACP,OAAO,EACP,IAAI,EACJ,MAAM;MAEV,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,OAAO,EACP,OAAO,EACP,OAAO,EACP,IAAI,EACJ,MAAM;MAEV,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,KAAK,CACN;QACD,MAAM,EAAE,CACN,OAAO,EACP,OAAO,EACP,OAAO,EACP,IAAI,EACJ,MAAM;MAEV,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACP,MAAM;MAEV,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACP,MAAM;MAEV,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,CACL;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,GAAG,EACH,GAAG,CACJ;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,GAAG;MAEP,CAAC;IAEL,CAAC;IACD,WAAW,EAAE;MACX,YAAY,EAAE,CACZ;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,KAAK,CACN;QACD,MAAM,EAAE,CACN,OAAO,EACP,OAAO,EACP,OAAO,EACP,QAAQ,EACR,OAAO;MAEX,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,MAAM,CACP;QACD,MAAM,EAAE,CACN,SAAS,EACT,SAAS,EACT,SAAS,EACT,UAAU,EACV,SAAS;MAEb,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,OAAO,CACR;QACD,MAAM,EAAE,CACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACP,MAAM;MAEV,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,KAAK,CACN;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,MAAM,CACP;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,CACN,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,UAAU,EACV,SAAS,CACV;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG;MAEP,CAAC,CACF;MACD,UAAU,EAAE,CACV;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,CACN,GAAG,CACJ;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,GAAG,EACH,GAAG,EACH,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,GAAG,CACJ;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,CACL;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,GAAG,CACJ;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,CACN,GAAG,CACJ;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,CACN,GAAG,CACJ;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,GAAG,CACJ;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,GAAG,CACJ;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC,EACD;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CACN,KAAK,EACL,KAAK,EACL,KAAK,CACN;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,KAAK;MAET,CAAC;IAEL,CAAC;IACD,YAAY,EAAE;MACZ,UAAU,EAAE,CACV;QACE,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,GAAG;MAEP,CAAC,EACD;QACE,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,CACN,IAAI,CACL;QACD,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI;MAER,CAAC;IAEL;EACF,CAAC;AAED,CAAC,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}